version: 2.1
orbs:
  hmpps: ministryofjustice/hmpps@11
  codecov: codecov/codecov@3.2.0
parameters:
  releases-slack-channel:
    type: string
    default: the_elephants_devs
  java-version:
    type: string
    default: "21.0"
  localstack-version:
    type: string
    default: "3.0.2"
  postgres-version:
    type: string
    default: "17.5"
jobs:
  validate:
    executor:
      name: hmpps/java
      tag: << pipeline.parameters.java-version >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew -Dorg.gradle.jvmargs="--illegal-access=permit" -Dkotlin.daemon.jvm.options="--illegal-access=permit" check
      - codecov/upload:
          file: build/reports/jacoco/test/jacocoTestReport.xml
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - store_artifacts:
          path: build/reports/jacoco
  integration-test:
    docker:
      - image: cimg/openjdk:21.0
      - image: localstack/localstack:3.0.2
        environment:
          SERVICES: "sns,sqs"
          ES_PORT_EXTERNAL: 4571
          DEBUG: ${DEBUG- }
          DOCKER_HOST: unix:///var/run/docker.sock
          AWS_EXECUTION_ENV: true
          PERSISTENCE: 1
      - image: postgres:17.5
        environment:
          POSTGRES_PASSWORD: cvl
          POSTGRES_USER: cvl
          POSTGRES_DB: create-and-vary-a-licence-db
          PGPORT: 5433
    environment:
      _JAVA_OPTIONS: >-
        -Xmx512m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2
        -Djava.util.concurrent.ForkJoinPool.common.parallelism=2
        -Dorg.gradle.daemon=false
        -Dkotlin.compiler.execution.strategy=in-process
        -Dorg.gradle.workers.max=1
    working_directory: ~/app
    resource_class: medium
    steps:
      - checkout

      - restore_cache:
          keys:
            - gradle-cache-{{ checksum "build.gradle.kts" }}
            - gradle-cache-

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Start PostgreSQL in RAM using tmpfs
          command: |
            docker stop pg-tmpfs || true
            docker rm pg-tmpfs || true

            docker run -d \
              --name pg-tmpfs \
              --network container:$(hostname) \
              -e POSTGRES_PASSWORD=cvl \
              -e POSTGRES_USER=cvl \
              -e POSTGRES_DB=create-and-vary-a-licence-db \
              --tmpfs /var/lib/postgresql/data:rw,noexec,nosuid,size=512m \
              -p 5433:5432 \
              postgres:17.5

      - run:
          name: Wait for services
          command: |
            for i in {1..30}; do pg_isready -h localhost -p 5433 && break; sleep 1; done
            for i in {1..30}; do nc -z localhost 4566 && break; sleep 1; done

      - run:
          name: Confirm PostgreSQL is in RAM
          command: |
            docker exec pg-tmpfs mount | grep /var/lib/postgresql/data
            docker exec pg-tmpfs df -h /var/lib/postgresql/data

      - run:
          name: Run integration tests
          command: ./gradlew -Dorg.gradle.jvmargs="--illegal-access=permit" -Dkotlin.daemon.jvm.options="--illegal-access=permit" integrationTest

      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}

      - store_test_results:
          path: build/test-results

      - store_artifacts:
          path: build/reports/tests
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - hmpps/database_schema_report:
            jdk_tag: << pipeline.parameters.java-version >>
            localstack_tag: << pipeline.parameters.localstack-version >>
            postgres_tag: << pipeline.parameters.postgres-version >>
            database_name: create-and-vary-a-licence-db
            user: cvl
            password: cvl
            port: 5433
            initialise_database: ./gradlew -Dorg.gradle.jvmargs="--illegal-access=permit" -Dkotlin.daemon.jvm.options="--illegal-access=permit" initialiseDatabase
            filters:
              branches:
                only:
                  - main
      - validate:
          filters:
            tags:
              ignore: /.*/
      - integration-test:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
                - /test.*/
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - integration-test
            - build_docker
            - helm_lint
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          context:
            - hmpps-common-vars
            - create-and-vary-a-licence-api-preprod
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - create-and-vary-a-licence-api-prod
          requires:
            - request-prod-approval
      - hmpps/deploy_env:
          name: deploy_test1
          env: "test1"
          context:
            - hmpps-common-vars
            - create-and-vary-a-licence-test1
          requires:
            - build_docker
          filters:
            branches:
              only:
                - test1
      - hmpps/deploy_env:
          name: deploy_test2
          env: "test2"
          context:
            - hmpps-common-vars
            - create-and-vary-a-licence-test2
          requires:
            - build_docker
          filters:
            branches:
              only:
                - main
