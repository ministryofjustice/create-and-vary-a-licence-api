<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ConstructorParameterNaming:IntegrationTestBase.kt$IntegrationTestBase.EventType$val Type: String</ID>
    <ID>ConstructorParameterNaming:IntegrationTestBase.kt$IntegrationTestBase.EventType$val Value: String</ID>
    <ID>ConstructorParameterNaming:IntegrationTestBase.kt$IntegrationTestBase.Message$val Message: String</ID>
    <ID>ConstructorParameterNaming:IntegrationTestBase.kt$IntegrationTestBase.Message$val MessageAttributes: MessageAttributes</ID>
    <ID>ConstructorParameterNaming:IntegrationTestBase.kt$IntegrationTestBase.Message$val MessageId: String</ID>
    <ID>CyclomaticComplexMethod:LicenceService.kt$LicenceService$private fun updateLicenceStatus(licenceEntity: EntityLicence, request: StatusUpdateRequest)</ID>
    <ID>CyclomaticComplexMethod:ToSarModelTransfer.kt$fun LicenceEventType.toSarLicenceEventType(): SarLicenceEventType</ID>
    <ID>EmptyClassBlock:LicencePolicyServiceTest.kt$LicencePolicyServiceTest.Companion${ }</ID>
    <ID>ForbiddenComment:HdcService.kt$HdcService.HdcStatuses$* For CA: * Always show started cases regardless of HDC status. * TODO: will need to fix when we start to show prospective HDC cases in caselist * If licence hasn't been started, only show !approved licences.</ID>
    <ID>ForbiddenComment:HdcService.kt$HdcService.HdcStatuses$* For COM: * If licence hasn't been started base on whether licence is approved. * TODO: will need to fix when we start to show prospective HDC cases in caselist * If licence has been started then show when (approved and HDC) or (!approved and !hdc)</ID>
    <ID>InvalidPackageDeclaration:RemoveExpiredConditionsServiceTest.kt$package uk.gov.justice.digital.hmpps.createandvaryalicenceapi.service</ID>
    <ID>LargeClass:ComCaseloadSearchServiceTest.kt$ComCaseloadSearchServiceTest</ID>
    <ID>LargeClass:ComCaseloadServiceTest.kt$ComCaseloadServiceTest</ID>
    <ID>LargeClass:ConditionFormatterTest.kt$ConditionFormatterTest</ID>
    <ID>LargeClass:LicenceController.kt$LicenceController</ID>
    <ID>LargeClass:LicenceService.kt$LicenceService</ID>
    <ID>LargeClass:LicenceServiceTest.kt$LicenceServiceTest</ID>
    <ID>LargeClass:TestData.kt$TestData</ID>
    <ID>LargeClass:UpdateSentenceDateServiceTest.kt$UpdateSentenceDateServiceTest</ID>
    <ID>LongMethod:ApproverCaseloadServiceTest.kt$ApproverCaseloadServiceTest.Build getApprovalNeeded caseload.Build approval caseload$@Test fun `It builds the approval needed caseload successfully with multiple cases`()</ID>
    <ID>LongMethod:ApproverCaseloadServiceTest.kt$ApproverCaseloadServiceTest.Build getApprovalNeeded caseload.Build approval caseload$@Test fun `null release dates are surfaced above other release dates for the approval needed caseload`()</ID>
    <ID>LongMethod:ApproverCaseloadServiceTest.kt$ApproverCaseloadServiceTest.Build getApprovalNeeded caseload.Build approval caseload$@Test fun `the approval needed caseload is sorted correctly`()</ID>
    <ID>LongMethod:ApproverCaseloadServiceTest.kt$ApproverCaseloadServiceTest.Build getRecentlyApproved caseload.Build recently approved caseload$@Test fun `It builds the recently approved caseload successfully with multiple cases`()</ID>
    <ID>LongMethod:ApproverCaseloadServiceTest.kt$ApproverCaseloadServiceTest.Build getRecentlyApproved caseload.Build recently approved caseload$@Test fun `null release dates are surfaced above other release dates for the recently approved caseload`()</ID>
    <ID>LongMethod:ApproverCaseloadServiceTest.kt$ApproverCaseloadServiceTest.Build getRecentlyApproved caseload.Build recently approved caseload$@Test fun `the recently approved caseload is sorted correctly`()</ID>
    <ID>LongMethod:CaCaseloadServiceTest.kt$CaCaseloadServiceTest.Prison tab caseload$@Test fun `should filter out cases with an existing ACTIVE licence`()</ID>
    <ID>LongMethod:CaCaseloadServiceTest.kt$CaCaseloadServiceTest.Prison tab caseload$@Test fun `should filter out duplicate cases, prioritising existing licences`()</ID>
    <ID>LongMethod:CaCaseloadServiceTest.kt$CaCaseloadServiceTest.Prison tab caseload$@Test fun `should return sorted results in ascending order`()</ID>
    <ID>LongMethod:CaCaseloadServiceTest.kt$CaCaseloadServiceTest.Probation tab caseload$@Test fun `should return sorted results in descending order`()</ID>
    <ID>LongMethod:ChangeLicenceTypeIntegrationTest.kt$ChangeLicenceTypeIntegrationTest$@Test fun `Change licence type`()</ID>
    <ID>LongMethod:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$@Test fun `it builds the staff create caseload`()</ID>
    <ID>LongMethod:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$@Test fun `it builds the staff vary caseload where there are multiple licences`()</ID>
    <ID>LongMethod:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$@Test fun `it builds the staff vary caseload where there is a single licence`()</ID>
    <ID>LongMethod:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$@Test fun `it builds the staff vary caseload with Review Needed status`()</ID>
    <ID>LongMethod:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$@Test fun `it builds the team create caseload`()</ID>
    <ID>LongMethod:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$@Test fun `it builds the team vary caseload with Review Needed status`()</ID>
    <ID>LongMethod:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$@Test fun `it builds the team vary caseload`()</ID>
    <ID>LongMethod:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$@Test fun `it filters offenders who are ineligible for a licence`()</ID>
    <ID>LongMethod:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$@Test fun `it filters out cases passed LSD`()</ID>
    <ID>LongMethod:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$@Test fun `it filters recalls and breach of supervision on team create caseload`()</ID>
    <ID>LongMethod:ConditionFormatterTest.kt$ConditionFormatterTest$@Test fun `Will correctly format an address`()</ID>
    <ID>LongMethod:ConditionFormatterTest.kt$ConditionFormatterTest$@Test fun `Will make sense with multiple optional values - none supplied`()</ID>
    <ID>LongMethod:ConditionFormatterTest.kt$ConditionFormatterTest$@Test fun `Will make sense with multiple optional values - two supplied`()</ID>
    <ID>LongMethod:ConditionFormatterTest.kt$ConditionFormatterTest$@Test fun `Will replace adjust wording where values start with vowel`()</ID>
    <ID>LongMethod:ConditionFormatterTest.kt$ConditionFormatterTest$@Test fun `Will replace placeholders for a list of 2 values with an 'OR' between them (list type OR)`()</ID>
    <ID>LongMethod:ConditionFormatterTest.kt$ConditionFormatterTest$@Test fun `Will replace placeholders for a list of values with commas and 'and' between (list type AND)`()</ID>
    <ID>LongMethod:ConditionFormatterTest.kt$ConditionFormatterTest$@Test fun `Will replace placeholders for a list of values with commas and an 'OR' between them (list type OR)`()</ID>
    <ID>LongMethod:ConditionFormatterTest.kt$ConditionFormatterTest$@Test fun `Will replace placeholders for a list with and 'and' between them and include optional text for optional values`()</ID>
    <ID>LongMethod:ConditionFormatterTest.kt$ConditionFormatterTest$@Test fun `Will replace placeholders for conditional reveal inputs`()</ID>
    <ID>LongMethod:CrdLicence.kt$CrdLicence$fun copy( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, ): CrdLicence</ID>
    <ID>LongMethod:CrdLicence.kt$CrdLicence$override fun toString(): String</ID>
    <ID>LongMethod:DeliusMockServer.kt$DeliusMockServer$fun stubGetManagedOffenders(staffIdentifier: Long = 1L)</ID>
    <ID>LongMethod:DeliusMockServer.kt$DeliusMockServer$fun stubGetManagersForGetApprovalCaseload()</ID>
    <ID>LongMethod:DeliusMockServer.kt$DeliusMockServer$fun stubGetManagersForRecentlyApprovedCaseload()</ID>
    <ID>LongMethod:DeliusMockServer.kt$DeliusMockServer$fun stubGetTeamManagedCases()</ID>
    <ID>LongMethod:HardStopLicence.kt$HardStopLicence$fun copy( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: PrisonUser? = this.submittedBy, createdBy: PrisonUser? = this.createdBy, substituteOfId: Long? = this.substituteOfId, reviewDate: LocalDateTime? = this.reviewDate, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, ): HardStopLicence</ID>
    <ID>LongMethod:HardStopLicence.kt$HardStopLicence$override fun toString(): String</ID>
    <ID>LongMethod:HdcApiMockServer.kt$HdcApiMockServer$fun stubGetHdcLicenceData(bookingId: Long = 54321)</ID>
    <ID>LongMethod:HdcIntegrationTest.kt$HdcIntegrationTest.GetHdcLicenceData$@Test @Sql( "classpath:test_data/seed-hdc-licence-id-1.sql", "classpath:test_data/seed-hdc-curfew-address.sql", "classpath:test_data/seed-hdc-curfew-hours.sql", ) fun `Get curfew data from DB when it exists by licence ID`()</ID>
    <ID>LongMethod:HdcIntegrationTest.kt$HdcIntegrationTest.GetHdcLicenceData$@Test @Sql( "classpath:test_data/seed-hdc-licence-id-1.sql", ) fun `Get HDC licence data by licence ID`()</ID>
    <ID>LongMethod:HdcLicence.kt$HdcLicence$fun copy( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, homeDetentionCurfewActualDate: LocalDate? = this.homeDetentionCurfewActualDate, homeDetentionCurfewEndDate: LocalDate? = this.homeDetentionCurfewEndDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, curfewTimes: List&lt;HdcCurfewTimes&gt; = this.curfewTimes, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, curfewAddress: HdcCurfewAddress? = this.curfewAddress, ): HdcLicence</ID>
    <ID>LongMethod:HdcLicence.kt$HdcLicence$override fun toString(): String</ID>
    <ID>LongMethod:HdcVariationLicence.kt$HdcVariationLicence$fun copy( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, homeDetentionCurfewActualDate: LocalDate? = this.homeDetentionCurfewActualDate, homeDetentionCurfewEndDate: LocalDate? = this.homeDetentionCurfewEndDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, spoDiscussion: String? = this.spoDiscussion, vloDiscussion: String? = this.vloDiscussion, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, variationOfId: Long? = this.variationOfId, licenceVersion: String? = this.licenceVersion, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, curfewTimes: List&lt;HdcCurfewTimes&gt; = this.curfewTimes, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, updatedBy: Staff? = this.updatedBy, curfewAddress: HdcCurfewAddress? = this.curfewAddress, ): HdcVariationLicence</ID>
    <ID>LongMethod:HdcVariationLicence.kt$HdcVariationLicence$override fun toString(): String</ID>
    <ID>LongMethod:LicenceActivationIntegrationTest.kt$LicenceActivationIntegrationTest$@Test @Sql( "classpath:test_data/seed-licences-for-activation.sql", ) fun `Run licence activation job`()</ID>
    <ID>LongMethod:LicenceOverrideService.kt$LicenceOverrideService$@Transactional fun changeDates(licenceId: Long, request: OverrideLicenceDatesRequest)</ID>
    <ID>LongMethod:LicenceService.kt$LicenceService$private fun populateCopyAndAudit( kind: LicenceKind, licence: EntityLicence, licenceCopy: EntityLicence, creator: CommunityOffenderManager, ): EntityLicence</ID>
    <ID>LongMethod:LicenceService.kt$LicenceService$private fun updateLicenceStatus(licenceEntity: EntityLicence, request: StatusUpdateRequest)</ID>
    <ID>LongMethod:LicenceServiceTest.kt$LicenceServiceTest$@Test fun `activate licences deactivates a newer in progress version of a licence`()</ID>
    <ID>LongMethod:LicenceServiceTest.kt$LicenceServiceTest$@Test fun `activate licences deactivates an older timed out version of a licence`()</ID>
    <ID>LongMethod:LicenceServiceTest.kt$LicenceServiceTest$@Test fun `update HDC licence status to APPROVED deactivates previous version of HDC licence`()</ID>
    <ID>LongMethod:LicenceServiceTest.kt$LicenceServiceTest$@Test fun `update licence status to APPROVED deactivates previous version of CRD licence`()</ID>
    <ID>LongMethod:PrisonerSearchMockServer.kt$PrisonerSearchMockServer$fun stubSearchPrisonersByBookingIds()</ID>
    <ID>LongMethod:PrisonerSearchMockServer.kt$PrisonerSearchMockServer$fun stubSearchPrisonersByNomisIds(prisonerSearchResponse: String? = null)</ID>
    <ID>LongMethod:PrisonerSearchMockServer.kt$PrisonerSearchMockServer$fun stubSearchPrisonersByReleaseDate(page: Int, inHardStop: Boolean = true)</ID>
    <ID>LongMethod:PublicLicencePolicyServiceTest.kt$PublicLicencePolicyServiceTest$@Test fun `service returns a policy by version number`()</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toCrd( licence: CrdLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toHardstop( licence: HardStopLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toHdc( licence: HdcLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toHdcVariation( licence: HdcVariationLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toVariation( licence: VariationLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, ): ModelVariationLicence</ID>
    <ID>LongMethod:UpdateSentenceDateService.kt$UpdateSentenceDateService$@Transactional fun updateSentenceDates(licenceId: Long, sentenceDatesRequest: UpdateSentenceDatesRequest)</ID>
    <ID>LongMethod:UpdateSentenceDateServiceTest.kt$UpdateSentenceDateServiceTest$@Test fun `Recalculates Licence Start Date rather than reading from the request`()</ID>
    <ID>LongMethod:UpdateSentenceDateServiceTest.kt$UpdateSentenceDateServiceTest$@Test fun `update sentence dates persists the updated HDCAD if HDC licence`()</ID>
    <ID>LongMethod:UpdateSentenceDateServiceTest.kt$UpdateSentenceDateServiceTest$@Test fun `update sentence dates persists the updated entity with null dates`()</ID>
    <ID>LongMethod:UpdateSentenceDateServiceTest.kt$UpdateSentenceDateServiceTest$@Test fun `update sentence dates persists the updated entity`()</ID>
    <ID>LongMethod:UpdateSentenceDatesIntegrationTest.kt$UpdateSentenceDatesIntegrationTest$@Test @Sql( "classpath:test_data/seed-licence-id-1.sql", ) fun `Update sentence dates should inactivate licence where licence was in hard stop period but is no longer in hard stop period`()</ID>
    <ID>LongMethod:VariationLicence.kt$VariationLicence$fun copy( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, spoDiscussion: String? = this.spoDiscussion, vloDiscussion: String? = this.vloDiscussion, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, variationOfId: Long? = this.variationOfId, licenceVersion: String? = this.licenceVersion, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, updatedBy: Staff? = this.updatedBy, ): VariationLicence</ID>
    <ID>LongMethod:VariationLicence.kt$VariationLicence$override fun toString(): String</ID>
    <ID>LongParameterList:CaCaseloadService.kt$CaCaseloadService$( private val caseloadService: CaseloadService, private val licenceService: LicenceService, private val hdcService: HdcService, private val eligibilityService: EligibilityService, private val clock: Clock, private val deliusApiClient: DeliusApiClient, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val releaseDateService: ReleaseDateService, )</ID>
    <ID>LongParameterList:ComCaseloadSearchService.kt$ComCaseloadSearchService$( private val licenceRepository: LicenceRepository, private val deliusApiClient: DeliusApiClient, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val hdcService: HdcService, private val eligibilityService: EligibilityService, private val releaseDateService: ReleaseDateService, private val clock: Clock, )</ID>
    <ID>LongParameterList:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$( case: ComCase, expectedCrn: String, expectedPrisonerNumber: String, expectedLicenceStatus: LicenceStatus, expectedLicenceType: LicenceType, expectedReleaseDate: LocalDate? = null, expectedProbationPractitioner: ProbationPractitioner? = null, expectedReviewNeeded: Boolean = false, )</ID>
    <ID>LongParameterList:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$( crn: String, nomisId: String, licenceType: LicenceType, licenceStatus: LicenceStatus, kind: LicenceKind = LicenceKind.CRD, licenceExpiryDate: LocalDate? = null, comUsername: String? = null, conditionalReleaseDate: LocalDate? = null, confirmedReleaseDate: LocalDate? = null, licenceStartDate: LocalDate? = null, isReviewNeeded: Boolean = false, )</ID>
    <ID>LongParameterList:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$( prisonerNumber: String, conditionalReleaseDate: LocalDate?, status: String = "ACTIVE IN", postRecallReleaseDate: LocalDate? = null, recall: Boolean = false, bookingId: String? = null, topupSupervisionExpiryDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, releaseDate: LocalDate? = null, imprisonmentStatus: String? = null, confirmedReleaseDate: LocalDate? = null, paroleEligibilityDate: LocalDate? = null, legalStatus: String? = null, indeterminateSentence: Boolean? = false, )</ID>
    <ID>LongParameterList:CommunityOffenderManager.kt$CommunityOffenderManager$( id: Long? = -1, val staffIdentifier: Long, username: String, email: String?, firstName: String?, lastName: String?, lastUpdatedTimestamp: LocalDateTime? = null, )</ID>
    <ID>LongParameterList:CommunityOffenderManager.kt$CommunityOffenderManager$( id: Long? = this.id, staffIdentifier: Long = this.staffIdentifier, username: String = this.username, email: String? = this.email, firstName: String? = this.firstName, lastName: String? = this.lastName, lastUpdatedTimestamp: LocalDateTime? = this.lastUpdatedTimestamp, )</ID>
    <ID>LongParameterList:CrdLicence.kt$CrdLicence$( id: Long = -1L, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointmentPersonType: AppointmentPersonType? = null, appointmentPerson: String? = null, appointmentTime: LocalDateTime? = null, appointmentTimeType: AppointmentTimeType? = null, appointmentAddress: String? = null, appointmentContact: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, val versionOfId: Long? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), responsibleCom: CommunityOffenderManager? = null, updatedBy: Staff? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) var createdBy: CommunityOffenderManager? = null, )</ID>
    <ID>LongParameterList:CrdLicence.kt$CrdLicence$( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, )</ID>
    <ID>LongParameterList:HardStopLicence.kt$HardStopLicence$( id: Long = -1L, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointmentPersonType: AppointmentPersonType? = null, appointmentPerson: String? = null, appointmentTime: LocalDateTime? = null, appointmentTimeType: AppointmentTimeType? = null, appointmentAddress: String? = null, appointmentContact: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), responsibleCom: CommunityOffenderManager? = null, updatedBy: Staff? = null, var reviewDate: LocalDateTime? = null, var substituteOfId: Long? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_ca_id", nullable = false) var createdBy: PrisonUser? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_ca_id", nullable = true) var submittedBy: PrisonUser? = null, )</ID>
    <ID>LongParameterList:HardStopLicence.kt$HardStopLicence$( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: PrisonUser? = this.submittedBy, createdBy: PrisonUser? = this.createdBy, substituteOfId: Long? = this.substituteOfId, reviewDate: LocalDateTime? = this.reviewDate, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, )</ID>
    <ID>LongParameterList:HdcLicence.kt$HdcLicence$( id: Long = -1L, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, override val homeDetentionCurfewActualDate: LocalDate? = null, val homeDetentionCurfewEndDate: LocalDate? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointmentPersonType: AppointmentPersonType? = null, appointmentPerson: String? = null, appointmentTime: LocalDateTime? = null, appointmentTimeType: AppointmentTimeType? = null, appointmentAddress: String? = null, appointmentContact: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, val versionOfId: Long? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), responsibleCom: CommunityOffenderManager? = null, updatedBy: Staff? = null, @OneToMany(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) @OrderBy("curfewTimesSequence") val curfewTimes: List&lt;HdcCurfewTimes&gt; = emptyList(), @OneToOne(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) val curfewAddress: HdcCurfewAddress? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) var createdBy: CommunityOffenderManager? = null, )</ID>
    <ID>LongParameterList:HdcLicence.kt$HdcLicence$( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, homeDetentionCurfewActualDate: LocalDate? = this.homeDetentionCurfewActualDate, homeDetentionCurfewEndDate: LocalDate? = this.homeDetentionCurfewEndDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, curfewTimes: List&lt;HdcCurfewTimes&gt; = this.curfewTimes, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, curfewAddress: HdcCurfewAddress? = this.curfewAddress, )</ID>
    <ID>LongParameterList:HdcVariationLicence.kt$HdcVariationLicence$( id: Long = -1L, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.VARIATION_IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, override val homeDetentionCurfewActualDate: LocalDate? = null, val homeDetentionCurfewEndDate: LocalDate? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointmentPersonType: AppointmentPersonType? = null, appointmentPerson: String? = null, appointmentTime: LocalDateTime? = null, appointmentTimeType: AppointmentTimeType? = null, appointmentAddress: String? = null, appointmentContact: String? = null, override var spoDiscussion: String? = null, override var vloDiscussion: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), responsibleCom: CommunityOffenderManager? = null, override var variationOfId: Long? = null, licenceVersion: String? = "1.0", updatedBy: Staff? = null, @OneToMany(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) @OrderBy("curfewTimesSequence") val curfewTimes: List&lt;HdcCurfewTimes&gt; = emptyList(), @OneToOne(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) val curfewAddress: HdcCurfewAddress? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) override var createdBy: CommunityOffenderManager? = null, )</ID>
    <ID>LongParameterList:HdcVariationLicence.kt$HdcVariationLicence$( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, homeDetentionCurfewActualDate: LocalDate? = this.homeDetentionCurfewActualDate, homeDetentionCurfewEndDate: LocalDate? = this.homeDetentionCurfewEndDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, spoDiscussion: String? = this.spoDiscussion, vloDiscussion: String? = this.vloDiscussion, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, variationOfId: Long? = this.variationOfId, licenceVersion: String? = this.licenceVersion, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, curfewTimes: List&lt;HdcCurfewTimes&gt; = this.curfewTimes, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, updatedBy: Staff? = this.updatedBy, curfewAddress: HdcCurfewAddress? = this.curfewAddress, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( @Id @GeneratedValue(strategy = GenerationType.IDENTITY) @NotNull var id: Long = -1, @NotNull @Enumerated(EnumType.STRING) @Column(name = "kind", insertable = false, updatable = false) var kind: LicenceKind, @NotNull @Enumerated(EnumType.STRING) var typeCode: LicenceType = LicenceType.AP, var version: String? = null, @NotNull @Enumerated(EnumType.STRING) var statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, val nomsId: String? = null, val bookingNo: String? = null, val bookingId: Long? = null, val crn: String? = null, val pnc: String? = null, val cro: String? = null, val prisonCode: String? = null, val prisonDescription: String? = null, val prisonTelephone: String? = null, val forename: String? = null, val middleNames: String? = null, val surname: String? = null, val dateOfBirth: LocalDate? = null, override val conditionalReleaseDate: LocalDate? = null, override val actualReleaseDate: LocalDate? = null, val sentenceStartDate: LocalDate? = null, val sentenceEndDate: LocalDate? = null, override val licenceStartDate: LocalDate? = null, val licenceExpiryDate: LocalDate? = null, val licenceActivatedDate: LocalDateTime? = null, val topupSupervisionStartDate: LocalDate? = null, val topupSupervisionExpiryDate: LocalDate? = null, val postRecallReleaseDate: LocalDate? = null, val probationAreaCode: String? = null, val probationAreaDescription: String? = null, val probationPduCode: String? = null, val probationPduDescription: String? = null, val probationLauCode: String? = null, val probationLauDescription: String? = null, val probationTeamCode: String? = null, val probationTeamDescription: String? = null, @Enumerated(EnumType.STRING) var appointmentPersonType: AppointmentPersonType? = null, var appointmentPerson: String? = null, @Enumerated(EnumType.STRING) var appointmentTimeType: AppointmentTimeType? = null, var appointmentTime: LocalDateTime? = null, var appointmentAddress: String? = null, var appointmentContact: String? = null, var approvedDate: LocalDateTime? = null, var approvedByUsername: String? = null, var approvedByName: String? = null, val supersededDate: LocalDateTime? = null, val submittedDate: LocalDateTime? = null, var dateCreated: LocalDateTime? = null, var dateLastUpdated: LocalDateTime? = null, var updatedByUsername: String? = null, var licenceVersion: String? = "1.0", @OneToMany( mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true, targetEntity = StandardCondition::class, ) @Fetch(value = FetchMode.SUBSELECT) @OrderBy("conditionSequence") var standardConditions: List&lt;StandardCondition&gt; = emptyList(), @OneToMany(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) @Fetch(value = FetchMode.SUBSELECT) @OrderBy("conditionSequence") val additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), @OneToMany(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) @Fetch(value = FetchMode.SUBSELECT) @OrderBy("conditionSequence") val bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "responsible_com_id", nullable = false) var responsibleCom: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "updated_by_id", nullable = true) var updatedBy: Staff? = null, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( probationAreaCode: String?, probationAreaDescription: String?, probationPduCode: String?, probationPduDescription: String?, probationLauCode: String?, probationLauDescription: String?, probationTeamCode: String?, probationTeamDescription: String?, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( status: LicenceStatus? = null, conditionalReleaseDate: LocalDate?, actualReleaseDate: LocalDate?, sentenceStartDate: LocalDate?, sentenceEndDate: LocalDate?, licenceStartDate: LocalDate?, licenceExpiryDate: LocalDate?, topupSupervisionStartDate: LocalDate?, topupSupervisionExpiryDate: LocalDate?, postRecallReleaseDate: LocalDate?, homeDetentionCurfewActualDate: LocalDate?, homeDetentionCurfewEndDate: LocalDate?, staffMember: Staff?, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( statusCode: LicenceStatus, staffMember: Staff?, approvedByUsername: String?, approvedByName: String?, approvedDate: LocalDateTime?, supersededDate: LocalDateTime?, submittedDate: LocalDateTime?, licenceActivatedDate: LocalDateTime?, )</ID>
    <ID>LongParameterList:LicenceConditionService.kt$LicenceConditionService$( private val licenceRepository: LicenceRepository, private val additionalConditionRepository: AdditionalConditionRepository, private val bespokeConditionRepository: BespokeConditionRepository, private val additionalConditionUploadDetailRepository: AdditionalConditionUploadDetailRepository, private val conditionFormatter: ConditionFormatter, private val licencePolicyService: LicencePolicyService, private val auditService: AuditService, private val staffRepository: StaffRepository, )</ID>
    <ID>LongParameterList:LicenceCreationService.kt$LicenceCreationService$( private val licenceRepository: LicenceRepository, private val staffRepository: StaffRepository, private val standardConditionRepository: StandardConditionRepository, private val additionalConditionRepository: AdditionalConditionRepository, private val licenceEventRepository: LicenceEventRepository, private val licencePolicyService: LicencePolicyService, private val auditEventRepository: AuditEventRepository, private val hdcCurfewAddressRepository: HdcCurfewAddressRepository, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val prisonApiClient: PrisonApiClient, private val deliusApiClient: DeliusApiClient, private val releaseDateService: ReleaseDateService, private val hdcService: HdcService, )</ID>
    <ID>LongParameterList:LicenceFactory.kt$LicenceFactory$( licenceType: LicenceType, nomsId: String, version: String, nomisRecord: PrisonerSearchPrisoner, prisonInformation: Prison, currentResponsibleOfficerDetails: CommunityManager, deliusRecord: ProbationCase, creator: CommunityOffenderManager, responsibleCom: CommunityOffenderManager, licenceStartDate: LocalDate?, )</ID>
    <ID>LongParameterList:LicenceFactory.kt$LicenceFactory$( licenceType: LicenceType, nomsId: String, version: String, nomisRecord: PrisonerSearchPrisoner, prisonInformation: Prison, currentResponsibleOfficerDetails: CommunityManager, deliusRecord: ProbationCase, creator: PrisonUser, responsibleCom: CommunityOffenderManager, timedOutLicence: CrdLicence?, licenceStartDate: LocalDate?, )</ID>
    <ID>LongParameterList:LicenceService.kt$LicenceService$( private val licenceRepository: LicenceRepository, private val staffRepository: StaffRepository, private val standardConditionRepository: StandardConditionRepository, private val additionalConditionRepository: AdditionalConditionRepository, private val bespokeConditionRepository: BespokeConditionRepository, private val licenceEventRepository: LicenceEventRepository, private val licencePolicyService: LicencePolicyService, private val additionalConditionUploadDetailRepository: AdditionalConditionUploadDetailRepository, private val auditEventRepository: AuditEventRepository, private val notifyService: NotifyService, private val omuService: OmuService, private val releaseDateService: ReleaseDateService, private val domainEventsService: DomainEventsService, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val eligibilityService: EligibilityService, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( @Value("\${notify.enabled}") private val enabled: Boolean, @Value("\${self.link}") private val selfLink: String, @Value("\${notify.templates.variationForApproval}") private val variationForApprovalTemplateId: String, @Value("\${notify.templates.variationReApproval}") private val variationForReApprovalTemplateId: String, @Value("\${notify.templates.initialLicencePrompt}") private val initialLicencePromptTemplateId: String, @Value("\${notify.templates.urgentLicencePrompt}") private val urgentLicencePromptTemplateId: String, @Value("\${notify.templates.datesChanged}") private val datesChangedTemplateId: String, @Value("\${notify.templates.variationApproved}") private val variationApprovedTemplateId: String, @Value("\${notify.templates.variationReferred}") private val variationReferredTemplateId: String, @Value("\${notify.templates.unapprovedLicence}") private val unapprovedLicenceByCrdTemplateId: String, @Value("\${notify.templates.hardStopLicenceApproved}") private val hardStopLicenceApprovedTemplateId: String, @Value("\${notify.templates.editedLicenceTimedOut}") private val editedLicenceTimedOutTemplateId: String, @Value("\${notify.templates.hardStopLicenceReviewOverdue}") private val hardStopLicenceReviewOverdueTemplateId: String, @Value("\${internalEmailAddress}") private val internalEmailAddress: String, private val client: NotificationClient, private val releaseDateService: ReleaseDateService, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( creatorEmail: String, creatorName: String, comEmail: String, comName: String, popName: String, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( emailAddress: String?, comName: String, firstName: String, lastName: String, crn: String?, crd: LocalDate?, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( emailAddress: String?, comName: String, firstName: String, lastName: String, crn: String?, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( emailAddress: String?, firstName: String, lastName: String, crn: String?, crd: LocalDate?, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( licenceId: String, emailAddress: String?, comFullName: String, offenderFullName: String, crn: String?, datesChanged: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( notifyRequest: NotifyRequest, licenceId: String, firstName: String, lastName: String, crn: String, comName: String, )</ID>
    <ID>LongParameterList:PrisonUser.kt$PrisonUser$( id: Long? = this.id, username: String = this.username, email: String? = this.email, firstName: String? = this.firstName, lastName: String? = this.lastName, lastUpdatedTimestamp: LocalDateTime? = this.lastUpdatedTimestamp, )</ID>
    <ID>LongParameterList:Staff.kt$Staff$( @Id @GeneratedValue(strategy = GenerationType.IDENTITY) @NotNull var id: Long? = -1, @NotNull @Enumerated(EnumType.STRING) @Column(name = "kind", insertable = false, updatable = false) var kind: StaffKind, @Column(unique = true) override val username: String, val email: String?, override val firstName: String?, override val lastName: String?, val lastUpdatedTimestamp: LocalDateTime? = null, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( bookingId: Long?, releaseDate: LocalDate?, licenceType: LicenceType?, licenceStatus: LicenceStatus?, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, releaseDateLabel: String, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: CrdLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: EntityLicence, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: HardStopLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: HdcLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: Licence, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, )</ID>
    <ID>LongParameterList:UpdateSentenceDateService.kt$UpdateSentenceDateService$( private val licenceRepository: LicenceRepository, private val auditEventRepository: AuditEventRepository, private val notifyService: NotifyService, private val prisonApiClient: PrisonApiClient, private val hdcService: HdcService, private val staffRepository: StaffRepository, private val releaseDateService: ReleaseDateService, private val licenceService: LicenceService, )</ID>
    <ID>LongParameterList:VariationLicence.kt$VariationLicence$( id: Long = -1L, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.VARIATION_IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointmentPersonType: AppointmentPersonType? = null, appointmentPerson: String? = null, appointmentTime: LocalDateTime? = null, appointmentTimeType: AppointmentTimeType? = null, appointmentAddress: String? = null, appointmentContact: String? = null, override var spoDiscussion: String? = null, override var vloDiscussion: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), responsibleCom: CommunityOffenderManager? = null, override var variationOfId: Long? = null, licenceVersion: String? = "1.0", updatedBy: Staff? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) override var createdBy: CommunityOffenderManager? = null, )</ID>
    <ID>LongParameterList:VariationLicence.kt$VariationLicence$( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, spoDiscussion: String? = this.spoDiscussion, vloDiscussion: String? = this.vloDiscussion, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, variationOfId: Long? = this.variationOfId, licenceVersion: String? = this.licenceVersion, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, updatedBy: Staff? = this.updatedBy, )</ID>
    <ID>LongParameterList:WebClientConfiguration.kt$WebClientConfiguration$( @Value("\${hmpps.auth.url}") private val oauthApiUrl: String, @Value("\${hmpps.prison.api.url}") private val prisonApiUrl: String, @Value("\${hmpps.prisonregister.api.url}") private val prisonRegisterApiUrl: String, @Value("\${hmpps.delius.api.url}") private val deliusApiUrl: String, @Value("\${hmpps.prisonersearch.api.url}") private val prisonerSearchApiUrl: String, @Value("\${hmpps.document.api.url}") private val documentApiUrl: String, @Value("\${hmpps.govuk.api.url}") private val govUkApiUrl: String, @Value("\${hmpps.hdc.api.url}") private val hdcApiUrl: String, )</ID>
    <ID>MagicNumber:CaCaseloadService.kt$CaCaseloadService$4</ID>
    <ID>MagicNumber:EligibilityService.kt$EligibilityService$4</ID>
    <ID>MagicNumber:ExclusionZoneService.kt$ExclusionZoneService$100</ID>
    <ID>MagicNumber:ExclusionZoneService.kt$ExclusionZoneService$50</ID>
    <ID>MagicNumber:ExclusionZoneService.kt$ExclusionZoneService$500</ID>
    <ID>MagicNumber:LicenceActivationService.kt$LicenceActivationService$4</ID>
    <ID>MagicNumber:PromptComService.kt$PromptComService.Companion$4</ID>
    <ID>MagicNumber:SubjectAccessRequestController.kt$SubjectAccessRequestController$209</ID>
    <ID>MatchingDeclarationName:EventSpecifications.kt$EventQueryObject</ID>
    <ID>MatchingDeclarationName:LicenceFunctions.kt$SentenceChanges</ID>
    <ID>MatchingDeclarationName:LicenceSpecifications.kt$LicenceQueryObject</ID>
    <ID>MaxLineLength:AddAdditionalConditionRequest.kt$AddAdditionalConditionRequest$@Schema(description = "The condition text with the users data inserted into the template", example = "You must not enter the location Tesco Superstore")</ID>
    <ID>MaxLineLength:AddAdditionalConditionRequest.kt$AddAdditionalConditionRequest$@Schema(description = "The textual value for this additional condition", example = "You must not enter the location [DESCRIPTION]")</ID>
    <ID>MaxLineLength:AdditionalCondition.kt$AdditionalCondition$@OneToMany(mappedBy = "additionalCondition", fetch = FetchType.EAGER, cascade = [CascadeType.ALL], orphanRemoval = true)</ID>
    <ID>MaxLineLength:AdditionalCondition.kt$AdditionalCondition$description = "Describes each additional condition on the licence, A discriminator exists to allow specific types of conditions to contain additional info"</ID>
    <ID>MaxLineLength:AdditionalConditionData.kt$AdditionalConditionData$@get:Schema(description = "Whether this data item contributes to the licence or whether it is just used for rendering purposes")</ID>
    <ID>MaxLineLength:AdditionalConditionRequest.kt$AdditionalConditionRequest$@Schema(description = "The textual value for this additional condition", example = "You must not enter the location [DESCRIPTION]")</ID>
    <ID>MaxLineLength:AdditionalConditionUploadSummary.kt$AdditionalConditionUploadSummary$override fun toString(): String</ID>
    <ID>MaxLineLength:AdditionalConditionWithConfigTest.kt$AdditionalConditionWithConfigTest.checkConditionsReadyToSubmit$fun</ID>
    <ID>MaxLineLength:AdditionalConditionWithConfigTest.kt$AdditionalConditionWithConfigTest.checkConditionsReadyToSubmit$listOf(anAdditionalConditionEntity.copy(additionalConditionData = listOf(conditionalAdditionalConditionData)))</ID>
    <ID>MaxLineLength:AdditionalConditionsRequest.kt$AdditionalConditionsRequest$@Schema(description = "The type of additional condition, either licence or post sentence supervision", allowableValues = ["AP", "PSS"])</ID>
    <ID>MaxLineLength:AppointmentController.kt$AppointmentController$description = "Update the address where the initial appointment will take place. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:AppointmentController.kt$AppointmentController$description = "Update the contact number for the officer related to this licence. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:AppointmentControllerTest.kt$AppointmentControllerTest$assertThat(result.response.contentAsString).contains("Appointment person must not be null if Appointment With Type is SPECIFIC_PERSON")</ID>
    <ID>MaxLineLength:AppointmentControllerTest.kt$AppointmentControllerTest$assertThat(result.response.contentAsString).contains("Appointment time must not be null if Appointment Type is SPECIFIC_DATE_TIME")</ID>
    <ID>MaxLineLength:AppointmentControllerTest.kt$AppointmentControllerTest$fun</ID>
    <ID>MaxLineLength:AppointmentIntegrationTest.kt$AppointmentIntegrationTest$fun</ID>
    <ID>MaxLineLength:AppointmentPersonRequest.kt$AppointmentPersonRequest$@Schema(description = "Request object for updating the person the person on probation will meet at the initial appointment")</ID>
    <ID>MaxLineLength:AppointmentServiceTest.kt$AppointmentServiceTest$assertThat(exception.message).isEqualTo("Appointment person must not be empty if Appointment With Type is SPECIFIC_PERSON")</ID>
    <ID>MaxLineLength:ApproverCaseloadService.kt$ApproverCaseloadService$return if (licenceSummaries.size == 1) licenceSummaries.first() else licenceSummaries.find { it.licenceStatus != LicenceStatus.ACTIVE }</ID>
    <ID>MaxLineLength:AuditController.kt$AuditController$content = [Content(mediaType = "application/json", array = ArraySchema(schema = Schema(implementation = AuditEvent::class)))]</ID>
    <ID>MaxLineLength:AuditController.kt$AuditController$description = "Records an auditable event related to an action taken by a user or an automated in-service process. Requires ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:AuditRequest.kt$AuditRequest$@Schema(description = "The start date and time to query for events (default is 1 month ago)", example = "13/11/2021 23:14:13")</ID>
    <ID>MaxLineLength:AuditService.kt$AuditService$fun</ID>
    <ID>MaxLineLength:AuditServiceTest.kt$AuditServiceTest$assertThat(auditCaptor.value.summary).isEqualTo("Updated initial appointment details for ${aLicenceEntity.forename} ${aLicenceEntity.surname}")</ID>
    <ID>MaxLineLength:AuditServiceTest.kt$AuditServiceTest.audit events for licence conditions$fun</ID>
    <ID>MaxLineLength:BulkDeactivateLicencesController.kt$BulkDeactivateLicencesController$description = "Set licence statuses to INACTIVE. Accepts a list of licence IDs. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:CaCase.kt$CaCase$allowableValues = ["RECALL", "DEAD", "INDETERMINATE_SENTENCE", "SENTENCED", "CONVICTED_UNSENTENCED", "CIVIL_PRISONER", "IMMIGRATION_DETAINEE", "REMAND", "UNKNOWN", "OTHER"]</ID>
    <ID>MaxLineLength:CaCaseloadSearch.kt$CaCaseloadSearch$description = "List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null"</ID>
    <ID>MaxLineLength:CaCaseloadService.kt$CaCaseloadService$// If COM username but no code, do a separate call to use the data in CVL if it exists. Should help highlight any desync between Delius and CVL</ID>
    <ID>MaxLineLength:CaCaseloadService.kt$CaCaseloadService$private fun applySort(cases: List&lt;CaCase&gt;, view: String): List&lt;CaCase&gt;</ID>
    <ID>MaxLineLength:CaCaseloadService.kt$CaCaseloadService$private fun filterExistingLicencesForEligibility(licences: List&lt;CaCase&gt;): List&lt;CaCase&gt;</ID>
    <ID>MaxLineLength:CaCaseloadService.kt$CaCaseloadService$val deliusStaffNames = deliusApiClient.getStaffDetailsByUsername(comUsernames).associateBy { it.username?.lowercase() }</ID>
    <ID>MaxLineLength:CaCaseloadServiceTest.kt$CaCaseloadServiceTest.Prison tab caseload.filtering rules$whenever(hdcService.getHdcStatus(listOf(prisoner))).thenReturn(HdcStatuses(setOf(prisoner.bookingId!!.toLong())))</ID>
    <ID>MaxLineLength:CaseloadController.kt$CaseloadController$fun</ID>
    <ID>MaxLineLength:CaseloadItem.kt$CvlFields$description = "The type of licence this person should have based on their current dates, NB: this may differ from the current licence type if sentence dates have changed since any licence has been created"</ID>
    <ID>MaxLineLength:CaseloadService.kt$CaseloadService$fun getPrisoner(nomisId: String)</ID>
    <ID>MaxLineLength:CaseloadService.kt$CaseloadService$val prisoners = prisonerSearchApiClient.searchPrisonersByReleaseDate(earliestReleaseDate, latestReleaseDate, prisonIds, page)</ID>
    <ID>MaxLineLength:ComCaseloadIntegrationTest.kt$ComCaseloadIntegrationTest$fun</ID>
    <ID>MaxLineLength:ComCaseloadSearchService.kt$ComCaseloadSearchService$PageRequest.of(0, CASELOAD_PAGE_SIZE, Sort.by(body.sortBy.map { Sort.Order(it.direction, it.field.probationSearchApiSortType) }))</ID>
    <ID>MaxLineLength:ComCaseloadSearchService.kt$ComCaseloadSearchService$private</ID>
    <ID>MaxLineLength:ComCaseloadSearchServiceTest.kt$ComCaseloadSearchServiceTest$fun</ID>
    <ID>MaxLineLength:ComCaseloadService.kt$ComCaseloadService$if</ID>
    <ID>MaxLineLength:ComCaseloadService.kt$ComCaseloadService$private</ID>
    <ID>MaxLineLength:ComCaseloadService.kt$ComCaseloadService$private fun ManagedCase.findRelevantLicence()</ID>
    <ID>MaxLineLength:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$// This case tests that recalls are overridden if no PRRD exists and there is only the conditionalReleaseDate - so NOT_STARTED</ID>
    <ID>MaxLineLength:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$whenever(hdcService.getHdcStatus(any())).thenReturn(HdcStatuses(setOf(caseloadItems[0].prisoner.bookingId?.toLong()!!)))</ID>
    <ID>MaxLineLength:ComIntegrationTest.kt$ComIntegrationTest$fun</ID>
    <ID>MaxLineLength:ComReviewCount.kt$ComReviewCount$@Schema(description = "A list of teams, the probation practitioner is attached and the count of cases that need review")</ID>
    <ID>MaxLineLength:CommunityOffenderManagerRequest.kt$CommunityOffenderManagerRequest$@Schema(description = "The email address of the person who is creating the licence", example = "joebloggs@probation.gov.uk")</ID>
    <ID>MaxLineLength:ConditionController.kt$ConditionController$* This functionality to set standard conditions from the frontend could be removed - we should be able to set/refresh standard conditions at various points in the licence lifecycle.</ID>
    <ID>MaxLineLength:ConditionController.kt$ConditionController$description</ID>
    <ID>MaxLineLength:ConditionController.kt$ConditionController$description = "Add or replace the bespoke conditions on a licence with the content of this request. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Attend 123 Fake Street, Fakestown, LN123TO, as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Attend Harlow Clinic, High Street, London, W1 3GV on 12th February 2022 at 11=15 am, as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Attend Harlow Clinic, High Street, London, W1 3GV on 12th February 2022, as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Not to reside (not even to stay for one night) in the same household as any child under the age of 18 without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Not to reside (not even to stay for one night) in the same household as child under the age of without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Not to seek to approach or communicate with Jane Doe or John Doe without the prior approval of your supervising officer and / or East Hull Social Services."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Not to seek to approach or communicate with Jane Doe, John Doe or Jack Dont without the prior approval of your supervising officer and / or East Hull Social Services."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Not to undertake work or other organised activity which will involve a person under the age of 18, either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Not to undertake work or other organised activity which will involve a person under the age of [INSERT AGE], either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Not to undertake work or other organised activity which will involve a person under the age of {age}, either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Report to staff at The Police Station at 2pm, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a fortnightly basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"Report to staff at The Police Station at 2pm, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on an ongoing basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your alcohol and drug problems at the Walthamstow Rehabilitation Clinic."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your alcohol and drug problems."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your alcohol, drug, sexual, violent, gambling and anger problems at the AA meeting."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"You must reside within the London probation region while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"You must reside within the [INSERT REGION] while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"You must reside within the probation region while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$"You must reside within the {probationRegion} probation region while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$conditionText = "You must reside within the [INSERT REGION] while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$fun</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$text = "Attend [INSERT APPOINTMENT TIME DATE AND ADDRESS], as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$text = "Not to reside (not even to stay for one night) in the same household as [ANY / ANY FEMALE / ANY MALE] child under the age of [INSERT AGE] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$text = "Not to seek to approach or communicate with [INSERT NAME OF VICTIM AND / OR FAMILY MEMBERS] without the prior approval of your supervising officer and / or [INSERT NAME OF APPROPRIATE SOCIAL SERVICES DEPARTMENT]."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$text = "Report to staff at [NAME OF APPROVED PREMISES] at [TIME / DAILY], unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$text = "To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your alcohol / drug / sexual / violent / gambling / solvent abuse / anger / debt / prolific / offending behaviour problems at the [NAME OF COURSE / CENTRE]."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$tpl = "Attend {appointmentAddress}{appointmentDate}{appointmentTime}, as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$tpl = "Not to reside (not even to stay for one night) in the same household as {gender} child under the age of {age} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$tpl = "Not to seek to approach or communicate with {name} without the prior approval of your supervising officer{socialServicesDepartment}."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$tpl = "Report to staff at {approvedPremises} at {reportingTime}, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:ConditionFormatterTest.kt$ConditionFormatterTest$tpl = "To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your {behaviourProblems} problems{course}."</ID>
    <ID>MaxLineLength:ConditionTypes.kt$ConditionTypes$@Schema(description = "The type of conditions on a licence policy which can be AP (All Purpose) and/or PSS (Post Sentence Supervision)")</ID>
    <ID>MaxLineLength:Conditions.kt$Conditions$@Schema(description = "The type of conditions on a licence which can be AP (All Purpose) and/or PSS (Post Sentence Supervision)")</ID>
    <ID>MaxLineLength:CrdLicence.kt$CrdLicence$@Schema(description = "If ARD||CRD falls on Friday/Bank holiday/Weekend then it contains Earliest possible release date or ARD||CRD")</ID>
    <ID>MaxLineLength:DeactivateHdcLicencesService.kt$DeactivateHdcLicencesService$detail = "ID ${licence.id} type ${licence.typeCode} status ${licence.statusCode.name} version ${licence.version}"</ID>
    <ID>MaxLineLength:DeactivateHdcLicencesService.kt$DeactivateHdcLicencesService$eventDescription = "HDC licence automatically deactivated as now ineligible for HDC release for ${licence.forename} ${licence.surname}"</ID>
    <ID>MaxLineLength:DeactivateHdcLicencesService.kt$DeactivateHdcLicencesService$log.info("Found {} prisoners who have draft HDC licences that are now ineligible for HDC release", licencesToDeactivate.size)</ID>
    <ID>MaxLineLength:DeactivateHdcLicencesService.kt$DeactivateHdcLicencesService$summary = "HDC licence automatically deactivated as now ineligible for HDC release for ${licence.forename} ${licence.surname}"</ID>
    <ID>MaxLineLength:DeactivateHdcLicencesService.kt$DeactivateHdcLicencesService$telemetryClient.trackEvent("DeactivateHdcLicencesJob", mapOf("licences" to licencesToDeactivate.size.toString()), null)</ID>
    <ID>MaxLineLength:DeactivateHdcLicencesServiceTest.kt$DeactivateHdcLicencesServiceTest$"HDC licence automatically deactivated as now ineligible for HDC release for ${aHdcLicence.forename} ${aHdcLicence.surname}"</ID>
    <ID>MaxLineLength:DeactivateHdcLicencesServiceTest.kt$DeactivateHdcLicencesServiceTest$"ID ${aHdcLicence.id} type ${aHdcLicence.typeCode} status $LicenceStatusInactive version ${aHdcLicence.version}"</ID>
    <ID>MaxLineLength:DeactivateLicencesController.kt$DeactivateLicencesController$description = "Deactivate licences from IN_PROGRESS and SUBMITTED status to INACTIVE where these are past release date already."</ID>
    <ID>MaxLineLength:DeactivateLicencesIntegrationTest.kt$DeactivateLicencesIntegrationTest$fun</ID>
    <ID>MaxLineLength:DeactivateLicencesService.kt$DeactivateLicencesService$detail = "ID ${licence.id} type ${licence.typeCode} status ${licence.statusCode.name} version ${licence.version}"</ID>
    <ID>MaxLineLength:DeactivateLicencesService.kt$DeactivateLicencesService$eventDescription = "${reason ?: "Licence deactivated automatically as it passed release date"} for ${licence.forename} ${licence.surname}"</ID>
    <ID>MaxLineLength:DeactivateLicencesService.kt$DeactivateLicencesService$summary = "${reason ?: "Licence deactivated automatically as it passed release date"} for ${licence.forename} ${licence.surname}"</ID>
    <ID>MaxLineLength:DeactivateLicencesServiceTest.kt$DeactivateLicencesServiceTest$"ID ${aLicenceEntity.id} type ${aLicenceEntity.typeCode} status ${LicenceStatus.INACTIVE} version ${aLicenceEntity.version}"</ID>
    <ID>MaxLineLength:DeactivateLicencesServiceTest.kt$DeactivateLicencesServiceTest$"Licence deactivated automatically as it passed release date for ${aLicenceEntity.forename} ${aLicenceEntity.surname}"</ID>
    <ID>MaxLineLength:DeactivateLicencesServiceTest.kt$DeactivateLicencesServiceTest$fun</ID>
    <ID>MaxLineLength:DomainEventsService.kt$DomainEventsService$fun LocalDateTime.toOffsetDateFormat(): String</ID>
    <ID>MaxLineLength:ElectronicMonitoringAdditionalConditionWithRestriction.kt$ElectronicMonitoringAdditionalConditionWithRestriction$example = "Allow person(s) as designated by your supervising officer to install an electronic monitoring tag on you and access to install any associated equipment in your property, and for the purpose of ensuring that equipment is functioning correctly. You must not damage or tamper with these devices and ensure that the tag is charged, and report to your supervising officer and the EM provider immediately if the tag or the associated equipment are not working correctly. This will be for the purpose of monitoring your ALCOHOL licence condition(s) unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:EligibilityService.kt$EligibilityService$fun getIneligibilityReasons(prisoner: PrisonerSearchPrisoner): List&lt;String&gt;</ID>
    <ID>MaxLineLength:EventController.kt$EventController$content = [Content(mediaType = "application/json", array = ArraySchema(schema = Schema(implementation = LicenceEvent::class)))]</ID>
    <ID>MaxLineLength:EventService.kt$EventService$val matchingEvents = licenceEventRepository.findAll(eventQueryObject.toSpecification(), eventQueryObject.getSort())</ID>
    <ID>MaxLineLength:ExclusionZoneAdditionalCondition.kt$ExclusionZoneAdditionalCondition$example = "Not to enter the area of X, as defined by the attached map, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:ExclusionZoneController.kt$ExclusionZoneController$description = "Uploads a PDF file containing an exclusion zone map and description. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:ExclusionZoneIntegrationTest.kt$ExclusionZoneIntegrationTest$val conditions = additionalConditionRepository.findById(1).map { condition -&gt; condition.additionalConditionUploadSummary }.orElseThrow()</ID>
    <ID>MaxLineLength:ExclusionZoneService.kt$ExclusionZoneService$// Process the MapMaker PDF file to get the fullSizeImage from page 1, descriptive text on page 2 and generate a thumbnail</ID>
    <ID>MaxLineLength:ExclusionZoneService.kt$ExclusionZoneService$log.error("uploadExclusion: Could not extract images from file, Name ${file.name} Type ${file.contentType} Orig. Name ${file.originalFilename}, Size ${file.size}")</ID>
    <ID>MaxLineLength:ExclusionZoneService.kt$ExclusionZoneService$log.error("uploadExclusion: Empty file uploaded, Name ${file.name} Type ${file.contentType} Orig. Name ${file.originalFilename}, Size ${file.size}")</ID>
    <ID>MaxLineLength:ExclusionZoneService.kt$ExclusionZoneService$log.info("uploadExclusionZoneFile: Name ${file.name} Type ${file.contentType} Original ${file.originalFilename}, Size ${file.size}")</ID>
    <ID>MaxLineLength:ExclusionZoneServiceTest.kt$ExclusionZoneServiceTest$whenever(additionalConditionRepository.findById(1L)).thenReturn(Optional.of(anAdditionalConditionEntityWithoutUpload))</ID>
    <ID>MaxLineLength:ExpireLicencesController.kt$ExpireLicencesController$description = "Triggers a job that causes licences with an ACTIVE status to be deactivated if they are passed their TUSED (if present) or LED (if TUSED is null)."</ID>
    <ID>MaxLineLength:FormattingHelpers.kt$fun String.replacePlaceholder(placeholder: String, replacement: String)</ID>
    <ID>MaxLineLength:FormattingHelpers.kt$private</ID>
    <ID>MaxLineLength:FormattingHelpers.kt$private fun properCase(word: String)</ID>
    <ID>MaxLineLength:HardStopLicence.kt$HardStopLicence$@Schema(description = "If ARD||CRD falls on Friday/Bank holiday/Weekend then it contains Earliest possible release date or ARD||CRD")</ID>
    <ID>MaxLineLength:HardStopLicence.kt$HardStopLicence$@Schema(description = "Type of this licence", example = LicenceKinds.HARD_STOP, allowableValues = [LicenceKinds.HARD_STOP])</ID>
    <ID>MaxLineLength:HdcApiClient.kt$HdcApiClient$private</ID>
    <ID>MaxLineLength:HdcLicence.kt$HdcLicence$@Schema(description = "If ARD||CRD falls on Friday/Bank holiday/Weekend then it contains Earliest possible release date or ARD||CRD")</ID>
    <ID>MaxLineLength:HdcService.kt$HdcService$fun getHdcStatus(records: List&lt;PrisonerSearchPrisoner&gt;)</ID>
    <ID>MaxLineLength:HdcService.kt$HdcService$fun isApprovedForHdc(bookingId: Long, hdced: LocalDate?)</ID>
    <ID>MaxLineLength:HdcServiceTest.kt$HdcServiceTest.EligibleForHdcLicenceTest$assertThat(exception.message).isEqualTo("HDC licence for A1234AA could not be created as curfew times are missing")</ID>
    <ID>MaxLineLength:HdcServiceTest.kt$HdcServiceTest.EligibleForHdcLicenceTest$assertThat(exception.message).isEqualTo("HDC licence for A1234AA could not be created as there is no curfew address")</ID>
    <ID>MaxLineLength:HdcServiceTest.kt$HdcServiceTest.EligibleForHdcLicenceTest$assertThat(exception.message).isEqualTo("HDC licence for A1234AA could not be created as they are not approved for HDC")</ID>
    <ID>MaxLineLength:HdcServiceTest.kt$HdcServiceTest.EligibleForHdcLicenceTest$whenever(hdcApiClient.getByBookingId(aPrisonerSearchResult.bookingId!!.toLong())).thenReturn(someHdcLicenceData.copy(curfewAddress = null))</ID>
    <ID>MaxLineLength:HdcServiceTest.kt$HdcServiceTest.EligibleForHdcLicenceTest$whenever(prisonApiClient.getHdcStatus(aPrisonerSearchResult.bookingId!!.toLong())).thenReturn(hdcPrisonerStatus().copy(approvalStatus = "APPROVED"))</ID>
    <ID>MaxLineLength:HdcVariationLicence.kt$HdcVariationLicence$@Schema(description = "If ARD||CRD falls on Friday/Bank holiday/Weekend then it contains Earliest possible release date or ARD||CRD")</ID>
    <ID>MaxLineLength:HdcVariationLicence.kt$HdcVariationLicence$@Schema(description = "Type of this licence", example = LicenceKinds.HDC_VARIATION, allowableValues = [LicenceKinds.HDC_VARIATION])</ID>
    <ID>MaxLineLength:IS91DeterminationService.kt$IS91DeterminationService$val (immigrationDetainees, nonImmigrationDetainees) = prisoners.partition { it.mostSeriousOffence == OFFENCE_DESCRIPTION }</ID>
    <ID>MaxLineLength:JPASpecificationDSL.kt$fun</ID>
    <ID>MaxLineLength:JPASpecificationDSL.kt$fun &lt;T&gt; KProperty1&lt;T, String?&gt;.notLike(x: String, escapeChar: Char): Specification&lt;T&gt;</ID>
    <ID>MaxLineLength:JPASpecificationDSL.kt$inline</ID>
    <ID>MaxLineLength:JPASpecificationDSL.kt$inline fun &lt;reified T&gt; and(specs: Iterable&lt;Specification&lt;T&gt;?&gt;): Specification&lt;T&gt;</ID>
    <ID>MaxLineLength:JPASpecificationDSL.kt$inline fun &lt;reified T&gt; or(specs: Iterable&lt;Specification&lt;T&gt;?&gt;): Specification&lt;T&gt;</ID>
    <ID>MaxLineLength:JPASpecificationDSL.kt$private</ID>
    <ID>MaxLineLength:JwtAuthHelper.kt$JwtAuthHelper$fun</ID>
    <ID>MaxLineLength:Licence.kt$Licence$@Schema(description = "The date and time when the version/variation of the licence was created at", example = "2023-11-20T00:00:00Z")</ID>
    <ID>MaxLineLength:Licence.kt$Licence$@Schema(description = "The date the licence is to become active. This may be incorrect for IS-91 cases and people on remand. Get in touch for details", example = "2022-08-24")</ID>
    <ID>MaxLineLength:Licence.kt$Licence$@Schema(description = "The prison identifier for the person on the licence. Also known as the NOMIS ID", example = "A1234AA")</ID>
    <ID>MaxLineLength:Licence.kt$Licence$@get:Schema(description = "If ARD||CRD falls on Friday/Bank holiday/Weekend then it contains Earliest possible release date or ARD||CRD")</ID>
    <ID>MaxLineLength:Licence.kt$Licence$description = "Describes a licence within this service, A discriminator exists to distinguish between different types of licence"</ID>
    <ID>MaxLineLength:Licence.kt$Licence$oneOf = [CrdLicence::class, VariationLicence::class, HardStopLicence::class, HdcLicence::class, HdcVariationLicence::class]</ID>
    <ID>MaxLineLength:LicenceActivationService.kt$LicenceActivationService$private</ID>
    <ID>MaxLineLength:LicenceActivationServiceTest.kt$LicenceActivationServiceTest$fun</ID>
    <ID>MaxLineLength:LicenceActivationServiceTest.kt$LicenceActivationServiceTest$whenever(iS91DeterminationService.getIS91AndExtraditionBookingIds(listOf(unreleasedPrisoner))).thenReturn(emptyList())</ID>
    <ID>MaxLineLength:LicenceConditionIntegrationTest.kt$LicenceConditionIntegrationTest$assertThat(result?.additionalLicenceConditions?.get(0)?.category).isEqualTo(anAddAdditionalConditionRequest.conditionCategory)</ID>
    <ID>MaxLineLength:LicenceConditionIntegrationTest.kt$LicenceConditionIntegrationTest$assertThat(result?.additionalLicenceConditions?.get(0)?.code).isEqualTo(anAddAdditionalConditionRequest.conditionCode)</ID>
    <ID>MaxLineLength:LicenceConditionIntegrationTest.kt$LicenceConditionIntegrationTest$assertThat(result?.additionalLicenceConditions?.get(0)?.expandedText).isEqualTo("Notify your supervising officer of any developing intimate relationships with women or men.")</ID>
    <ID>MaxLineLength:LicenceConditionIntegrationTest.kt$LicenceConditionIntegrationTest$assertThat(result?.additionalLicenceConditions?.get(0)?.expandedText).isEqualTo(anAddAdditionalConditionRequest.expandedText)</ID>
    <ID>MaxLineLength:LicenceConditionIntegrationTest.kt$LicenceConditionIntegrationTest$assertThat(result?.additionalLicenceConditions?.get(0)?.text).isEqualTo(anAddAdditionalConditionRequest.conditionText)</ID>
    <ID>MaxLineLength:LicenceConditionService.kt$LicenceConditionService$// If any removed additional conditions had a file upload associated then remove the detail row to prevent being orphaned</ID>
    <ID>MaxLineLength:LicenceConditionService.kt$LicenceConditionService$fun getFormattedText(version: String, conditionCode: String, data: List&lt;AdditionalConditionData&gt;)</ID>
    <ID>MaxLineLength:LicenceConditionService.kt$LicenceConditionService$it.conditionType == request.conditionType &amp;&amp; submittedAdditionalConditions.none { submittedCondition -&gt; submittedCondition.conditionCode == it.conditionCode }</ID>
    <ID>MaxLineLength:LicenceConditionServiceTest.kt$LicenceConditionServiceTest$private</ID>
    <ID>MaxLineLength:LicenceController.kt$LicenceController$description = "Create a new version of an approved licence. The new licence will have a new id and have status IN_PROGRESS. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:LicenceController.kt$LicenceController$description = "Create a variation of this licence. The new licence will have a new ID and have a status VARIATION_IN_PROGRESS. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:LicenceController.kt$LicenceController$description = "Deactivate the supplied ACTIVE licence, and any variations of that licence. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:LicenceController.kt$LicenceController$description = "Get a list of licence summaries for all submitted variations belonging to the specified probation area code. Requires ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:LicenceController.kt$LicenceController$description = "Get the licences matching the supplied lists of status, prison, staffId, nomsId and PDU. Requires ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:LicenceController.kt$LicenceController$description = "Marks the HardStop / Time served licence as having been reviewed with no variation required. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:LicenceController.kt$LicenceController$description = "Sets whether the variation has been discussed with a VLO. Either Yes or Not applicable. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:LicenceController.kt$LicenceController$description = "Sets whether the variation has been discussed with an SPO. Either Yes or No. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:LicenceController.kt$LicenceController$description = "Update the status of a licence to SUBMITTED or VARIATION_SUBMITTED, and record the details of the COM who submitted. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:LicenceController.kt$LicenceController$description = "Updates a licence to referred and stores the reason provided by the approver. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:LicenceControllerTest.kt$LicenceControllerTest$whenever(licenceCreationService.createHdcLicence(aCreateLicenceRequest.nomsId)).thenReturn(LicenceCreationResponse(1))</ID>
    <ID>MaxLineLength:LicenceCreationService.kt$LicenceCreationService$detail = "ID ${licence.id} type ${licence.typeCode} status ${licence.statusCode.name} version ${licence.version} kind ${licence.kind}"</ID>
    <ID>MaxLineLength:LicenceCreationService.kt$LicenceCreationService$if (getLicenceType(nomisRecord) == LicenceType.PSS) error("HDC Licence for ${nomisRecord.prisonerNumber} can not be of type PSS")</ID>
    <ID>MaxLineLength:LicenceCreationService.kt$LicenceCreationService$message = "A licence already exists for person with prison number: $nomsId (IN_PROGRESS, SUBMITTED, APPROVED or REJECTED)"</ID>
    <ID>MaxLineLength:LicenceCreationService.kt$LicenceCreationService$private fun missing(staffId: Long, field: String): Nothing</ID>
    <ID>MaxLineLength:LicenceCreationServiceTest.kt$LicenceCreationServiceTest.CreatingCrdLicences$fun</ID>
    <ID>MaxLineLength:LicenceCreationServiceTest.kt$LicenceCreationServiceTest.CreatingHdcLicences$)</ID>
    <ID>MaxLineLength:LicenceDetailTransformer.kt$fun</ID>
    <ID>MaxLineLength:LicenceFunctions.kt$(lsdChanged || ledChanged || tussdChanged || tusedChanged || prrdChanged || hdcadChanged || hdcEndDateChanged || (sedChanged &amp;&amp; this.statusCode == LicenceStatus.APPROVED))</ID>
    <ID>MaxLineLength:LicenceFunctionsKtTest.kt$LicenceFunctionsKtTest$licence.getSentenceChanges(testSentenceChanges.copy(homeDetentionCurfewActualDate = fourDaysAgo), newLsd = fiveDaysAgo)</ID>
    <ID>MaxLineLength:LicenceFunctionsKtTest.kt$LicenceFunctionsKtTest$licence.getSentenceChanges(testSentenceChanges.copy(homeDetentionCurfewEndDate = fourDaysAgo), newLsd = fiveDaysAgo)</ID>
    <ID>MaxLineLength:LicenceOverrideService.kt$LicenceOverrideService$detail = "ID ${licence.id} type ${licence.typeCode} status ${licence.statusCode.name} version ${licence.version}"</ID>
    <ID>MaxLineLength:LicencePolicy.kt$AllAdditionalConditions$fun getCondition(version: String, code: String): IAdditionalCondition</ID>
    <ID>MaxLineLength:LicencePolicy.kt$LicencePolicy$fun</ID>
    <ID>MaxLineLength:LicencePolicyAdditionalCondition.kt$LicencePolicyAdditionalCondition$@Schema(description = "The category to which the additional condition belongs", example = "Residence at a specific place")</ID>
    <ID>MaxLineLength:LicencePolicyAdditionalCondition.kt$LicencePolicyAdditionalCondition$@Schema(description = "The shorthand version of the category to which the additional condition belongs", example = "Residence")</ID>
    <ID>MaxLineLength:LicencePolicyController.kt$LicencePolicyController$fun</ID>
    <ID>MaxLineLength:LicencePolicyControllerTest.kt$LicencePolicyControllerTest$assertThat(result.response.contentAsString).isEqualTo(mapper.writeValueAsString(emptyList&lt;LicenceConditionChanges&gt;()))</ID>
    <ID>MaxLineLength:LicencePolicyIntegrationTest.kt$LicencePolicyIntegrationTest$fun policy(v: String)</ID>
    <ID>MaxLineLength:LicencePolicyServiceTest.kt$LicencePolicyServiceTest.compareLicenceWithPolicy$fun</ID>
    <ID>MaxLineLength:LicencePolicyServiceTest.kt$LicencePolicyServiceTest.compareLicenceWithPolicy$val currentLicence = aModelLicence().copy(id = 2, statusCode = LicenceStatus.VARIATION_IN_PROGRESS, version = "2.0")</ID>
    <ID>MaxLineLength:LicencePolicyServiceTest.kt$LicencePolicyServiceTest.compareLicenceWithPolicy$val currentLicence = aModelLicence().copy(id = 2, statusCode = LicenceStatus.VARIATION_IN_PROGRESS, version = "2.1", additionalLicenceConditions = someOldModelAdditionalConditions())</ID>
    <ID>MaxLineLength:LicencePolicyServiceTest.kt$LicencePolicyServiceTest.compareLicenceWithPolicy$val previousLicence = aModelLicence().copy(id = 1, version = "2.0", additionalLicenceConditions = someOldModelAdditionalConditions())</ID>
    <ID>MaxLineLength:LicencePolicyServiceTest.kt$LicencePolicyServiceTest.get config for condition$assertThat(error.message).isEqualTo("Condition with code: '599bdcae-d545-461c-b1a9-02cb3d4ba268' and version: '2.1' not found.")</ID>
    <ID>MaxLineLength:LicenceRepository.kt$UnapprovedLicence$@Schema(description = "Describes a prisoner's first and last name, their CRN if present and a COM's contact details for use in an email to COM")</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$"ID ${licenceEntity.id} type ${licenceEntity.typeCode} status ${licenceEntity.statusCode.name} version ${licenceEntity.version}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$IN_PROGRESS -&gt; "A new licence version was created for ${newLicence.forename} ${newLicence.surname} from ID ${licence.id}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$VARIATION_IN_PROGRESS -&gt; "A variation was created for ${newLicence.forename} ${newLicence.surname} from ID ${licence.id}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$detail = "ID $licenceId type ${licenceEntity.typeCode} status ${licenceEntity.reviewDate} version ${licenceEntity.version}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$detail = "ID $licenceId type ${licenceEntity.typeCode} status ${licenceEntity.statusCode.name} version ${licenceEntity.version}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$detail = "ID $licenceId type ${licenceEntity.typeCode} status ${updatedLicenceEntity.statusCode.name} version ${licenceEntity.version}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$detail = "ID $licenceId type ${updatedLicence.typeCode} status ${licenceEntity.statusCode.name} version ${updatedLicence.version}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$detail = "ID ${licence.id} kind ${licence.kind} type ${licence.typeCode} status ${licence.statusCode.name} version ${licence.version}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$detail = "ID ${licence.id} type ${licence.typeCode} status ${licence.statusCode.name} version ${licence.version}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$detail = "ID ${licenceEntity.id} type ${licenceEntity.typeCode} status ${licenceEntity.statusCode} version ${licenceEntity.version}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$detail = "ID ${timedOutLicence.id} type ${timedOutLicence.typeCode} status ${timedOutLicence.statusCode} version ${timedOutLicence.version}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$detail = "Old ID ${licence.id}, new ID ${newLicence.id} type ${newLicence.typeCode} status ${newLicence.statusCode.name} version ${newLicence.version}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$eventDescription = "${reason ?: "Licence automatically activated"} for ${licence.forename} ${licence.surname}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$eventDescription = "${reason ?: "Licence automatically inactivated"} for ${licence.forename} ${licence.surname}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$eventDescription = "Licence automatically timed out for ${timedOutLicence.forename} ${timedOutLicence.surname} ${reason ?: ""}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$eventDescription = "Licence deactivated as a newer version was approved for ${licence.forename} ${licence.surname}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$eventDescription = "Licence reviewed without being varied for ${licenceEntity.forename} ${licenceEntity.surname}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$eventDescription = "Licence updated to ${licenceEntity.statusCode} for ${licenceEntity.forename} ${licenceEntity.surname}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$eventDescription = "Licence variation approved for ${updatedLicenceEntity.forename} ${updatedLicenceEntity.surname}"</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$if (licence !is CrdLicence &amp;&amp; licence !is HdcLicence) error("Trying to edit licence for non-crd non-hdc licence: $licenceId")</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$if (licenceEntity !is HardStopLicence) throw ValidationException("Trying to review a ${licenceEntity::class.java.simpleName}: $licenceId")</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$log.info("Unable to deactivate licence and variations due to being unable to locate active licence for id: $licenceId")</ID>
    <ID>MaxLineLength:LicenceService.kt$LicenceService$summary = "Licence automatically timed out for ${timedOutLicence.forename} ${timedOutLicence.surname} ${reason ?: ""}"</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest$"Deactivating licence as the parent licence version was deactivated for ${inProgressLicenceVersion.forename} ${inProgressLicenceVersion.surname}"</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest$"Licence automatically deactivated as the approved licence version was activated for ${aLicenceEntity.forename} ${aLicenceEntity.surname}"</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest$"Licence deactivated as a newer version was approved for ${aLicenceEntity.forename} ${aLicenceEntity.surname}"</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest$"Licence deactivated as a newer version was approved for ${anHdcLicenceEntity.forename} ${anHdcLicenceEntity.surname}"</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest$assertThat(auditEventCaptor.value.summary).isEqualTo("New licence version created for ${approvedLicence.forename} ${approvedLicence.surname}")</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest$assertThat(licenceEventCaptor.value.eventDescription).isEqualTo("A new licence version was created for ${approvedLicence.forename} ${approvedLicence.surname} from ID ${approvedLicence.id}")</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest.HDC Licences$assertThat(auditEventCaptor.value.summary).isEqualTo("New licence version created for ${approvedLicence.forename} ${approvedLicence.surname}")</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest.HDC Licences$assertThat(licenceEventCaptor.value.eventDescription).isEqualTo("A new licence version was created for ${approvedLicence.forename} ${approvedLicence.surname} from ID ${approvedLicence.id}")</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest.timing out licences$"Licence automatically timed out for ${aLicenceEntity.forename} ${aLicenceEntity.surname} due to entering hard stop"</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest.timing out licences$"Licence automatically timed out for ${approvedThenEditedLicence.forename} ${approvedThenEditedLicence.surname} due to sentence date changes"</ID>
    <ID>MaxLineLength:LicenceServiceTest.kt$LicenceServiceTest.timing out licences$fun</ID>
    <ID>MaxLineLength:LicenceSummary.kt$LicenceSummary$@Schema(description = "The date and time when the version/variation of the licence was created at", example = "2023-11-20T00:00:00Z")</ID>
    <ID>MaxLineLength:LicenceSummary.kt$LicenceSummary$@Schema(description = "The prison identifier for the person on the licence. Also known as the NOMIS ID", example = "A1234AA")</ID>
    <ID>MaxLineLength:LicenceSummary.kt$LicenceSummary$@Schema(description = "Whether the licence in PSS period? This is when Licence End Date &lt; TODAY &lt;= TUSED (Top Up Supervision End Date)")</ID>
    <ID>MaxLineLength:LicenceType.kt$LicenceType.Companion$nomisRecord.topupSupervisionExpiryDate == null || nomisRecord.topupSupervisionExpiryDate &lt;= nomisRecord.licenceExpiryDate -&gt; AP</ID>
    <ID>MaxLineLength:LicenceTypeOverrideService.kt$LicenceTypeOverrideService$private fun Licence.getAdditionalConditionsByRelevancy()</ID>
    <ID>MaxLineLength:LicenceTypeOverrideService.kt$LicenceTypeOverrideService$summary = "Licence type overridden for ${licence.forename} ${licence.surname}: from $previousType to $newType: $reason"</ID>
    <ID>MaxLineLength:LicenceTypeOverrideServiceTest.kt$LicenceTypeOverrideServiceTest.Companion$private</ID>
    <ID>MaxLineLength:LicenceTypeOverrideServiceTest.kt$LicenceTypeOverrideServiceTest.To AP$assertThat(firstValue.summary).isEqualTo("Licence type overridden for John Smith: from AP_PSS to AP: Test change to AP")</ID>
    <ID>MaxLineLength:LicenceTypeOverrideServiceTest.kt$LicenceTypeOverrideServiceTest.To AP$assertThat(firstValue.summary).isEqualTo("Licence type overridden for John Smith: from PSS to AP: Test change to AP")</ID>
    <ID>MaxLineLength:LicenceTypeOverrideServiceTest.kt$LicenceTypeOverrideServiceTest.To AP_PSS$assertThat(firstValue.summary).isEqualTo("Licence type overridden for John Smith: from AP to AP_PSS: Test change to AP_PSS")</ID>
    <ID>MaxLineLength:LicenceTypeOverrideServiceTest.kt$LicenceTypeOverrideServiceTest.To AP_PSS$assertThat(firstValue.summary).isEqualTo("Licence type overridden for John Smith: from PSS to AP_PSS: Test change to AP_PSS")</ID>
    <ID>MaxLineLength:LicenceTypeOverrideServiceTest.kt$LicenceTypeOverrideServiceTest.To PSS$assertThat(firstValue.summary).isEqualTo("Licence type overridden for John Smith: from AP to PSS: Test change to PSS")</ID>
    <ID>MaxLineLength:LicenceTypeOverrideServiceTest.kt$LicenceTypeOverrideServiceTest.To PSS$assertThat(firstValue.summary).isEqualTo("Licence type overridden for John Smith: from AP_PSS to PSS: Test change to PSS")</ID>
    <ID>MaxLineLength:LsdRecalculationService.kt$LsdRecalculationService$summary = "Licence Start Date recalculated from $oldLsd to $licenceStartDate for ${it.forename} ${it.surname}"</ID>
    <ID>MaxLineLength:LsdRecalculationServiceTest.kt$LsdRecalculationServiceTest$.</ID>
    <ID>MaxLineLength:ManagedCase.kt$ManagedCase$@Schema(description = "Describes a licence within this service, A discriminator exists to distinguish between different types of licence")</ID>
    <ID>MaxLineLength:Name.kt$fun Name.fullName()</ID>
    <ID>MaxLineLength:NotifyService.kt$NotifyService$"isEligibleForEarlyRelease" to if (cases.any { releaseDateService.isEligibleForEarlyRelease(it.releaseDate) }) "yes" else "no"</ID>
    <ID>MaxLineLength:NotifyService.kt$NotifyService$@Value("\${notify.templates.hardStopLicenceReviewOverdue}") private val hardStopLicenceReviewOverdueTemplateId: String</ID>
    <ID>MaxLineLength:NotifyService.kt$NotifyService$log.error("Notification failed (hardStopLicenceReviewOverdue) for licence $licenceId - email and CRD must be present")</ID>
    <ID>MaxLineLength:NotifyService.kt$NotifyService$log.error("Notification failed (variationReApproval) for PrisonerNumber $prisonerNumber - OMU email and CRD must be present")</ID>
    <ID>MaxLineLength:NotifyService.kt$NotifyService$log.error("Notification failed (variationSubmitted) - email address not present for the PDU head for licence ID: $licenceId")</ID>
    <ID>MaxLineLength:NotifyService.kt$NotifyService$log.info("Notification sent to $emailAddress HARD STOP LICENCE REVIEW OVERDUE for $licenceId $firstName $lastName")</ID>
    <ID>MaxLineLength:NotifyService.kt$NotifyService$log.info("Notification sent to ${it.comEmail} informing edited licence not reapproved by CRD for prisoner ${it.forename} ${it.surname}")</ID>
    <ID>MaxLineLength:NotifyService.kt$NotifyService$log.info("Notification sent to ${notifyRequest.email} VARIATION FOR APPROVAL submitted by $comName for $licenceId $firstName $lastName with crn $crn")</ID>
    <ID>MaxLineLength:NotifyService.kt$NotifyService$log.info("Notification sent to OMU $emailAddress VARIATION FOR RE_APPROVAL for OMU PrisonerNumber $prisonerNumber")</ID>
    <ID>MaxLineLength:NotifyService.kt$NotifyService$log.info("There were no emails to send to the probation practitioner to inform them of any edited emails that weren't re-approved by CRD date")</ID>
    <ID>MaxLineLength:NotifyServiceTest.kt$NotifyServiceTest$fun</ID>
    <ID>MaxLineLength:OffenderController.kt$OffenderController$description = "Updates in-flight licences associated with an offender with a new probation team. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:OffenderController.kt$OffenderController$description = "Updates in-flight licences associated with an offender with the community offender manager who is responsible for that offender. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:OffenderController.kt$OffenderController$description = "Updates the name and date of birth stored on all licences associated with the given offender. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:OffenderController.kt$OffenderController$summary = "Updates in-flight licences associated with an offender with the community offender manager who is responsible for that offender."</ID>
    <ID>MaxLineLength:OffenderService.kt$OffenderService$summary = "Offender details updated to forename: ${request.forename}, middleNames: ${request.middleNames}, surname: ${request.surname}, date of birth: ${request.dateOfBirth}"</ID>
    <ID>MaxLineLength:OffenderService.kt$OffenderService$summary = "Probation team updated to ${request.probationTeamDescription} at ${request.probationAreaDescription} on licence for ${it.forename} ${it.surname}"</ID>
    <ID>MaxLineLength:OffenderServiceTest.kt$OffenderServiceTest$"Offender details updated to forename: Peter, middleNames: Robin, surname: Smith, date of birth: 1970-02-01"</ID>
    <ID>MaxLineLength:OffenderServiceTest.kt$OffenderServiceTest$"Probation team updated to TEAM2 probation team at N02 Region on licence for ${aLicenceEntity.forename} ${aLicenceEntity.surname}"</ID>
    <ID>MaxLineLength:OffenderServiceTest.kt$OffenderServiceTest$fun</ID>
    <ID>MaxLineLength:OmuContactController.kt$OmuContactController$description = "CVL stores contact information for Offender Management Units (OMUs). These endpoints are responsible for retrieving and managing that information"</ID>
    <ID>MaxLineLength:OmuContactController.kt$OmuContactController$description = "Updates the OMU email address used to contact members of a prison OMU. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:OmuService.kt$OmuService$fun</ID>
    <ID>MaxLineLength:OutboundEventsPublisherTest.kt$OutboundEventsPublisherTest$"eventType" to MessageAttributeValue.builder().dataType("String").stringValue(aHMPPSDomainEvent.eventType).build()</ID>
    <ID>MaxLineLength:OutboundEventsPublisherTest.kt$OutboundEventsPublisherTest.LicenceActivatedDomainEvent$"eventType" to MessageAttributeValue.builder().dataType("String").stringValue(aHMPPSDomainEvent.eventType).build()</ID>
    <ID>MaxLineLength:PolicyFunctions.kt$)</ID>
    <ID>MaxLineLength:PolicyFunctions.kt$* This will return a list of all changes that need to be addressed as part of migrating a licence from one version of the policy to another.</ID>
    <ID>MaxLineLength:PolicyV1.kt$category = "Supervision in the community by the supervising officer, or other responsible officer, or organisation"</ID>
    <ID>MaxLineLength:PolicyV1.kt$subtext = "If you need to upload more than one map, add one here and then email all maps directly to the prison OMU. Make sure the names of areas shown on all maps are entered here as a list. For example, Bridgend, Porthcawl and Port Talbot."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Allow person(s) as designated by your supervising officer to install an electronic monitoring tag on you and access to install any associated equipment in your property, and for the purpose of ensuring that equipment is functioning correctly. You must not damage or tamper with these devices and ensure that the tag is charged, and report to your supervising officer and the EM provider immediately if the tag or the associated equipment are not working correctly. This will be for the purpose of monitoring your [INSERT TYPES OF CONDITIONS TO BE ELECTRONICALLY MONITORED HERE] licence condition(s) unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Attend [INSERT APPOINTMENT TIME DATE AND ADDRESS], as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Attend [INSERT NAME AND ADDRESS], as reasonably required by your supervising officer, to give a sample of oral fluid / urine in order to test whether you have any specified Class A and specified Class B drugs in your body, for the purpose of ensuring that you are complying with the condition of your licence requiring you to be of good behaviour. Not to take any action that could hamper or frustrate the drug testing process."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Attend [INSERT NAME AND ADDRESS], as reasonably required by your supervisor, to give a sample of oral fluid / urine in order to test whether you have any specified Class A or specified Class B drugs in your body, for the purpose of ensuring that you are complying with the requirement of your supervision period requiring you to be of good behaviour."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Be of good behaviour and not behave in a way that undermines the rehabilitative purpose of the supervision period."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Confine yourself to an address approved by your supervising officer between the hours of [TIME] and [TIME] daily unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Confine yourself to remain at [CURFEW ADDRESS] initially from [START OF CURFEW HOURS] until [END OF CURFEW HOURS] each day, and, thereafter, for such a period as may be reasonably notified to you by your supervising officer; and comply with such arrangements as may be reasonably put in place and notified to you by your supervising officer so as to allow for your whereabouts and your compliance with your curfew requirement be monitored (whether by electronic means involving your wearing an electronic tag or otherwise)."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Keep in touch with the supervising officer in accordance with instructions given by the supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to associate with any person currently or formerly associated with [NAMES OF SPECIFIC GROUPS OR ORGANISATIONS] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to attend or organise any meetings or gatherings other than those convened solely for the purposes of worship without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to contact directly or indirectly any person who is a serving or remand prisoner or detained in State custody, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to contact directly or indirectly any person whom you know or believe to have been charged or convicted of any extremist related offence, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to contact or associate with [NAMED OFFENDER(S) / NAMED INDIVIDUAL(S)] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to contact or associate with a known sex offender other than when compelled by attendance at a Treatment Programme or when residing at Approved Premises without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to delete the usage history on any internet enabled device or computer used and to allow such items to be inspected as required by the police or your supervising officer. Such inspection may include removal of the device for inspection and the installation of monitoring software."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to engage in any discussion or act to promote grooming or influencing of an individual or a group for the purpose of extremism or radicalisation."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to enter [NAME / TYPE OF PREMISES / ADDRESS / ROAD] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to enter or remain in sight of any [CHILDREN'S PLAY AREA, SWIMMING BATHS, SCHOOL ETC] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to enter the area of [CLEARLY SPECIFIED AREA], as defined by the attached map, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to give or engage in the delivery of any lecture, talk, or sermon whether part of an act of worship or not, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to have in your possession any printed or electronically recorded material or handwritten notes which contain encoded information or that promote the destruction of or hatred for any religious or ethnic group or that celebrates, justifies or promotes acts of violence, or that contain information about military or paramilitary technology, weapons, techniques or tactics without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to have unsupervised contact with [ANY / ANY FEMALE / ANY MALE] children under the age of [INSERT AGE] without the prior approval of your supervising officer and / or [INSERT NAME OF APPROPRIATE SOCIAL SERVICES DEPARTMENT] except where that contact is inadvertent and not reasonably avoidable in the course of lawful daily life."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to own or possess a mobile phone with a photographic function without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to own or possess more than one mobile phone or SIM card without the prior approval of your supervising officer and to provide your supervising officer with details of that mobile telephone or one you have regular use of, including the IMEI number and the SIM card that you possess."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to participate directly or indirectly in organising and/or contributing to any demonstration, meeting, gathering or website without the prior approval of your supervising officer. This condition will be reviewed on a monthly basis and may be amended or removed if your risk is assessed as having changed."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to reside (not even to stay for one night) in the same household as [ANY / ANY FEMALE / ANY MALE] child under the age of [INSERT AGE] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to seek to approach or communicate with [INSERT NAME OF VICTIM AND / OR FAMILY MEMBERS] without the prior approval of your supervising officer and / or [INSERT NAME OF APPROPRIATE SOCIAL SERVICES DEPARTMENT]."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to undertake work or other organised activity which will involve a person under the age of [INSERT AGE], either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not to use or access any computer or device which is internet enabled without the prior approval of your supervising officer; and only for the purpose, and only at a specific location, as specified by that officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not travel outside the United Kingdom, the Channel Islands or the Isle of Man except with the prior permission of the supervising officer or for the purposes of immigration deportation or removal."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not travel outside the United Kingdom, the Channel Islands or the Isle of Man except with the prior permission of your supervisor or in order to comply with a legal obligation (whether or not arising under the law of any part of the United Kingdom, the Channel Islands or the Isle of Man)."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not undertake work, or a particular type of work, unless it is approved by the supervising officer and notify the supervising officer in advance of any proposal to undertake work or a particular type of work."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Not undertake work, or a particular type of work, unless it is approved by your supervisor and notify your supervisor in advance of any proposal to undertake work or a particular type of work."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Notify your supervising officer of any developing intimate relationships with [WOMEN / MEN / WOMEN OR MEN]."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Notify your supervising officer of any developing personal relationships, whether intimate or not, with any person you know or believe to be resident in a household containing children under the age of 18. This includes persons known to you prior to your time in custody with whom you are renewing or developing a personal relationship with."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Provide your supervising officer with details (such as make, model, colour, registration) of any vehicle you own, hire for more than a short journey or have regular use of, prior to any journey taking place."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Provide your supervising officer with the details of any bank accounts to which you are a signatory and of any credit cards you possess. You must also notify your supervising officer when becoming a signatory to any new bank account or credit card, and provide the account/card details. This condition will be reviewed on a monthly basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Receive visits from the supervising officer in accordance with any instructions given by the supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Report to staff at [NAME OF APPROVED PREMISES] at [TIME / DAILY], unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Report to staff at [NAME OF POLICE STATION] at [TIME / DAILY], unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Reside permanently at an address approved by the supervising officer and obtain the prior permission of the supervising officer for any stay of one or more nights at a different address."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Reside permanently at an address approved by your supervisor and obtain the prior permission of the supervisor for any stay of one or more nights at a different address."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "Should you return to the UK and Islands before the expiry date of your licence then your licence conditions will be in force and you must report within two working days to your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "To comply with any instruction given by your supervising officer requiring you to attend polygraph testing. To participate in polygraph sessions and examinations as instructed by or under the authority of your supervising officer and to comply with any instruction given to you during a polygraph session by the person conducting the polygraph."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your alcohol / drug / sexual / violent / gambling / solvent abuse / anger / debt / prolific / offending behaviour problems at the [NAME OF COURSE / CENTRE]."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "To make any device capable of making or storing digital images (including a camera and a mobile phone with a camera function) available for inspection on request by your supervising officer and/or a police officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "To notify your supervising officer of the details of any passport that you possess (including passport number), and of any intention to apply for a new passport."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "To surrender your passport(s) to your supervising officer and to notify your supervising officer of any intention to apply for a new passport."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "You are subject to alcohol monitoring. Your alcohol intake will be electronically monitored for a period of [INSERT TIMEFRAME] ending on [END DATE], and you may not consume units of alcohol, unless otherwise permitted by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "You must reside within the [INSERT REGION] while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "You must stay at [APPROVED ADDRESS] between 5pm and midnight every day until your electronic tag is installed unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$text = "You will be subject to trail monitoring. Your whereabouts will be electronically monitored by GPS Satellite Tagging, ending on [INSERT END DATE], and you must cooperate with the monitoring as directed by your supervising officer unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Allow person(s) as designated by your supervising officer to install an electronic monitoring tag on you and access to install any associated equipment in your property, and for the purpose of ensuring that equipment is functioning correctly. You must not damage or tamper with these devices and ensure that the tag is charged, and report to your supervising officer and the EM provider immediately if the tag or the associated equipment are not working correctly. This will be for the purpose of monitoring your {electronicMonitoringTypes} licence condition(s) unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Attend {appointmentAddress}{appointmentDate}{appointmentTime}, as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Attend {name} {address}, as reasonably required by your supervising officer, to give a sample of oral fluid / urine in order to test whether you have any specified Class A and specified Class B drugs in your body, for the purpose of ensuring that you are complying with the condition of your licence requiring you to be of good behaviour. Not to take any action that could hamper or frustrate the drug testing process."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Attend {name} {address}, as reasonably required by your supervisor, to give a sample of oral fluid / urine in order to test whether you have any specified Class A or specified Class B drugs in your body, for the purpose of ensuring that you are complying with the requirement of your supervision period requiring you to be of good behaviour."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Confine yourself to an address approved by your supervising officer between the hours of {curfewStart} and {curfewEnd} daily unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Confine yourself to remain at {curfewAddress} initially from {curfewStart} until {curfewEnd} each day, and, thereafter, for such a period as may be reasonably notified to you by your supervising officer; and comply with such arrangements as may be reasonably put in place and notified to you by your supervising officer so as to allow for your whereabouts and your compliance with your curfew requirement be monitored (whether by electronic means involving your wearing an electronic tag or otherwise)."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Not to associate with any person currently or formerly associated with {nameOfOrganisation} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Not to contact or associate with {nameOfIndividual} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Not to enter or remain in sight of any {typeOfPremises} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Not to enter the area of {outOfBoundArea}, as defined by the attached map, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Not to have unsupervised contact with {gender} children under the age of {age} without the prior approval of your supervising officer{socialServicesDepartment} except where that contact is inadvertent and not reasonably avoidable in the course of lawful daily life."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Not to reside (not even to stay for one night) in the same household as {gender} child under the age of {age} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Not to seek to approach or communicate with {name} without the prior approval of your supervising officer{socialServicesDepartment}."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Not to undertake work or other organised activity which will involve a person under the age of {age}, either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Report to staff at {approvedPremises} at {reportingTime}, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "Report to staff at {policeStation} at {reportingTime}, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your {behaviourProblems} problems{course}."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "You are subject to alcohol monitoring. Your alcohol intake will be electronically monitored for a period of {timeframe} ending on {endDate}, and you may not consume units of alcohol, unless otherwise permitted by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "You must reside within the {probationRegion} probation region while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "You must stay at {approvedAddress} between 5pm and midnight every day until your electronic tag is installed unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV1.kt$tpl = "You will be subject to trail monitoring. Your whereabouts will be electronically monitored by GPS Satellite Tagging, ending on {endDate}, and you must cooperate with the monitoring as directed by your supervising officer unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$category = "Supervision in the community by the supervising officer, or other responsible officer, or organisation"</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Allow person(s) as designated by your supervising officer to install an electronic monitoring tag on you and access to install any associated equipment in your property, and for the purpose of ensuring that equipment is functioning correctly. You must not damage or tamper with these devices and ensure that the tag is charged, and report to your supervising officer and the EM provider immediately if the tag or the associated equipment are not working correctly. This will be for the purpose of monitoring your [INSERT TYPES OF CONDITIONS TO BE ELECTRONICALLY MONITORED HERE] licence condition(s) unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Attend [INSERT APPOINTMENT TIME DATE AND ADDRESS], as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Attend [INSERT NAME AND ADDRESS], as reasonably required by your supervising officer, to give a sample of oral fluid / urine in order to test whether you have any specified Class A and specified Class B drugs in your body, for the purpose of ensuring that you are complying with the condition of your licence requiring you to be of good behaviour. Not to take any action that could hamper or frustrate the drug testing process."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Attend [INSERT NAME AND ADDRESS], as reasonably required by your supervisor, to give a sample of oral fluid / urine in order to test whether you have any specified Class A or specified Class B drugs in your body, for the purpose of ensuring that you are complying with the requirement of your supervision period requiring you to be of good behaviour."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Be of good behaviour and not behave in a way that undermines the rehabilitative purpose of the supervision period."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Confine yourself to an address approved by your supervising officer between the hours of [TIME] and [TIME] daily unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Confine yourself to remain at [CURFEW ADDRESS] initially from [START OF CURFEW HOURS] until [END OF CURFEW HOURS] each day, and, thereafter, for such a period as may be reasonably notified to you by your supervising officer; and comply with such arrangements as may be reasonably put in place and notified to you by your supervising officer so as to allow for your whereabouts and your compliance with your curfew requirement be monitored (whether by electronic means involving your wearing an electronic tag or otherwise)."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Keep in touch with the supervising officer in accordance with instructions given by the supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to associate with any person currently or formerly associated with [NAMES OF SPECIFIC GROUPS OR ORGANISATIONS] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to attend or organise any meetings or gatherings other than those convened solely for the purposes of worship without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to contact directly or indirectly any person who is a serving or remand prisoner or detained in State custody, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to contact directly or indirectly any person whom you know or believe to have been charged or convicted of any extremist related offence, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to contact or associate with [NAMED OFFENDER(S) / NAMED INDIVIDUAL(S)] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to contact or associate with a known sex offender other than when compelled by attendance at a Treatment Programme or when residing at Approved Premises without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to delete the usage history on any internet enabled device or computer used and to allow such items to be inspected as required by the police or your supervising officer. Such inspection may include removal of the device for inspection and the installation of monitoring software."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to engage in any discussion or act to promote grooming or influencing of an individual or a group for the purpose of extremism or radicalisation."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to enter [NAME / TYPE OF PREMISES / ADDRESS / ROAD] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to enter or remain in sight of any [CHILDREN'S PLAY AREA, SWIMMING BATHS, SCHOOL ETC] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to enter the area of [CLEARLY SPECIFIED AREA], as defined by the attached map, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to give or engage in the delivery of any lecture, talk, or sermon whether part of an act of worship or not, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to have in your possession any printed or electronically recorded material or handwritten notes which contain encoded information or that promote the destruction of or hatred for any religious or ethnic group or that celebrates, justifies or promotes acts of violence, or that contain information about military or paramilitary technology, weapons, techniques or tactics without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to have unsupervised contact with [ANY / ANY FEMALE / ANY MALE] children under the age of [INSERT AGE] without the prior approval of your supervising officer and / or [INSERT NAME OF APPROPRIATE SOCIAL SERVICES DEPARTMENT] except where that contact is inadvertent and not reasonably avoidable in the course of lawful daily life."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to own or possess a mobile phone with a photographic function without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to own or possess more than one mobile phone or SIM card without the prior approval of your supervising officer and to provide your supervising officer with details of that mobile telephone or one you have regular use of, including the IMEI number and the SIM card that you possess."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to participate directly or indirectly in organising and/or contributing to any demonstration, meeting, gathering or website without the prior approval of your supervising officer. This condition will be reviewed on a monthly basis and may be amended or removed if your risk is assessed as having changed."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to reside (not even to stay for one night) in the same household as [ANY / ANY FEMALE / ANY MALE] child under the age of [INSERT AGE] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to seek to approach or communicate with [INSERT NAME OF VICTIM AND / OR FAMILY MEMBERS] without the prior approval of your supervising officer and / or [INSERT NAME OF APPROPRIATE SOCIAL SERVICES DEPARTMENT]."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to undertake work or other organised activity which will involve a person under the age of [INSERT AGE], either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not to use or access any computer or device which is internet enabled without the prior approval of your supervising officer; and only for the purpose, and only at a specific location, as specified by that officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not travel outside the United Kingdom, the Channel Islands or the Isle of Man except with the prior permission of the supervising officer or for the purposes of immigration deportation or removal."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not travel outside the United Kingdom, the Channel Islands or the Isle of Man except with the prior permission of your supervisor or in order to comply with a legal obligation (whether or not arising under the law of any part of the United Kingdom, the Channel Islands or the Isle of Man)."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not undertake work, or a particular type of work, unless it is approved by the supervising officer and notify the supervising officer in advance of any proposal to undertake work or a particular type of work."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Not undertake work, or a particular type of work, unless it is approved by your supervisor and notify your supervisor in advance of any proposal to undertake work or a particular type of work."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Notify your supervising officer of any developing intimate relationships with [WOMEN / MEN / WOMEN OR MEN]."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Notify your supervising officer of any developing personal relationships, whether intimate or not, with any person you know or believe to be resident in a household containing children under the age of 18. This includes persons known to you prior to your time in custody with whom you are renewing or developing a personal relationship with."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Provide your supervising officer with details (such as make, model, colour, registration) of any vehicle you own, hire for more than a short journey or have regular use of, prior to any journey taking place."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Provide your supervising officer with the details of any bank accounts to which you are a signatory and of any credit cards you possess. You must also notify your supervising officer when becoming a signatory to any new bank account or credit card, and provide the account/card details. This condition will be reviewed on a monthly basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Receive visits from the supervising officer in accordance with any instructions given by the supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Report to staff at [NAME OF APPROVED PREMISES] at [TIME / DAILY], unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Report to staff at [NAME OF POLICE STATION] at [TIME / DAILY], unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Reside permanently at an address approved by the supervising officer and obtain the prior permission of the supervising officer for any stay of one or more nights at a different address."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Reside permanently at an address approved by your supervisor and obtain the prior permission of the supervisor for any stay of one or more nights at a different address."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Should you return to the UK and Islands before the expiry date of your licence then your licence conditions will be in force and you must report within two working days to your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Tell the supervising officer if you change or add any contact details, including phone number or email."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "Tell the supervising officer if you use a name which is different to the name or names which appear on your licence."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "To comply with any instruction given by your supervising officer requiring you to attend polygraph testing. To participate in polygraph sessions and examinations as instructed by or under the authority of your supervising officer and to comply with any instruction given to you during a polygraph session by the person conducting the polygraph."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your alcohol / drug / sexual / violent / gambling / solvent abuse / anger / debt / prolific / offending behaviour problems at the [NAME OF COURSE / CENTRE]."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "To make any device capable of making or storing digital images (including a camera and a mobile phone with a camera function) available for inspection on request by your supervising officer and/or a police officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "To notify your supervising officer of the details of any passport that you possess (including passport number), and of any intention to apply for a new passport."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "To surrender your passport(s) to your supervising officer and to notify your supervising officer of any intention to apply for a new passport."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "You are subject to alcohol monitoring. Your alcohol intake will be electronically monitored for a period of [INSERT TIMEFRAME] ending on [END DATE], and you may not consume units of alcohol, unless otherwise permitted by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "You must let the police search you if they ask. You must also let them search a vehicle you are with, like a car or a motorbike."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "You must reside within the [INSERT REGION] while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "You must stay at [APPROVED ADDRESS] between 5pm and midnight every day until your electronic tag is installed unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$text = "You will be subject to trail monitoring. Your whereabouts will be electronically monitored by GPS Satellite Tagging, ending on [INSERT END DATE], and you must cooperate with the monitoring as directed by your supervising officer unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Allow person(s) as designated by your supervising officer to install an electronic monitoring tag on you and access to install any associated equipment in your property, and for the purpose of ensuring that equipment is functioning correctly. You must not damage or tamper with these devices and ensure that the tag is charged, and report to your supervising officer and the EM provider immediately if the tag or the associated equipment are not working correctly. This will be for the purpose of monitoring your {electronicMonitoringTypes} licence condition(s) unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Attend {appointmentAddress}{appointmentDate}{appointmentTime}, as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Attend {name} {address}, as reasonably required by your supervising officer, to give a sample of oral fluid / urine in order to test whether you have any specified Class A and specified Class B drugs in your body, for the purpose of ensuring that you are complying with the condition of your licence requiring you to be of good behaviour. Not to take any action that could hamper or frustrate the drug testing process."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Attend {name} {address}, as reasonably required by your supervisor, to give a sample of oral fluid / urine in order to test whether you have any specified Class A or specified Class B drugs in your body, for the purpose of ensuring that you are complying with the requirement of your supervision period requiring you to be of good behaviour."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Confine yourself to an address approved by your supervising officer between the hours of {curfewStart} and {curfewEnd} daily unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Confine yourself to remain at {curfewAddress} initially from {curfewStart} until {curfewEnd} each day, and, thereafter, for such a period as may be reasonably notified to you by your supervising officer; and comply with such arrangements as may be reasonably put in place and notified to you by your supervising officer so as to allow for your whereabouts and your compliance with your curfew requirement be monitored (whether by electronic means involving your wearing an electronic tag or otherwise)."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Not to associate with any person currently or formerly associated with {nameOfOrganisation} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Not to contact or associate with {nameOfIndividual} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Not to enter or remain in sight of any {typeOfPremises} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Not to enter the area of {outOfBoundArea}, as defined by the attached map, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Not to have unsupervised contact with {gender} children under the age of {age} without the prior approval of your supervising officer{socialServicesDepartment} except where that contact is inadvertent and not reasonably avoidable in the course of lawful daily life."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Not to reside (not even to stay for one night) in the same household as {gender} child under the age of {age} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Not to seek to approach or communicate with {name} without the prior approval of your supervising officer{socialServicesDepartment}."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Not to undertake work or other organised activity which will involve a person under the age of {age}, either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Report to staff at {approvedPremises} at {reportingTime}, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "Report to staff at {policeStation} at {reportingTime}, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your {behaviourProblems} problems{course}."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "You are subject to alcohol monitoring. Your alcohol intake will be electronically monitored for a period of {timeframe} ending on {endDate}, and you may not consume units of alcohol, unless otherwise permitted by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "You must reside within the {probationRegion} probation region while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "You must stay at {approvedAddress} between 5pm and midnight every day until your electronic tag is installed unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2.kt$tpl = "You will be subject to trail monitoring. Your whereabouts will be electronically monitored by GPS Satellite Tagging, ending on {endDate}, and you must cooperate with the monitoring as directed by your supervising officer unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$category = "Supervision in the community by the supervising officer, or other responsible officer, or organisation"</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$subtext = "If you want to add more than 2 reporting times per day, this must be done as a bespoke condition approved by PPCS."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Allow person(s) as designated by your supervising officer to install an electronic monitoring tag on you and access to install any associated equipment in your property, and for the purpose of ensuring that equipment is functioning correctly. You must not damage or tamper with these devices and ensure that the tag is charged, and report to your supervising officer and the EM provider immediately if the tag or the associated equipment are not working correctly. This will be for the purpose of monitoring your [INSERT TYPES OF CONDITIONS TO BE ELECTRONICALLY MONITORED HERE] licence condition(s) unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Attend [INSERT APPOINTMENT TIME DATE AND ADDRESS], as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Attend [INSERT NAME AND ADDRESS], as reasonably required by your supervisor, to give a sample of oral fluid / urine in order to test whether you have any specified Class A or specified Class B drugs in your body, for the purpose of ensuring that you are complying with the requirement of your supervision period requiring you to be of good behaviour."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Attend a location, as required by your supervising officer, to give a sample of oral fluid / urine in order to test whether you have any specified Class A and specified Class B drugs in your body, for the purpose of ensuring that you are complying with the condition of your licence requiring you to be of good behaviour. Do not take any action that could hamper or frustrate the drug testing process."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Attend all appointments arranged for you with a psychiatrist / psychologist / medical practitioner, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Attend appointments, as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Be of good behaviour and not behave in a way that undermines the rehabilitative purpose of the supervision period."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Confine yourself to an address approved by your supervising officer between the hours of [TIME] and [TIME] daily unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Keep in touch with the supervising officer in accordance with instructions given by the supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to approach or communicate with any victims of your offences without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to associate with any person currently or formerly associated with [NAMES OF SPECIFIC GROUPS OR ORGANISATIONS] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to attend or organise any meetings or gatherings other than those convened solely for the purposes of worship without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to contact directly or indirectly any person who is a serving or remand prisoner or detained in State custody, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to contact directly or indirectly any person whom you know or believe to have been charged or convicted of any extremist related offence, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to contact or associate with [NAMED OFFENDER(S) / NAMED INDIVIDUAL(S)] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to contact or associate with a known sex offender other than when compelled by attendance at a Treatment Programme or when residing at Approved Premises without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to delete the usage history on any internet enabled device or computer used and to allow such items to be inspected as requested. Such inspection may include removal of the device for inspection and the installation of monitoring software."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to engage in any discussion or act to promote grooming or influencing of an individual or a group for the purpose of extremism or radicalisation."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to enter [NAME / TYPE OF PREMISES / ADDRESS / ROAD] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to enter or remain in sight of any [CHILDREN'S PLAY AREA, SWIMMING BATHS, SCHOOL ETC] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to enter the area of [CLEARLY SPECIFIED AREA], as defined by the attached map, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to give or engage in the delivery of any lecture, talk, or sermon whether part of an act of worship or not, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to have in your possession any printed or electronically recorded material or handwritten notes which contain encoded information or that promote the destruction of or hatred for any religious or ethnic group or that celebrates, justifies or promotes acts of violence, or that contain information about military or paramilitary technology, weapons, techniques or tactics without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to have unsupervised contact with [ANY / ANY FEMALE / ANY MALE] children under the age of [INSERT AGE] without the prior approval of your supervising officer and / or [INSERT NAME OF APPROPRIATE SOCIAL SERVICES DEPARTMENT] except where that contact is inadvertent and not reasonably avoidable in the course of lawful daily life."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to own or possess a mobile phone with a photographic function without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to own or possess more than one mobile phone or SIM card without the prior approval of your supervising officer and to provide your supervising officer with details of that mobile telephone or one you have regular use of, including the IMEI number and the SIM card that you possess."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to participate directly or indirectly in organising and/or contributing to any demonstration, meeting, gathering or website without the prior approval of your supervising officer. This condition will be reviewed on a monthly basis and may be amended or removed if your risk is assessed as having changed."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to reside (not even to stay for one night) in the same household as [ANY / ANY FEMALE / ANY MALE] child under the age of [INSERT AGE] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to seek to approach or communicate with [INSERT NAME OF VICTIM AND / OR FAMILY MEMBERS] without the prior approval of your supervising officer and / or [INSERT NAME OF APPROPRIATE SOCIAL SERVICES DEPARTMENT]."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to undertake work or other organised activity which will involve a person under the age of [INSERT AGE], either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not to use or access any computer or device which is internet enabled without the prior approval of your supervising officer; and only for the purpose, and only at a specific location, as specified by that officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not travel outside the United Kingdom, the Channel Islands or the Isle of Man except with the prior permission of the supervising officer or for the purposes of immigration deportation or removal."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not travel outside the United Kingdom, the Channel Islands or the Isle of Man except with the prior permission of your supervisor or in order to comply with a legal obligation (whether or not arising under the law of any part of the United Kingdom, the Channel Islands or the Isle of Man)."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not undertake work, or a particular type of work, unless it is approved by the supervising officer and notify the supervising officer in advance of any proposal to undertake work or a particular type of work."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Not undertake work, or a particular type of work, unless it is approved by your supervisor and notify your supervisor in advance of any proposal to undertake work or a particular type of work."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Notify your supervising officer of any developing personal relationships, whether intimate or not, with any person you know or believe to be resident in a household containing children under the age of 18. This includes persons known to you prior to your time in custody with whom you are renewing or developing a personal relationship with."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Notify your supervising officer of any developing relationships, including the ending of any relationships."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Provide your supervising officer with details (such as make, model, colour, registration) of any vehicle you own, hire for more than a short journey or have regular use of, prior to any journey taking place."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Provide your supervising officer with the details of any bank accounts to which you are a signatory and of any credit cards you possess. You must also notify your supervising officer when becoming a signatory to any new bank account or credit card, and provide the account/card details. This condition will be reviewed on a monthly basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Receive visits from the supervising officer in accordance with any instructions given by the supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Report to staff at [NAME OF APPROVED PREMISES] at [TIME / DAILY], unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Report to staff at [NAME OF POLICE STATION] at [TIME / DAILY], unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Reside permanently at an address approved by the supervising officer and obtain the prior permission of the supervising officer for any stay of one or more nights at a different address."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Reside permanently at an address approved by your supervisor and obtain the prior permission of the supervisor for any stay of one or more nights at a different address."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Should you return to the UK and Islands before the expiry date of your licence then your licence conditions will be in force and you must report within two working days to your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Tell the supervising officer if you change or add any contact details, including phone number or email."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "Tell the supervising officer if you use a name which is different to the name or names which appear on your licence."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "To comply with any instruction given by your supervising officer requiring you to attend polygraph testing. To participate in polygraph sessions and examinations as instructed by or under the authority of your supervising officer and to comply with any instruction given to you during a polygraph session by the person conducting the polygraph."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your alcohol / drug / sexual / violent / gambling / solvent abuse / anger / debt / prolific / offending behaviour problems."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "To make any device capable of making or storing digital images (including a camera and a mobile phone with a camera function) available for inspection upon request."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "To notify your supervising officer of the details of any passport that you possess (including passport number), and of any intention to apply for a new passport."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "To surrender your passport(s) to your supervising officer and to notify your supervising officer of any intention to apply for a new passport."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "You must let the police search you if they ask. You must also let them search a vehicle you are with, like a car or a motorbike."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "You must not drink any alcohol until [END DATE] unless your probation officer says you can. You will need to wear an electronic tag all the time so we can check this."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "You must reside overnight within [REGION] probation region while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "You must stay at [APPROVED ADDRESS] between 5pm and midnight every day until your electronic tag is installed unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "You will be subject to trail monitoring. Your whereabouts will be electronically monitored by GPS Satellite Tagging, ending on [INSERT END DATE], and you must cooperate with the monitoring as directed by your supervising officer unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$text = "You will need to wear an electronic tag all the time until [END DATE] so we can check how much alcohol you are drinking, and if you are drinking alcohol when you have been told you must not. To help you drink less alcohol you must take part in any activities, like treatment programmes, your probation officer asks you to."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Allow person(s) as designated by your supervising officer to install an electronic monitoring tag on you and access to install any associated equipment in your property, and for the purpose of ensuring that equipment is functioning correctly. You must not damage or tamper with these devices and ensure that the tag is charged, and report to your supervising officer and the EM provider immediately if the tag or the associated equipment are not working correctly. This will be for the purpose of monitoring your {electronicMonitoringTypes} licence condition(s) unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Attend {appointmentAddress}{appointmentDate}{appointmentTime}, as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Attend {name} {address}, as reasonably required by your supervisor, to give a sample of oral fluid / urine in order to test whether you have any specified Class A or specified Class B drugs in your body, for the purpose of ensuring that you are complying with the requirement of your supervision period requiring you to be of good behaviour."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Confine yourself to an address approved by your supervising officer between the hours of {curfewStart} and {curfewEnd} daily unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Not to associate with any person currently or formerly associated with {nameOfOrganisation} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Not to contact or associate with {nameOfIndividual} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Not to enter or remain in sight of any {typeOfPremises} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Not to enter the area of {outOfBoundArea}, as defined by the attached map, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Not to have unsupervised contact with {gender} children under the age of {age} without the prior approval of your supervising officer{socialServicesDepartment} except where that contact is inadvertent and not reasonably avoidable in the course of lawful daily life."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Not to reside (not even to stay for one night) in the same household as {gender} child under the age of {age} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Not to seek to approach or communicate with {name} without the prior approval of your supervising officer{socialServicesDepartment}."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Not to undertake work or other organised activity which will involve a person under the age of {age}, either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Report to staff at {approvedPremises} at {reportingTime}{reportingTime1}{reportingTime2} {alternativeReportingFrequency || reportingFrequency}, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "Report to staff at {policeStation} at {reportingTime}{reportingTime1}{reportingTime2} {alternativeReportingFrequency || reportingFrequency}, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your {behaviourProblems} problems."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "You must not drink any alcohol until {endDate} unless your probation officer says you can. You will need to wear an electronic tag all the time so we can check this."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "You must reside overnight within {probationRegion} probation region while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "You must stay at {approvedAddress} between 5pm and midnight every day until your electronic tag is installed unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "You will be subject to trail monitoring. Your whereabouts will be electronically monitored by GPS Satellite Tagging, ending on {endDate}, and you must cooperate with the monitoring as directed by your supervising officer unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV2Dot1.kt$tpl = "You will need to wear an electronic tag all the time until {endDate} so we can check how much alcohol you are drinking, and if you are drinking alcohol when you have been told you must not. To help you drink less alcohol you must take part in any activities, like treatment programmes, your probation officer asks you to."</ID>
    <ID>MaxLineLength:PolicyV3.kt$category = "Supervision in the community by the supervising officer, or other responsible officer, or organisation"</ID>
    <ID>MaxLineLength:PolicyV3.kt$subtext = "If you want to add more than 2 reporting times per day, this must be done as a bespoke condition approved by PPCS."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Allow person(s) as designated by your supervising officer to install an electronic monitoring tag on you and access to install any associated equipment in your property, and for the purpose of ensuring that equipment is functioning correctly. You must not damage or tamper with these devices and ensure that the tag is charged, and report to your supervising officer and the EM provider immediately if the tag or the associated equipment are not working correctly. This will be for the purpose of monitoring your [INSERT TYPES OF CONDITIONS TO BE ELECTRONICALLY MONITORED HERE] licence condition(s) unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Attend [INSERT APPOINTMENT TIME DATE AND ADDRESS], as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Attend [INSERT NAME AND ADDRESS], as reasonably required by your supervisor, to give a sample of oral fluid / urine in order to test whether you have any specified Class A or specified Class B drugs in your body, for the purpose of ensuring that you are complying with the requirement of your supervision period requiring you to be of good behaviour."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Attend a location, as directed by your supervising officer, to address your dependency on, or propensity to misuse, [A CONTROLLED DRUG / ALCOHOL / SOLVENTS]."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Attend a location, as required by your supervising officer, to give a sample of oral fluid / urine in order to test whether you have any specified Class A and specified Class B drugs in your body, for the purpose of ensuring that you are complying with the condition of your licence requiring you to be of good behaviour. Do not take any action that could hamper or frustrate the drug testing process."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Attend all appointments arranged for you with a [PSYCHIATRIST / PSYCHOLOGIST / MEDICAL PRACTITIONER] unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Be of good behaviour and not behave in a way that undermines the rehabilitative purpose of the supervision period."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Confine yourself to an address approved by your supervising officer between the hours of [TIME] and [TIME] daily unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Keep in touch with the supervising officer in accordance with instructions given by the supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to access any site or app related to [TYPE OF WEBSITE/APP] on any devices without the permission of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to approach, contact or undertake any type of relationship with any employee, contractor or volunteer working on behalf of HM Prison and Probation Service directly or indirectly outside of supervision in appointments/reporting requirements without the prior permission of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to associate with any person currently or formerly associated with [NAMES OF SPECIFIC GROUPS OR ORGANISATIONS] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to attempt to bribe, blackmail or coerce any employee, contractor or volunteer working on behalf of HM Prison and Probation Service directly or indirectly to undertake actions on your behalf."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to attend or organise any meetings or gatherings other than those convened solely for the purposes of worship without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to contact directly or indirectly any person who is a serving or remand prisoner or detained in State custody, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to contact directly or indirectly any person whom you know or believe to have been charged or convicted of any extremist related offence, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to contact or associate with [NAMED OFFENDER(S) / NAMED INDIVIDUAL(S)] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to contact or associate with a known sex offender other than when compelled by attendance at a Treatment Programme or when residing at Approved Premises without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to delete the usage history on any [INTERNET ENABLED DEVICE / COMPUTER / MOBILE PHONE / DIGITAL CAMERA] used and to allow such items to be inspected as requested. Such inspection may include removal of the device for inspection and the installation of monitoring software."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to engage in any discussion or act to promote grooming or influencing of an individual or a group for the purpose of extremism or radicalisation."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to engage with or attempt to engage with commercial sexual services. This includes companionship/friendship style services, and all services whether sexual or not."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to enter [NAME / TYPE OF PREMISES / ADDRESS / ROAD] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to enter or remain in sight of any [CHILDREN'S PLAY AREA, SWIMMING BATHS, SCHOOL ETC] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to enter the area as defined by the attached map without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to enter the area as defined by the attached map, during the period that [NAME OF EVENT] takes place, including all occasions that the event takes place, without the prior permission of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to give or engage in the delivery of any lecture, talk, or sermon whether part of an act of worship or not, without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to have cash in your possession in excess of the value of [VALUE IN £] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to have in your possession any printed or electronically recorded material or handwritten notes which contain encoded information or that promote the destruction of or hatred for any religious or ethnic group or that celebrates, justifies or promotes acts of violence, or that contain information about military or paramilitary technology, weapons, techniques or tactics without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to have unsupervised contact with [ANY / ANY FEMALE / ANY MALE] children under the age of [INSERT AGE] without the prior approval of your supervising officer and / or [INSERT NAME OF APPROPRIATE SOCIAL SERVICES DEPARTMENT] except where that contact is inadvertent and not reasonably avoidable in the course of lawful daily life."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to own or possess more than one mobile phone or SIM card without the prior approval of your supervising officer and to provide your supervising officer with details of that mobile telephone or one you have regular use of, including the IMEI number and the SIM card that you possess."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to partake in gambling, or making payments for other games of chance without the prior permission of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to participate directly or indirectly in organising and/or contributing to any demonstration, meeting, gathering or website without the prior approval of your supervising officer. This condition will be reviewed on a monthly basis and may be amended or removed if your risk is assessed as having changed."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to reside (not even to stay for one night) in the same household as [ANY / ANY FEMALE / ANY MALE] child under the age of [INSERT AGE] without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to seek to approach or communicate with [INSERT NAME OF VICTIM AND / OR FAMILY MEMBERS] without the prior approval of your supervising officer and / or [INSERT NAME OF APPROPRIATE SOCIAL SERVICES DEPARTMENT]."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to undertake work or other organised activity which will involve a person under the age of [INSERT AGE], either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to use or access any computer or device which is internet enabled without the prior approval of your supervising officer; and only for the purpose, and only at a specific location, as specified by that officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not to use or install software or permit installation of software on any of your approved devices related to [VIRTUAL PRIVATE NETWORKS (VPNs) / CLOUD STORAGE / VIRTUAL DESKTOPS / AUTOMATIC DELETION OF CONTENT], without the prior permission of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not travel outside the United Kingdom, the Channel Islands or the Isle of Man except with the prior permission of the supervising officer or for the purposes of immigration deportation or removal."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not travel outside the United Kingdom, the Channel Islands or the Isle of Man except with the prior permission of your supervisor or in order to comply with a legal obligation (whether or not arising under the law of any part of the United Kingdom, the Channel Islands or the Isle of Man)."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not undertake work, or a particular type of work, unless it is approved by the supervising officer and notify the supervising officer in advance of any proposal to undertake work or a particular type of work."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Not undertake work, or a particular type of work, unless it is approved by your supervisor and notify your supervisor in advance of any proposal to undertake work or a particular type of work."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Notify your supervising officer of any developing personal relationships, whether intimate or not, with any person you know or believe to be resident in a household containing children under the age of 18. This includes persons known to you prior to your time in custody with whom you are renewing or developing a personal relationship with."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Notify your supervising officer of any developing relationships, including status changes such as engagement, marriage, pregnancies or the ending of any relationships, and disclose the details of the person you are in a relationship with."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Notify your supervising officer of any travel outside of your home county, including on public transport, prior to any such journey taking place unless otherwise specified by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Provide your supervising officer with copies of your [PAYSLIPS / BANK STATEMENTS / DETAILS OF ALL FORMS OF INCOME] upon their request and no less than once a month."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Provide your supervising officer with details (such as make, model, colour, registration) of any vehicle you own, hire for more than a short journey or have regular use of, prior to any journey taking place."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Provide your supervising officer with details of any assets, property or possessions worth over [VALUE IN £]."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Provide your supervising officer with the details of any [BANK ACCOUNTS / CREDIT CARDS / CRYPTO CURRENCY ACCOUNTS OR WALLETS] to which you have access or control over, including those held by a third party. You must also notify your supervising officer when you have access or control over any new accounts/wallets, and provide the details."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Provide your supervising officer with the details of the full postal addresses of all premises and storage facilities, including business addresses, to which you have a right of access."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Receive visits from the supervising officer in accordance with any instructions given by the supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Report to staff at [NAME OF POLICE STATION] at [TIME / DAILY], unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Report to staff at [THE APPROVED PREMISES WHERE YOU RESIDE / NAME OF APPROVED PREMISES] at [TIME / DAILY / OTHER], unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on a [WEEKLY / MONTHLY / ETC] basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Reside permanently at an address approved by the supervising officer and obtain the prior permission of the supervising officer for any stay of one or more nights at a different address."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Reside permanently at an address approved by your supervisor and obtain the prior permission of the supervisor for any stay of one or more nights at a different address."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Should you return to the UK and Islands before the expiry date of your licence then your licence conditions will be in force and you must report within two working days to your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Tell the supervising officer if you change or add any contact details, including phone number or email."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "Tell the supervising officer if you use a name which is different to the name or names which appear on your licence."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "To attend and engage with any appointments with staff at Job Centre Plus, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "To comply with any instruction given by your supervising officer requiring you to attend polygraph testing. To participate in polygraph sessions and examinations as instructed by or under the authority of your supervising officer and to comply with any instruction given to you during a polygraph session by the person conducting the polygraph."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your [SEXUAL OFFENDING / VIOLENT OFFENDING / GAMBLING / PROLIFIC OFFENDING / OFFENDING BEHAVIOUR]."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "To comply with any requirements specified by your supervising officer to register and engage with [HOUSING / BENEFITS / EARLY HELP / CHILDREN'S SERVICES / YOUR SUPPORT NETWORKS / AN EDUCATION PROVIDER]."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "To notify your supervising officer of the details of any passport that you possess (including passport number), and of any intention to apply for a new passport."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "To surrender your passport(s) to your supervising officer and to notify your supervising officer of any intention to apply for a new passport."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "You must let the police search you if they ask. You must also let them search a vehicle you are with, like a car or a motorbike."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "You must not drink any alcohol until [END DATE]. You will need to wear an electronic tag all the time so we can check this."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "You must reside overnight within [REGION] probation region while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "You must stay at [APPROVED ADDRESS] between 5pm and midnight every day until your electronic tag is installed unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "You will be subject to trail monitoring. Your whereabouts will be electronically monitored by GPS Satellite Tagging, ending on [INSERT END DATE], and you must cooperate with the monitoring as directed by your supervising officer unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "You will need to wear an electronic tag all the time until [END DATE] so we can check how much alcohol you are drinking, and if you are drinking alcohol when you have been told you must not. To help you drink less alcohol you must take part in any activities, like treatment programmes, your probation officer asks you to."</ID>
    <ID>MaxLineLength:PolicyV3.kt$text = "[NOTIFY YOUR SUPERVISING OFFICER IF YOU / REQUEST PERMISSION FROM YOUR SUPERVISING OFFICER BEFORE YOU] upload, add, modify or stream any material on any site or app related to [SOCIAL NETWORKING / VIDEO SHARING / ONLINE CHAT-ROOMS / PODCASTS]."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Allow person(s) as designated by your supervising officer to install an electronic monitoring tag on you and access to install any associated equipment in your property, and for the purpose of ensuring that equipment is functioning correctly. You must not damage or tamper with these devices and ensure that the tag is charged, and report to your supervising officer and the EM provider immediately if the tag or the associated equipment are not working correctly. This will be for the purpose of monitoring your {electronicMonitoringTypes} licence condition(s) unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Attend a location, as directed by your supervising officer, to address your dependency on, or propensity to misuse, {substanceTypes}."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Attend all appointments arranged for you with a {appointmentType} unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Attend {appointmentAddress}{appointmentDate}{appointmentTime}, as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Attend {name} {address}, as reasonably required by your supervisor, to give a sample of oral fluid / urine in order to test whether you have any specified Class A or specified Class B drugs in your body, for the purpose of ensuring that you are complying with the requirement of your supervision period requiring you to be of good behaviour."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Confine yourself to an address approved by your supervising officer between the hours of {curfewStart} and {curfewEnd} daily unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk that you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to access any site or app related to {contentType} on any devices without the permission of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to associate with any person currently or formerly associated with {nameOfOrganisation} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to contact or associate with {nameOfIndividual} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to delete the usage history on any {deviceTypes} used and to allow such items to be inspected as requested. Such inspection may include removal of the device for inspection and the installation of monitoring software."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to enter or remain in sight of any {typeOfPremises} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to enter the area as defined by the attached map without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to enter the area as defined by the attached map, during the period that {eventName} takes place, including all occasions that the event takes place, without the prior permission of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to have cash in your possession in excess of the value of £{value} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to have unsupervised contact with {gender} children under the age of {age} without the prior approval of your supervising officer{socialServicesDepartment} except where that contact is inadvertent and not reasonably avoidable in the course of lawful daily life."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to reside (not even to stay for one night) in the same household as {gender} child under the age of {age} without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to seek to approach or communicate with {name} without the prior approval of your supervising officer{socialServicesDepartment}."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to undertake work or other organised activity which will involve a person under the age of {age}, either on a paid or unpaid basis without the prior approval of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Not to use or install software or permit installation of software on any of your approved devices related to {services}, without the prior permission of your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Provide your supervising officer with copies of your {evidenceOfIncome} upon their request and no less than once a month."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Provide your supervising officer with details of any assets, property or possessions worth over £{value}."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Provide your supervising officer with the details of any {accountTypes} to which you have access or control over, including those held by a third party. You must also notify your supervising officer when you have access or control over any new accounts/wallets, and provide the details."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Report to staff at {approvedPremises} at {reportingTime}{reportingTime1}{reportingTime2} {alternativeReportingFrequency || reportingFrequency}, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "Report to staff at {policeStation} at {reportingTime}{reportingTime1}{reportingTime2} {alternativeReportingFrequency || reportingFrequency}, unless otherwise authorised by your supervising officer. This condition will be reviewed by your supervising officer on {alternativeReviewPeriod || reviewPeriod} basis and may be amended or removed if it is felt that the level of risk you present has reduced appropriately."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "To comply with any requirements specified by your supervising officer for the purpose of ensuring that you address your {behaviourProblems}."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "To comply with any requirements specified by your supervising officer to register and engage with {services}."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "You must not drink any alcohol until {endDate}. You will need to wear an electronic tag all the time so we can check this."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "You must reside overnight within {probationRegion} probation region while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "You must stay at {approvedAddress} between 5pm and midnight every day until your electronic tag is installed unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "You will be subject to trail monitoring. Your whereabouts will be electronically monitored by GPS Satellite Tagging, ending on {endDate}, and you must cooperate with the monitoring as directed by your supervising officer unless otherwise authorised by your supervising officer."</ID>
    <ID>MaxLineLength:PolicyV3.kt$tpl = "You will need to wear an electronic tag all the time until {endDate} so we can check how much alcohol you are drinking, and if you are drinking alcohol when you have been told you must not. To help you drink less alcohol you must take part in any activities, like treatment programmes, your probation officer asks you to."</ID>
    <ID>MaxLineLength:PrisonApiClient.kt$PrisonApiClient$fun</ID>
    <ID>MaxLineLength:PrisonApiClient.kt$PrisonApiClient$private</ID>
    <ID>MaxLineLength:Prisoner.kt$Prisoner$allowableValues = ["RECALL", "DEAD", "INDETERMINATE_SENTENCE", "SENTENCED", "CONVICTED_UNSENTENCED", "CIVIL_PRISONER", "IMMIGRATION_DETAINEE", "REMAND", "UNKNOWN", "OTHER"]</ID>
    <ID>MaxLineLength:Prisoner.kt$Prisoner$description = "Conditional Release Date. If conditionalReleaseOverrideDate is available then it will be set as conditionalReleaseDate"</ID>
    <ID>MaxLineLength:Prisoner.kt$Prisoner$description = "Post Recall Release Date. if postRecallReleaseOverrideDate is available then it will be set as postRecallReleaseDate"</ID>
    <ID>MaxLineLength:PrisonerSearchApiClient.kt$PrisonerSearchApiClient$fun</ID>
    <ID>MaxLineLength:PrisonerSearchMockServer.kt$PrisonerSearchMockServer$private fun nextWorkingDates(): Sequence&lt;LocalDate&gt;</ID>
    <ID>MaxLineLength:ProbationSearchResult.kt$ProbationSearchResult$@Schema(description = "Based on the search results, the number of results where an offender is in prison", example = "10")</ID>
    <ID>MaxLineLength:ProbationSearchResult.kt$ProbationSearchResult$@Schema(description = "Based on the search results, the number of results where an offender is on probation", example = "10")</ID>
    <ID>MaxLineLength:PromptComListBuilder.kt$PromptComListBuilder$fun</ID>
    <ID>MaxLineLength:PromptComListBuilder.kt$PromptComListBuilder$fun CaseWithEmailAndStartDate.isNotInHardStop(): Boolean</ID>
    <ID>MaxLineLength:PromptComListBuilder.kt$PromptComListBuilder$fun excludeIneligibleCases(candidates: List&lt;PrisonerSearchPrisoner&gt;): List&lt;PrisonerSearchPrisoner&gt;</ID>
    <ID>MaxLineLength:PromptComListBuilder.kt$PromptComListBuilder$fun excludeOutOfRangeDates(cases: List&lt;CaseWithEmailAndStartDate&gt;, startDate: LocalDate, endDate: LocalDate)</ID>
    <ID>MaxLineLength:PromptComListBuilder.kt$PromptComListBuilder$val coms = deliusApiClient.getOffenderManagers(prisoners.map { it.prisonerNumber }).filter { it.case.nomisId != null }.associateBy { it.case.nomisId!! }</ID>
    <ID>MaxLineLength:PromptComListBuilderTest.kt$PromptComListBuilderTest.EnrichWithDeliusData$whenever(deliusApiClient.getOffenderManagers(listOf(prisoner.prisonerNumber))).thenReturn(listOf(offenderManager()))</ID>
    <ID>MaxLineLength:PromptComService.kt$PromptComService.Companion$fun fromNowToTheNext4Weeks(clock: Clock)</ID>
    <ID>MaxLineLength:PromptLicenceCreationController.kt$PromptLicenceCreationController$description = "Retrieve a list of cases that we have identified to encourage them to progress cases. Requires ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:PublicLicenceControllerTest.kt$PublicLicenceControllerTest.Companion$text = "Attend [INSERT NAME AND ADDRESS], as reasonably required by your supervisor, to give a sample of oral fluid / urine in order to test whether you have any specified Class A or specified Class B drugs in your body, for the purpose of ensuring that you are complying with the requirement of your supervision period requiring you to be of good behaviour."</ID>
    <ID>MaxLineLength:PublicLicencePolicyService.kt$PublicLicencePolicyService$fun getLatestLicencePolicy(): PublicLicencePolicy</ID>
    <ID>MaxLineLength:PublicLicencePolicyServiceTest.kt$PublicLicencePolicyServiceTest$"Attend [INSERT APPOINTMENT TIME DATE AND ADDRESS], as directed, to address your dependency on, or propensity to misuse, a controlled drug."</ID>
    <ID>MaxLineLength:PublicLicencePolicyServiceTest.kt$PublicLicencePolicyServiceTest$"Be of good behaviour and not behave in a way that undermines the rehabilitative purpose of the supervision period."</ID>
    <ID>MaxLineLength:PublicLicencePolicyServiceTest.kt$PublicLicencePolicyServiceTest$"You must reside overnight within [REGION] probation region while of no fixed abode, unless otherwise approved by your supervising officer."</ID>
    <ID>MaxLineLength:PublicLicenceServiceTest.kt$PublicLicenceServiceTest.Get exclusion zone image by condition ID$whenever(additionalConditionRepository.findById(1L)).thenReturn(Optional.of(anAdditionalConditionEntityWithUpload))</ID>
    <ID>MaxLineLength:PublicLicenceServiceTest.kt$PublicLicenceServiceTest.Get licence by CRN$fun</ID>
    <ID>MaxLineLength:PublicLicenceServiceTest.kt$PublicLicenceServiceTest.Get licence by id$fun</ID>
    <ID>MaxLineLength:PublicLicenceServiceTest.kt$PublicLicenceServiceTest.Get licence by prison number$fun</ID>
    <ID>MaxLineLength:ReleaseDateSearch.kt$ReleaseDateSearch$@Schema(description = "List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null", example = "[\"MDI\"]")</ID>
    <ID>MaxLineLength:ReleaseDateSearch.kt$ReleaseDateSearch$@Schema(description = "The lower bound for the release date range of which to search - defaults to today if not provided", example = "2022-04-20")</ID>
    <ID>MaxLineLength:ReleaseDateSearch.kt$ReleaseDateSearch$@Schema(description = "The upper bound for the release date range of which to search. A required field.", example = "2022-05-20")</ID>
    <ID>MaxLineLength:ReleaseDateService.kt$ReleaseDateService$@Value("\${maxNumberOfWorkingDaysAllowedForEarlyRelease:3}") private val maxNumberOfWorkingDaysAllowedForEarlyRelease: Int = 3</ID>
    <ID>MaxLineLength:ReleaseDateService.kt$ReleaseDateService$@Value("\${maxNumberOfWorkingDaysToTriggerAllocationWarningEmail:5}") private val maxNumberOfWorkingDaysToTriggerAllocationWarningEmail: Int = 5</ID>
    <ID>MaxLineLength:ReleaseDateService.kt$ReleaseDateService$if (conditionalReleaseDate.isNonWorkingDay()) 1.workingDaysBefore(conditionalReleaseDate) else conditionalReleaseDate</ID>
    <ID>MaxLineLength:ReleaseDateServiceTest.kt$ReleaseDateServiceTest$fun getCutOffDateForLicenceTimeOut(now: Clock? = null): LocalDate</ID>
    <ID>MaxLineLength:ReleaseDateServiceTest.kt$ReleaseDateServiceTest$private</ID>
    <ID>MaxLineLength:ReleaseDateServiceTest.kt$ReleaseDateServiceTest.Earliest release date$fun</ID>
    <ID>MaxLineLength:ReleaseDateServiceTest.kt$ReleaseDateServiceTest.Get hard stop date$fun</ID>
    <ID>MaxLineLength:ReleaseDateServiceTest.kt$ReleaseDateServiceTest.Licence start date.Determine alternative licence start date$fun</ID>
    <ID>MaxLineLength:ReleaseDateServiceTest.kt$ReleaseDateServiceTest.Licence timeout cutoff date$fun</ID>
    <ID>MaxLineLength:RemoveExpiredConditionsController.kt$RemoveExpiredConditionsController$description = "Triggers a job that removes AP conditions for all licences that are in PSS period and status equal to 'VARIATION_IN_PROGRESS' or 'VARIATION_SUBMITTED' or 'VARIATION_REJECTED' or 'VARIATION_APPROVED'."</ID>
    <ID>MaxLineLength:RemoveExpiredConditionsService.kt$RemoveExpiredConditionsService$log.info("Job removeExpiredConditions in PSS period deleted AP and Bespoke conditions on ${licencesInPSSPeriod.size} licences")</ID>
    <ID>MaxLineLength:SarLicence.kt$SarLicence$@Schema(description = "The UK telephone number to contact the person the offender should meet for their initial meeting", example = "0114 2557665")</ID>
    <ID>MaxLineLength:SarLicence.kt$SarLicence$@Schema(description = "The address of initial appointment", example = "Manchester Probation Service, Unit 4, Smith Street, Stockport, SP1 3DN")</ID>
    <ID>MaxLineLength:SarLicence.kt$SarLicence$@Schema(description = "The date and time that this licence was submitted for approval", example = "24/08/2022 11:30:33")</ID>
    <ID>MaxLineLength:SarLicence.kt$SarLicence$@Schema(description = "The date and time that this licence was superseded by a new variant", example = "24/08/2022 11:30:33")</ID>
    <ID>MaxLineLength:SarLicence.kt$SarLicence$@Schema(description = "The full name of the person who approved the licence on behalf of the prison governor", example = "John Smith")</ID>
    <ID>MaxLineLength:SendNeedsApprovalReminderController.kt$SendNeedsApprovalReminderController$class</ID>
    <ID>MaxLineLength:SendNeedsApprovalReminderController.kt$SendNeedsApprovalReminderController$description = "Send an email to probation practitioner of any previously approved licences that have been edited but not re-approved by prisoners release date"</ID>
    <ID>MaxLineLength:SendNeedsApprovalReminderService.kt$SendNeedsApprovalReminderService$log.info("Found {} previously approved licences that have been edited but not re-approved by prisoners release date ", licences.size)</ID>
    <ID>MaxLineLength:StaffController.kt$StaffController$description = "Create/updates the details of a community offender manager (e.g. email address). Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:StaffController.kt$StaffController$description = "Create/updates the details of a prison user (e.g. email address). Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:StaffController.kt$StaffController$description = "Retrieve the individual and team count of cases that the probation practitioner needs to review. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:StaffController.kt$StaffController$description = "Search for offenders on a given staff member's caseload. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:StaffRepository.kt$StaffRepository$fun findByStaffIdentifierOrUsernameIgnoreCase(staffIdentifier: Long, username: String): List&lt;CommunityOffenderManager&gt;?</ID>
    <ID>MaxLineLength:StaffService.kt$StaffService$private</ID>
    <ID>MaxLineLength:StandardCondition.kt$StandardCondition$@Schema(description = "The code shared by all instances of this condition", example = "5a105297-dce1-4d18-b9ea-4195b46b7594")</ID>
    <ID>MaxLineLength:StandardConditionAp.kt$StandardConditionAp$@Schema(description = "The unique code for this standard AP condition", example = "9ce9d594-e346-4785-9642-c87e764bee37")</ID>
    <ID>MaxLineLength:StandardConditionPss.kt$StandardConditionPss$@Schema(description = "The unique code for this standard PSS condition", example = "9ce9d594-e346-4785-9642-c87e764bee37")</ID>
    <ID>MaxLineLength:SubjectAccessRequestControllerTest.kt$SubjectAccessRequestControllerTest$private</ID>
    <ID>MaxLineLength:SubjectAccessRequestService.kt$SubjectAccessRequestService$private</ID>
    <ID>MaxLineLength:SupportController.kt$SupportController$description = "Returns IS-91 status for creating a licence for a specific prisoner. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:SupportController.kt$SupportController$description = "Returns ineligibility reasons for creating a licence for a specific prisoner. Requires ROLE_SYSTEM_USER or ROLE_CVL_ADMIN."</ID>
    <ID>MaxLineLength:SupportService.kt$SupportService$private fun PrisonerSearchPrisoner.isApprovedForHdc()</ID>
    <ID>MaxLineLength:TimeOutLicencesController.kt$TimeOutLicencesController$description = "Triggers a job that causes licences with a status of IN_PROGRESS and a CRD or ARD less than two working days to be updated to TIMED_OUT."</ID>
    <ID>MaxLineLength:ToEntityTransformers.kt$fun</ID>
    <ID>MaxLineLength:ToModelTransformers.kt$additionalLicenceConditions = licence.additionalConditions.transformToModelAdditional("AP", conditionSubmissionStatus)</ID>
    <ID>MaxLineLength:ToModelTransformers.kt$fun</ID>
    <ID>MaxLineLength:ToModelTransformers.kt$private fun Licence.valueNotPresent(fieldName: String): Nothing</ID>
    <ID>MaxLineLength:ToModelTransformers.kt$private fun List&lt;AdditionalConditionAp&gt;.transformToModelPublicApAdditionalCondition(): List&lt;ModelPublicAdditionalCondition&gt;</ID>
    <ID>MaxLineLength:ToModelTransformers.kt$private fun List&lt;AdditionalConditionPss&gt;.transformToModelPublicPssAdditionalCondition(): List&lt;ModelPublicAdditionalCondition&gt;</ID>
    <ID>MaxLineLength:ToModelTransformers.kt$private fun List&lt;StandardConditionAp&gt;.transformToModelPublicApStandardCondition(): List&lt;ModelPublicStandardCondition&gt;</ID>
    <ID>MaxLineLength:ToModelTransformers.kt$private fun List&lt;StandardConditionPss&gt;.transformToModelPublicPssStandardCondition(): List&lt;ModelPublicStandardCondition&gt;</ID>
    <ID>MaxLineLength:ToSarModelTransfer.kt$fun</ID>
    <ID>MaxLineLength:ToSarModelTransfer.kt$fun List&lt;AdditionalCondition&gt;.transformToSarAdditionalConditions(): List&lt;SarAdditionalCondition&gt;</ID>
    <ID>MaxLineLength:ToSarModelTransfer.kt$fun List&lt;AdditionalConditionUploadSummary&gt;.transformToSarAdditionalConditionUploadSummary(): List&lt;SarAdditionalConditionUploadSummary&gt;</ID>
    <ID>MaxLineLength:ToSarModelTransfer.kt$fun List&lt;StandardCondition&gt;.transformToSarStandardConditions(): List&lt;SarStandardCondition&gt;</ID>
    <ID>MaxLineLength:TopicHealthCheckTest.kt$TopicHealthCheckTest$.</ID>
    <ID>MaxLineLength:UpdateOffenderDetailsRequest.kt$UpdateOffenderDetailsRequest$@Schema(description = "The offender's date of birth, from either prison or probation services", example = "12/12/2001")</ID>
    <ID>MaxLineLength:UpdateSentenceDateService.kt$UpdateSentenceDateService$"Licence end date has changed to ${updatedLicenceEntity.licenceExpiryDate?.format(dateFormat)}" to sentenceChanges.ledChanged</ID>
    <ID>MaxLineLength:UpdateSentenceDateService.kt$UpdateSentenceDateService$"Release date has changed to ${updatedLicenceEntity.licenceStartDate?.format(dateFormat)}" to sentenceChanges.lsdChanged</ID>
    <ID>MaxLineLength:UpdateSentenceDateService.kt$UpdateSentenceDateService$"Sentence end date has changed to ${updatedLicenceEntity.sentenceEndDate?.format(dateFormat)}" to sentenceChanges.sedChanged</ID>
    <ID>MaxLineLength:UpdateSentenceDateServiceTest.kt$UpdateSentenceDateServiceTest$whenever(licenceRepository.findById(1L)).thenReturn(Optional.of(aCrdLicenceEntity.copy(statusCode = LicenceStatus.ACTIVE)))</ID>
    <ID>MaxLineLength:UpdateSentenceDateServiceTest.kt$UpdateSentenceDateServiceTest$whenever(licenceRepository.findById(1L)).thenReturn(Optional.of(aCrdLicenceEntity.copy(statusCode = LicenceStatus.IN_PROGRESS)))</ID>
    <ID>MaxLineLength:UpdateSentenceDatesIntegrationTest.kt$UpdateSentenceDatesIntegrationTest$fun</ID>
    <ID>MaxLineLength:VariationLicence.kt$VariationLicence$@Schema(description = "If ARD||CRD falls on Friday/Bank holiday/Weekend then it contains Earliest possible release date or ARD||CRD")</ID>
    <ID>MaxLineLength:VariationLicence.kt$VariationLicence$@Schema(description = "Type of this licence", example = LicenceKinds.VARIATION, allowableValues = [LicenceKinds.VARIATION])</ID>
    <ID>MaxLineLength:WarnHardStopReviewOverdueController.kt$WarnHardStopReviewOverdueController$description = "Triggers a job that sends a notification when the COM has not reviewed a hard stop licence 5 days after activation."</ID>
    <ID>MaxLineLength:build.gradle.kts$config.setFrom("$projectDir/detekt.yml")</ID>
    <ID>MayBeConst:LicenceCreationServiceTest.kt$LicenceCreationServiceTest.Companion$val prisonNumber = "NOMSID"</ID>
    <ID>MayBeConst:OutboundEventsPublisherTest.kt$OutboundEventsPublisherTest.Companion$val anArn = "arn:aws:sns:eu-west-2:000000000000:domainevents-topic"</ID>
    <ID>MemberNameEqualsClassName:LicenceConditionServiceTest.kt$LicenceConditionServiceTest.update additional condition data$@Test fun `update additional condition data`()</ID>
    <ID>MemberNameEqualsClassName:LicenceConditionServiceTest.kt$LicenceConditionServiceTest.update additional conditions$@Test fun `update additional conditions`()</ID>
    <ID>MemberNameEqualsClassName:PublicLicenceServiceIntegrationTest.kt$PublicLicenceServiceIntegrationTest.Get exclusion zone image by condition ID$@Test @Sql( "classpath:test_data/seed-licence-id-2.sql", "classpath:test_data/add-upload-to-licence-id-2.sql", ) fun `Get exclusion zone image by condition ID`()</ID>
    <ID>MemberNameEqualsClassName:PublicLicenceServiceIntegrationTest.kt$PublicLicenceServiceIntegrationTest.Get licences by CRN$@Test @Sql( "classpath:test_data/seed-licence-id-1.sql", ) fun `Get licences by CRN`()</ID>
    <ID>MemberNameEqualsClassName:PublicLicenceServiceIntegrationTest.kt$PublicLicenceServiceIntegrationTest.Get licences by prisoner number$@Test @Sql( "classpath:test_data/seed-licence-id-1.sql", ) fun `Get licences by prisoner number`()</ID>
    <ID>ReturnCount:CaCaseloadService.kt$CaCaseloadService$fun findLatestLicenceSummary(licences: List&lt;LicenceSummary&gt;): LicenceSummary?</ID>
    <ID>ReturnCount:ComCaseloadService.kt$ComCaseloadService$private fun findLicenceToDisplay(case: ManagedCase): CaseLoadLicenceSummary</ID>
    <ID>ReturnCount:EndpointSecurityTest.kt$EndpointSecurityTest$private fun AnnotatedElement.isProtectedByAnnotation(): Boolean</ID>
    <ID>ReturnCount:ExclusionZoneService.kt$ExclusionZoneService$fun createThumbnailImageJpeg(fullSizeImage: ByteArray?, width: Int = 150, height: Int = 200): ByteArray?</ID>
    <ID>ReturnCount:LsdRecalculationService.kt$LsdRecalculationService$@Transactional fun batchUpdateLicenceStartDate(numberOfLicences: Long, lastUpdatedLicenceId: Long = 0): Long</ID>
    <ID>ReturnCount:NotifyService.kt$NotifyService$private fun sendEmail( templateId: String, emailAddress: String, values: Map&lt;String, Any&gt;, ): Boolean</ID>
    <ID>ReturnCount:PrisonApproverService.kt$PrisonApproverService$private fun findOriginalLicenceForVariation(variationLicence: Variation): Licence</ID>
    <ID>ReturnCount:StaffService.kt$StaffService$@Transactional fun updateComDetails(comDetails: UpdateComRequest): CommunityOffenderManager</ID>
    <ID>SpreadOperator:CreateAndVaryALicenceApi.kt$(*args)</ID>
    <ID>SwallowedException:LocalStackContainer.kt$LocalStackContainer$e: IOException</ID>
    <ID>TooManyFunctions:AuditService.kt$AuditService</ID>
    <ID>TooManyFunctions:CaCaseloadService.kt$CaCaseloadService</ID>
    <ID>TooManyFunctions:CaseloadController.kt$CaseloadController</ID>
    <ID>TooManyFunctions:ComCaseloadService.kt$ComCaseloadService</ID>
    <ID>TooManyFunctions:CrdLicence.kt$CrdLicence : Licence</ID>
    <ID>TooManyFunctions:DeliusApiClient.kt$DeliusApiClient</ID>
    <ID>TooManyFunctions:EligibilityService.kt$EligibilityService</ID>
    <ID>TooManyFunctions:HardStopLicence.kt$HardStopLicence : Licence</ID>
    <ID>TooManyFunctions:HdcLicence.kt$HdcLicence : Licence</ID>
    <ID>TooManyFunctions:HdcVariationLicence.kt$HdcVariationLicence : LicenceVariation</ID>
    <ID>TooManyFunctions:JPASpecificationDSL.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.kotlinjpaspecificationdsl.JPASpecificationDSL.kt</ID>
    <ID>TooManyFunctions:Licence.kt$Licence : SentenceDateHolder</ID>
    <ID>TooManyFunctions:LicenceConditionService.kt$LicenceConditionService</ID>
    <ID>TooManyFunctions:LicenceController.kt$LicenceController</ID>
    <ID>TooManyFunctions:LicencePolicyService.kt$LicencePolicyService</ID>
    <ID>TooManyFunctions:LicenceRepository.kt$LicenceRepository : JpaRepositoryJpaSpecificationExecutor</ID>
    <ID>TooManyFunctions:LicenceService.kt$LicenceService</ID>
    <ID>TooManyFunctions:NotifyService.kt$NotifyService</ID>
    <ID>TooManyFunctions:ReleaseDateService.kt$ReleaseDateService</ID>
    <ID>TooManyFunctions:ToModelTransformers.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.service.ToModelTransformers.kt</ID>
    <ID>TooManyFunctions:ToModelTransformers.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.service.publicApi.ToModelTransformers.kt</ID>
    <ID>TooManyFunctions:ToSarModelTransfer.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.resource.publicApi.model.subjectAccessRequest.ToSarModelTransfer.kt</ID>
    <ID>TooManyFunctions:VariationLicence.kt$VariationLicence : LicenceVariation</ID>
    <ID>UnusedParameter:ComCaseloadServiceTest.kt$ComCaseloadServiceTest$id: Long</ID>
    <ID>UnusedParameter:ConditionController.kt$ConditionController$@PathVariable conditionType: String</ID>
  </CurrentIssues>
</SmellBaseline>
