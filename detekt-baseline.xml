<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ComplexCondition:ReleaseDateService.kt$ReleaseDateService$ALT_OUTCOME_CODES.contains(it.legalStatus) || it.paroleEligibilityDate != null &amp;&amp; it.paroleEligibilityDate.isBefore(LocalDate.now()) || iS91BookingIds.contains(it.bookingId?.toLong())</ID>
    <ID>ComplexCondition:ReleaseDateService.kt$ReleaseDateService$ALT_OUTCOME_CODES.contains(nomisRecord.legalStatus) || nomisRecord.paroleEligibilityDate != null &amp;&amp; nomisRecord.paroleEligibilityDate.isBefore(LocalDate.now()) || iS91DeterminationService.isIS91Case(nomisRecord)</ID>
    <ID>ForbiddenComment:HdcService.kt$HdcService.HdcStatuses$* For CA: * Always show started cases regardless of HDC status. * TODO: will need to fix when we start to show prospective HDC cases in caselist * If licence hasn't been started, only show !approved licences.</ID>
    <ID>ForbiddenComment:HdcService.kt$HdcService.HdcStatuses$* For COM: * If licence hasn't been started base on whether licence is approved. * TODO: will need to fix when we start to show prospective HDC cases in caselist * If licence has been started then show when (approved and HDC) or (!approved and !hdc)</ID>
    <ID>LargeClass:LicenceController.kt$LicenceController</ID>
    <ID>LargeClass:LicenceService.kt$LicenceService</ID>
    <ID>LongMethod:CrdLicence.kt$CrdLicence$fun copy( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, ): CrdLicence</ID>
    <ID>LongMethod:CrdLicence.kt$CrdLicence$override fun toString(): String</ID>
    <ID>LongMethod:HardStopLicence.kt$HardStopLicence$fun copy( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: PrisonUser? = this.submittedBy, createdBy: PrisonUser? = this.createdBy, substituteOfId: Long? = this.substituteOfId, reviewDate: LocalDateTime? = this.reviewDate, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, ): HardStopLicence</ID>
    <ID>LongMethod:HardStopLicence.kt$HardStopLicence$override fun toString(): String</ID>
    <ID>LongMethod:HdcLicence.kt$HdcLicence$fun copy( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, homeDetentionCurfewActualDate: LocalDate? = this.homeDetentionCurfewActualDate, homeDetentionCurfewEndDate: LocalDate? = this.homeDetentionCurfewEndDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, curfewTimes: List&lt;HdcCurfewTimes&gt; = this.curfewTimes, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, ): HdcLicence</ID>
    <ID>LongMethod:HdcLicence.kt$HdcLicence$override fun toString(): String</ID>
    <ID>LongMethod:LicenceOverrideService.kt$LicenceOverrideService$@Transactional fun changeDates(licenceId: Long, request: OverrideLicenceDatesRequest)</ID>
    <ID>LongMethod:LicenceService.kt$LicenceService$private fun populateCopyAndAudit( kind: LicenceKind, licence: EntityLicence, licenceCopy: EntityLicence, creator: CommunityOffenderManager, ): EntityLicence</ID>
    <ID>LongMethod:LicenceService.kt$LicenceService$private fun updateLicenceStatus(licenceEntity: EntityLicence, request: StatusUpdateRequest)</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toCrd( licence: CrdLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toHardstop( licence: HardStopLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toHdc( licence: HdcLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toVariation( licence: VariationLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, ): ModelVariationLicence</ID>
    <ID>LongMethod:UpdateSentenceDateService.kt$UpdateSentenceDateService$@Transactional fun updateSentenceDates(licenceId: Long, sentenceDatesRequest: UpdateSentenceDatesRequest)</ID>
    <ID>LongMethod:VariationLicence.kt$VariationLicence$fun copy( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, spoDiscussion: String? = this.spoDiscussion, vloDiscussion: String? = this.vloDiscussion, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, variationOfId: Long? = this.variationOfId, licenceVersion: String? = this.licenceVersion, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, updatedBy: Staff? = this.updatedBy, ): VariationLicence</ID>
    <ID>LongMethod:VariationLicence.kt$VariationLicence$override fun toString(): String</ID>
    <ID>LongParameterList:CaCaseloadService.kt$CaCaseloadService$( private val caseloadService: CaseloadService, private val probationSearchApiClient: ProbationSearchApiClient, private val licenceService: LicenceService, private val hdcService: HdcService, private val eligibilityService: EligibilityService, private val clock: Clock, private val deliusApiClient: DeliusApiClient, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val releaseDateService: ReleaseDateService, )</ID>
    <ID>LongParameterList:ComCaseloadSearchService.kt$ComCaseloadSearchService$( private val licenceRepository: LicenceRepository, private val deliusApiClient: DeliusApiClient, private val probationSearchApiClient: ProbationSearchApiClient, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val hdcService: HdcService, private val eligibilityService: EligibilityService, private val releaseDateService: ReleaseDateService, )</ID>
    <ID>LongParameterList:ComCaseloadService.kt$ComCaseloadService$( private val caseloadService: CaseloadService, private val deliusApiClient: DeliusApiClient, private val licenceService: LicenceService, private val eligibilityService: EligibilityService, private val hdcService: HdcService, private val probationSearchApiClient: ProbationSearchApiClient, private val releaseDateService: ReleaseDateService, )</ID>
    <ID>LongParameterList:CommunityOffenderManager.kt$CommunityOffenderManager$( id: Long? = -1, val staffIdentifier: Long, username: String, email: String?, firstName: String?, lastName: String?, lastUpdatedTimestamp: LocalDateTime? = null, )</ID>
    <ID>LongParameterList:CommunityOffenderManager.kt$CommunityOffenderManager$( id: Long? = this.id, staffIdentifier: Long = this.staffIdentifier, username: String = this.username, email: String? = this.email, firstName: String? = this.firstName, lastName: String? = this.lastName, lastUpdatedTimestamp: LocalDateTime? = this.lastUpdatedTimestamp, )</ID>
    <ID>LongParameterList:CrdLicence.kt$CrdLicence$( id: Long = -1L, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointmentPersonType: AppointmentPersonType? = null, appointmentPerson: String? = null, appointmentTime: LocalDateTime? = null, appointmentTimeType: AppointmentTimeType? = null, appointmentAddress: String? = null, appointmentContact: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, val versionOfId: Long? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), responsibleCom: CommunityOffenderManager? = null, updatedBy: Staff? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) var createdBy: CommunityOffenderManager? = null, )</ID>
    <ID>LongParameterList:CrdLicence.kt$CrdLicence$( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, )</ID>
    <ID>LongParameterList:HardStopLicence.kt$HardStopLicence$( id: Long = -1L, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointmentPersonType: AppointmentPersonType? = null, appointmentPerson: String? = null, appointmentTime: LocalDateTime? = null, appointmentTimeType: AppointmentTimeType? = null, appointmentAddress: String? = null, appointmentContact: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), responsibleCom: CommunityOffenderManager? = null, updatedBy: Staff? = null, var reviewDate: LocalDateTime? = null, var substituteOfId: Long? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_ca_id", nullable = false) var createdBy: PrisonUser? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_ca_id", nullable = true) var submittedBy: PrisonUser? = null, )</ID>
    <ID>LongParameterList:HardStopLicence.kt$HardStopLicence$( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: PrisonUser? = this.submittedBy, createdBy: PrisonUser? = this.createdBy, substituteOfId: Long? = this.substituteOfId, reviewDate: LocalDateTime? = this.reviewDate, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, )</ID>
    <ID>LongParameterList:HdcLicence.kt$HdcLicence$( id: Long = -1L, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, override val homeDetentionCurfewActualDate: LocalDate? = null, val homeDetentionCurfewEndDate: LocalDate? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointmentPersonType: AppointmentPersonType? = null, appointmentPerson: String? = null, appointmentTime: LocalDateTime? = null, appointmentTimeType: AppointmentTimeType? = null, appointmentAddress: String? = null, appointmentContact: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, val versionOfId: Long? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), responsibleCom: CommunityOffenderManager? = null, updatedBy: Staff? = null, @OneToMany(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) @OrderBy("curfewTimesSequence") val curfewTimes: List&lt;HdcCurfewTimes&gt; = emptyList(), @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) var createdBy: CommunityOffenderManager? = null, )</ID>
    <ID>LongParameterList:HdcLicence.kt$HdcLicence$( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, homeDetentionCurfewActualDate: LocalDate? = this.homeDetentionCurfewActualDate, homeDetentionCurfewEndDate: LocalDate? = this.homeDetentionCurfewEndDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, curfewTimes: List&lt;HdcCurfewTimes&gt; = this.curfewTimes, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( @Id @GeneratedValue(strategy = GenerationType.IDENTITY) @NotNull var id: Long = -1, @NotNull @Enumerated(EnumType.STRING) @Column(name = "kind", insertable = false, updatable = false) var kind: LicenceKind, @NotNull @Enumerated(EnumType.STRING) var typeCode: LicenceType = LicenceType.AP, var version: String? = null, @NotNull @Enumerated(EnumType.STRING) var statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, val nomsId: String? = null, val bookingNo: String? = null, val bookingId: Long? = null, val crn: String? = null, val pnc: String? = null, val cro: String? = null, val prisonCode: String? = null, val prisonDescription: String? = null, val prisonTelephone: String? = null, val forename: String? = null, val middleNames: String? = null, val surname: String? = null, val dateOfBirth: LocalDate? = null, override val conditionalReleaseDate: LocalDate? = null, override val actualReleaseDate: LocalDate? = null, val sentenceStartDate: LocalDate? = null, val sentenceEndDate: LocalDate? = null, override val licenceStartDate: LocalDate? = null, val licenceExpiryDate: LocalDate? = null, val licenceActivatedDate: LocalDateTime? = null, val topupSupervisionStartDate: LocalDate? = null, val topupSupervisionExpiryDate: LocalDate? = null, val postRecallReleaseDate: LocalDate? = null, val probationAreaCode: String? = null, val probationAreaDescription: String? = null, val probationPduCode: String? = null, val probationPduDescription: String? = null, val probationLauCode: String? = null, val probationLauDescription: String? = null, val probationTeamCode: String? = null, val probationTeamDescription: String? = null, @Enumerated(EnumType.STRING) var appointmentPersonType: AppointmentPersonType? = null, var appointmentPerson: String? = null, @Enumerated(EnumType.STRING) var appointmentTimeType: AppointmentTimeType? = null, var appointmentTime: LocalDateTime? = null, var appointmentAddress: String? = null, var appointmentContact: String? = null, val approvedDate: LocalDateTime? = null, val approvedByUsername: String? = null, val approvedByName: String? = null, val supersededDate: LocalDateTime? = null, val submittedDate: LocalDateTime? = null, var dateCreated: LocalDateTime? = null, var dateLastUpdated: LocalDateTime? = null, var updatedByUsername: String? = null, var licenceVersion: String? = "1.0", @OneToMany( mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true, targetEntity = StandardCondition::class, ) @Fetch(value = FetchMode.SUBSELECT) @OrderBy("conditionSequence") var standardConditions: List&lt;StandardCondition&gt; = emptyList(), @OneToMany(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) @Fetch(value = FetchMode.SUBSELECT) @OrderBy("conditionSequence") val additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), @OneToMany(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) @Fetch(value = FetchMode.SUBSELECT) @OrderBy("conditionSequence") val bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "responsible_com_id", nullable = false) var responsibleCom: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "updated_by_id", nullable = true) var updatedBy: Staff? = null, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( probationAreaCode: String?, probationAreaDescription: String?, probationPduCode: String?, probationPduDescription: String?, probationLauCode: String?, probationLauDescription: String?, probationTeamCode: String?, probationTeamDescription: String?, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( status: LicenceStatus? = null, conditionalReleaseDate: LocalDate?, actualReleaseDate: LocalDate?, sentenceStartDate: LocalDate?, sentenceEndDate: LocalDate?, licenceStartDate: LocalDate?, licenceExpiryDate: LocalDate?, topupSupervisionStartDate: LocalDate?, topupSupervisionExpiryDate: LocalDate?, postRecallReleaseDate: LocalDate?, homeDetentionCurfewActualDate: LocalDate?, homeDetentionCurfewEndDate: LocalDate?, staffMember: Staff?, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( statusCode: LicenceStatus, staffMember: Staff?, approvedByUsername: String?, approvedByName: String?, approvedDate: LocalDateTime?, supersededDate: LocalDateTime?, submittedDate: LocalDateTime?, licenceActivatedDate: LocalDateTime?, )</ID>
    <ID>LongParameterList:LicenceConditionService.kt$LicenceConditionService$( private val licenceRepository: LicenceRepository, private val additionalConditionRepository: AdditionalConditionRepository, private val bespokeConditionRepository: BespokeConditionRepository, private val additionalConditionUploadDetailRepository: AdditionalConditionUploadDetailRepository, private val conditionFormatter: ConditionFormatter, private val licencePolicyService: LicencePolicyService, private val auditService: AuditService, private val staffRepository: StaffRepository, )</ID>
    <ID>LongParameterList:LicenceCreationService.kt$LicenceCreationService$( private val licenceRepository: LicenceRepository, private val staffRepository: StaffRepository, private val standardConditionRepository: StandardConditionRepository, private val additionalConditionRepository: AdditionalConditionRepository, private val licenceEventRepository: LicenceEventRepository, private val licencePolicyService: LicencePolicyService, private val auditEventRepository: AuditEventRepository, private val probationSearchApiClient: ProbationSearchApiClient, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val prisonApiClient: PrisonApiClient, private val deliusApiClient: DeliusApiClient, private val releaseDateService: ReleaseDateService, )</ID>
    <ID>LongParameterList:LicenceFactory.kt$LicenceFactory$( licenceType: LicenceType, nomsId: String, version: String, nomisRecord: PrisonerSearchPrisoner, prisonInformation: Prison, currentResponsibleOfficerDetails: CommunityOrPrisonOffenderManager, deliusRecord: OffenderDetail, creator: CommunityOffenderManager, responsibleCom: CommunityOffenderManager, licenceStartDate: LocalDate?, )</ID>
    <ID>LongParameterList:LicenceFactory.kt$LicenceFactory$( licenceType: LicenceType, nomsId: String, version: String, nomisRecord: PrisonerSearchPrisoner, prisonInformation: Prison, currentResponsibleOfficerDetails: CommunityOrPrisonOffenderManager, deliusRecord: OffenderDetail, creator: PrisonUser, responsibleCom: CommunityOffenderManager, timedOutLicence: CrdLicence?, licenceStartDate: LocalDate?, )</ID>
    <ID>LongParameterList:LicenceService.kt$LicenceService$( private val licenceRepository: LicenceRepository, private val staffRepository: StaffRepository, private val standardConditionRepository: StandardConditionRepository, private val additionalConditionRepository: AdditionalConditionRepository, private val bespokeConditionRepository: BespokeConditionRepository, private val licenceEventRepository: LicenceEventRepository, private val licencePolicyService: LicencePolicyService, private val additionalConditionUploadDetailRepository: AdditionalConditionUploadDetailRepository, private val auditEventRepository: AuditEventRepository, private val notifyService: NotifyService, private val omuService: OmuService, private val releaseDateService: ReleaseDateService, private val domainEventsService: DomainEventsService, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( @Value("\${notify.enabled}") private val enabled: Boolean, @Value("\${self.link}") private val selfLink: String, @Value("\${notify.templates.variationForApproval}") private val variationForApprovalTemplateId: String, @Value("\${notify.templates.variationReApproval}") private val variationForReApprovalTemplateId: String, @Value("\${notify.templates.initialLicencePrompt}") private val initialLicencePromptTemplateId: String, @Value("\${notify.templates.urgentLicencePrompt}") private val urgentLicencePromptTemplateId: String, @Value("\${notify.templates.datesChanged}") private val datesChangedTemplateId: String, @Value("\${notify.templates.variationApproved}") private val variationApprovedTemplateId: String, @Value("\${notify.templates.variationReferred}") private val variationReferredTemplateId: String, @Value("\${notify.templates.unapprovedLicence}") private val unapprovedLicenceByCrdTemplateId: String, @Value("\${notify.templates.hardStopLicenceApproved}") private val hardStopLicenceApprovedTemplateId: String, @Value("\${notify.templates.editedLicenceTimedOut}") private val editedLicenceTimedOutTemplateId: String, @Value("\${notify.templates.hardStopLicenceReviewOverdue}") private val hardStopLicenceReviewOverdueTemplateId: String, @Value("\${notify.templates.notifyAttentionNeededLicences}") private val notifyAttentionNeededLicences: String, @Value("\${internalEmailAddress}") private val internalEmailAddress: String, private val client: NotificationClient, private val releaseDateService: ReleaseDateService, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( creatorEmail: String, creatorName: String, comEmail: String, comName: String, popName: String, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( emailAddress: String?, comName: String, firstName: String, lastName: String, crn: String?, crd: LocalDate?, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( emailAddress: String?, comName: String, firstName: String, lastName: String, crn: String?, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( emailAddress: String?, firstName: String, lastName: String, crn: String?, crd: LocalDate?, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( licenceId: String, emailAddress: String?, comFullName: String, offenderFullName: String, crn: String?, datesChanged: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( notifyRequest: NotifyRequest, licenceId: String, firstName: String, lastName: String, crn: String, comName: String, )</ID>
    <ID>LongParameterList:PrisonUser.kt$PrisonUser$( id: Long? = this.id, username: String = this.username, email: String? = this.email, firstName: String? = this.firstName, lastName: String? = this.lastName, lastUpdatedTimestamp: LocalDateTime? = this.lastUpdatedTimestamp, )</ID>
    <ID>LongParameterList:Staff.kt$Staff$( @Id @GeneratedValue(strategy = GenerationType.IDENTITY) @NotNull var id: Long? = -1, @NotNull @Enumerated(EnumType.STRING) @Column(name = "kind", insertable = false, updatable = false) var kind: StaffKind, @Column(unique = true) override val username: String, val email: String?, override val firstName: String?, override val lastName: String?, val lastUpdatedTimestamp: LocalDateTime? = null, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( bookingId: Long?, releaseDate: LocalDate?, licenceType: LicenceType?, licenceStatus: LicenceStatus?, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, releaseDateLabel: String, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: CrdLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: EntityLicence, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: HardStopLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: HdcLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionSubmissionStatus: Map&lt;String, Boolean&gt;, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: Licence, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueForEarlyRelease: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, )</ID>
    <ID>LongParameterList:UpdateSentenceDateService.kt$UpdateSentenceDateService$( private val licenceRepository: LicenceRepository, private val auditEventRepository: AuditEventRepository, private val notifyService: NotifyService, private val prisonApiClient: PrisonApiClient, private val hdcService: HdcService, private val staffRepository: StaffRepository, private val releaseDateService: ReleaseDateService, private val licenceService: LicenceService, )</ID>
    <ID>LongParameterList:VariationLicence.kt$VariationLicence$( id: Long = -1L, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.VARIATION_IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointmentPersonType: AppointmentPersonType? = null, appointmentPerson: String? = null, appointmentTime: LocalDateTime? = null, appointmentTimeType: AppointmentTimeType? = null, appointmentAddress: String? = null, appointmentContact: String? = null, val spoDiscussion: String? = null, val vloDiscussion: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), responsibleCom: CommunityOffenderManager? = null, val variationOfId: Long? = null, licenceVersion: String? = "1.0", updatedBy: Staff? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) var createdBy: CommunityOffenderManager? = null, )</ID>
    <ID>LongParameterList:VariationLicence.kt$VariationLicence$( id: Long = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointmentPersonType: AppointmentPersonType? = this.appointmentPersonType, appointmentPerson: String? = this.appointmentPerson, appointmentTime: LocalDateTime? = this.appointmentTime, appointmentTimeType: AppointmentTimeType? = this.appointmentTimeType, appointmentAddress: String? = this.appointmentAddress, appointmentContact: String? = this.appointmentContact, spoDiscussion: String? = this.spoDiscussion, vloDiscussion: String? = this.vloDiscussion, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, variationOfId: Long? = this.variationOfId, licenceVersion: String? = this.licenceVersion, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, updatedBy: Staff? = this.updatedBy, )</ID>
    <ID>LongParameterList:WebClientConfiguration.kt$WebClientConfiguration$( @Value("\${hmpps.auth.url}") private val oauthApiUrl: String, @Value("\${hmpps.prison.api.url}") private val prisonApiUrl: String, @Value("\${hmpps.prisonregister.api.url}") private val prisonRegisterApiUrl: String, @Value("\${hmpps.delius.api.url}") private val deliusApiUrl: String, @Value("\${hmpps.probationsearch.api.url}") private val probationSearchApiUrl: String, @Value("\${hmpps.prisonersearch.api.url}") private val prisonerSearchApiUrl: String, @Value("\${hmpps.document.api.url}") private val documentApiUrl: String, @Value("\${hmpps.govuk.api.url}") private val govUkApiUrl: String, @Value("\${hmpps.hdc.api.url}") private val hdcApiUrl: String, )</ID>
    <ID>MagicNumber:CaCaseloadService.kt$CaCaseloadService$4</ID>
    <ID>MagicNumber:EligibilityService.kt$EligibilityService$4</ID>
    <ID>MagicNumber:ExclusionZoneService.kt$ExclusionZoneService$100</ID>
    <ID>MagicNumber:ExclusionZoneService.kt$ExclusionZoneService$50</ID>
    <ID>MagicNumber:ExclusionZoneService.kt$ExclusionZoneService$500</ID>
    <ID>MagicNumber:LicenceActivationService.kt$LicenceActivationService$4</ID>
    <ID>MagicNumber:ProbationSearchApiClient.kt$ProbationSearchApiClient$2000</ID>
    <ID>MagicNumber:PromptComService.kt$PromptComService.Companion$4</ID>
    <ID>MagicNumber:SubjectAccessRequestController.kt$SubjectAccessRequestController$209</ID>
    <ID>MatchingDeclarationName:EventSpecifications.kt$EventQueryObject</ID>
    <ID>MatchingDeclarationName:LicenceFunctions.kt$SentenceChanges</ID>
    <ID>MatchingDeclarationName:LicenceSpecifications.kt$LicenceQueryObject</ID>
    <ID>ReturnCount:CaCaseloadService.kt$CaCaseloadService$fun findLatestLicenceSummary(licences: List&lt;LicenceSummary&gt;): LicenceSummary?</ID>
    <ID>ReturnCount:ComCaseloadService.kt$ComCaseloadService$private fun findLicenceToDisplay(case: ManagedCase): CaseLoadLicenceSummary</ID>
    <ID>ReturnCount:ExclusionZoneService.kt$ExclusionZoneService$fun createThumbnailImageJpeg(fullSizeImage: ByteArray?, width: Int = 150, height: Int = 200): ByteArray?</ID>
    <ID>ReturnCount:NotifyService.kt$NotifyService$private fun sendEmail( templateId: String, emailAddress: String, values: Map&lt;String, Any&gt;, ): Boolean</ID>
    <ID>ReturnCount:PrisonApproverService.kt$PrisonApproverService$private fun findOriginalLicenceForVariation(variationLicence: VariationLicence): Licence</ID>
    <ID>ReturnCount:StaffService.kt$StaffService$@Transactional fun updateComDetails(comDetails: UpdateComRequest): CommunityOffenderManager</ID>
    <ID>SpreadOperator:CreateAndVaryALicenceApi.kt$(*args)</ID>
    <ID>TooManyFunctions:AuditService.kt$AuditService</ID>
    <ID>TooManyFunctions:CaCaseloadService.kt$CaCaseloadService</ID>
    <ID>TooManyFunctions:CaseloadController.kt$CaseloadController</ID>
    <ID>TooManyFunctions:ComCaseloadService.kt$ComCaseloadService</ID>
    <ID>TooManyFunctions:CrdLicence.kt$CrdLicence : Licence</ID>
    <ID>TooManyFunctions:EligibilityService.kt$EligibilityService</ID>
    <ID>TooManyFunctions:HardStopLicence.kt$HardStopLicence : Licence</ID>
    <ID>TooManyFunctions:HdcLicence.kt$HdcLicence : Licence</ID>
    <ID>TooManyFunctions:JPASpecificationDSL.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.kotlinjpaspecificationdsl.JPASpecificationDSL.kt</ID>
    <ID>TooManyFunctions:Licence.kt$Licence : SentenceDateHolder</ID>
    <ID>TooManyFunctions:LicenceConditionService.kt$LicenceConditionService</ID>
    <ID>TooManyFunctions:LicenceController.kt$LicenceController</ID>
    <ID>TooManyFunctions:LicencePolicyService.kt$LicencePolicyService</ID>
    <ID>TooManyFunctions:LicenceRepository.kt$LicenceRepository : JpaRepositoryJpaSpecificationExecutor</ID>
    <ID>TooManyFunctions:LicenceService.kt$LicenceService</ID>
    <ID>TooManyFunctions:NotifyService.kt$NotifyService</ID>
    <ID>TooManyFunctions:ReleaseDateService.kt$ReleaseDateService</ID>
    <ID>TooManyFunctions:ToModelTransformers.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.service.ToModelTransformers.kt</ID>
    <ID>TooManyFunctions:ToModelTransformers.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.service.publicApi.ToModelTransformers.kt</ID>
    <ID>TooManyFunctions:ToSarModelTransfer.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.resource.publicApi.model.subjectAccessRequest.ToSarModelTransfer.kt</ID>
    <ID>TooManyFunctions:VariationLicence.kt$VariationLicence : Licence</ID>
    <ID>UnusedParameter:ConditionController.kt$ConditionController$@PathVariable conditionType: String</ID>
  </CurrentIssues>
</SmellBaseline>
