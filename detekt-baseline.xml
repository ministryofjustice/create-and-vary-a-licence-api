<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ForbiddenComment:HdcService.kt$HdcService.HdcStatuses$* For CA: * Always show started cases regardless of HDC status. * TODO: will need to fix when we start to show prospective HDC cases in caselist * If licence hasn't been started, only show !approved licences.</ID>
    <ID>ForbiddenComment:HdcService.kt$HdcService.HdcStatuses$* For COM: * If licence hasn't been started base on whether licence is approved. * TODO: will need to fix when we start to show prospective HDC cases in caselist * If licence has been started then show when (approved and HDC) or (!approved and !hdc)</ID>
    <ID>LargeClass:CaseloadController.kt$CaseloadController</ID>
    <ID>LargeClass:LicenceController.kt$LicenceController</ID>
    <ID>LargeClass:LicenceService.kt$LicenceService</ID>
    <ID>LongMethod:CrdLicence.kt$CrdLicence$override fun toString(): String</ID>
    <ID>LongMethod:HardStopLicence.kt$HardStopLicence$override fun toString(): String</ID>
    <ID>LongMethod:HdcLicence.kt$HdcLicence$fun copy( id: Long? = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, homeDetentionCurfewActualDate: LocalDate? = this.homeDetentionCurfewActualDate, homeDetentionCurfewEndDate: LocalDate? = this.homeDetentionCurfewEndDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointment: Appointment? = AppointmentMapper.copy(this.appointment), approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager = this.responsibleCom, curfewTimes: List&lt;HdcCurfewTimes&gt; = this.curfewTimes, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, curfewAddress: HdcCurfewAddress? = this.curfewAddress, electronicMonitoringProvider: ElectronicMonitoringProvider? = this.electronicMonitoringProvider, ): HdcLicence</ID>
    <ID>LongMethod:HdcLicence.kt$HdcLicence$override fun toString(): String</ID>
    <ID>LongMethod:HdcVariationLicence.kt$HdcVariationLicence$fun copy( id: Long? = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, homeDetentionCurfewActualDate: LocalDate? = this.homeDetentionCurfewActualDate, homeDetentionCurfewEndDate: LocalDate? = this.homeDetentionCurfewEndDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointment: Appointment? = AppointmentMapper.copy(this.appointment), spoDiscussion: String? = this.spoDiscussion, vloDiscussion: String? = this.vloDiscussion, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, variationOfId: Long? = this.variationOfId, licenceVersion: String? = this.licenceVersion, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager = this.responsibleCom, curfewTimes: MutableList&lt;HdcCurfewTimes&gt; = this.curfewTimes.toMutableList(), submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, updatedBy: Staff? = this.updatedBy, curfewAddress: HdcCurfewAddress? = this.curfewAddress, ): HdcVariationLicence</ID>
    <ID>LongMethod:HdcVariationLicence.kt$HdcVariationLicence$override fun toString(): String</ID>
    <ID>LongMethod:LicenceOverrideService.kt$LicenceOverrideService$@Transactional fun changeDates(licenceId: Long, request: OverrideLicenceDatesRequest)</ID>
    <ID>LongMethod:LicenceService.kt$LicenceService$@Transactional fun submitLicence(licenceId: Long, notifyRequest: List&lt;NotifyRequest&gt;?)</ID>
    <ID>LongMethod:LicenceService.kt$LicenceService$private fun populateCopyAndAudit( kind: LicenceKind, licence: EntityLicence, licenceCopy: EntityLicence, creator: CommunityOffenderManager, ): EntityLicence</ID>
    <ID>LongMethod:LicenceService.kt$LicenceService$private fun updateLicenceStatus(licenceEntity: EntityLicence, request: StatusUpdateRequest)</ID>
    <ID>LongMethod:PrrdLicence.kt$PrrdLicence$override fun toString(): String</ID>
    <ID>LongMethod:TimeServedLicence.kt$TimeServedLicence$override fun toString(): String</ID>
    <ID>LongMethod:ToModelTransformers.kt$@TimeServedConsiderations("Is COM required for variation, if so the responsibleCOM would never be null") fun toVariation( licence: VariationLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, conditionPolicyData: Map&lt;String, ConditionPolicyData&gt;, ): ModelVariationLicence</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toCrd( licence: CrdLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionPolicyData: Map&lt;String, ConditionPolicyData&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toHardstop( licence: HardStopLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionPolicyData: Map&lt;String, ConditionPolicyData&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toHdc( licence: HdcLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionPolicyData: Map&lt;String, ConditionPolicyData&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toHdcVariation( licence: HdcVariationLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, conditionPolicyData: Map&lt;String, ConditionPolicyData&gt;, )</ID>
    <ID>LongMethod:ToModelTransformers.kt$fun toPrrd( licence: PrrdLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionPolicyData: Map&lt;String, ConditionPolicyData&gt;, )</ID>
    <ID>LongMethod:VariationLicence.kt$VariationLicence$fun copy( id: Long? = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointment: Appointment? = AppointmentMapper.copy(this.appointment), spoDiscussion: String? = this.spoDiscussion, vloDiscussion: String? = this.vloDiscussion, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, variationOfId: Long? = this.variationOfId, licenceVersion: String? = this.licenceVersion, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, updatedBy: Staff? = this.updatedBy, ): VariationLicence</ID>
    <ID>LongMethod:VariationLicence.kt$VariationLicence$override fun toString(): String</ID>
    <ID>LongParameterList:Address.kt$Address$( id: Long? = null, @Column(nullable = false, unique = true) val reference: String, // Unique Property Reference Number @Column(nullable = true, unique = false) var uprn: String? = null, @Column(name = "first_line", nullable = false) var firstLine: String, @Column(name = "second_line") var secondLine: String? = null, @Column(name = "town_or_city", nullable = false) var townOrCity: String, @Column var county: String? = null, @Column(nullable = false) var postcode: String, @Enumerated(EnumType.STRING) @Column(name = "source", nullable = false) var source: AddressSource, val createdTimestamp: LocalDateTime = LocalDateTime.now(), var lastUpdatedTimestamp: LocalDateTime = LocalDateTime.now(), )</ID>
    <ID>LongParameterList:Appointment.kt$Appointment$( id: Long? = null, @Enumerated(EnumType.STRING) var personType: AppointmentPersonType? = null, var person: String? = null, @Enumerated(EnumType.STRING) var timeType: AppointmentTimeType? = null, var time: LocalDateTime? = null, var telephoneContactNumber: String? = null, var alternativeTelephoneContactNumber: String? = null, var addressText: String? = null, @OneToOne( cascade = [CascadeType.ALL], fetch = FetchType.LAZY, orphanRemoval = true, ) @JoinTable( name = "APPOINTMENT_ADDRESS", joinColumns = [JoinColumn(name = "appointment_id")], inverseJoinColumns = [JoinColumn(name = "address_id")], uniqueConstraints = [UniqueConstraint(columnNames = ["appointment_id", "address_id"])], ) var address: Address? = null, var dateCreated: LocalDateTime? = LocalDateTime.now(), var dateLastUpdated: LocalDateTime? = null, )</ID>
    <ID>LongParameterList:CaCaseloadService.kt$CaCaseloadService$( private val caseloadService: CaseloadService, private val licenceService: LicenceService, private val hdcService: HdcService, private val eligibilityService: EligibilityService, private val clock: Clock, private val deliusApiClient: DeliusApiClient, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val releaseDateService: ReleaseDateService, private val releaseDateLabelFactory: ReleaseDateLabelFactory, )</ID>
    <ID>LongParameterList:ComCaseloadSearchService.kt$ComCaseloadSearchService$( private val licenceRepository: LicenceRepository, private val deliusApiClient: DeliusApiClient, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val hdcService: HdcService, private val eligibilityService: EligibilityService, private val releaseDateService: ReleaseDateService, private val clock: Clock, private val releaseDateLabelFactory: ReleaseDateLabelFactory, )</ID>
    <ID>LongParameterList:ComCreateCaseloadService.kt$ComCreateCaseloadService$( private val caseloadService: CaseloadService, private val deliusApiClient: DeliusApiClient, private val licenceService: LicenceService, private val eligibilityService: EligibilityService, private val hdcService: HdcService, private val licenceCreationService: LicenceCreationService, private val releaseDateService: ReleaseDateService, )</ID>
    <ID>LongParameterList:CommunityOffenderManager.kt$CommunityOffenderManager$( id: Long? = null, var staffIdentifier: Long, @Column(name = "delius_staff_code") var staffCode: String?, username: String, email: String?, firstName: String?, lastName: String?, lastUpdatedTimestamp: LocalDateTime? = null, )</ID>
    <ID>LongParameterList:CommunityOffenderManager.kt$CommunityOffenderManager$( id: Long? = this.id, staffIdentifier: Long = this.staffIdentifier, staffCode: String? = this.staffCode, username: String = this.username, email: String? = this.email, firstName: String? = this.firstName, lastName: String? = this.lastName, lastUpdatedTimestamp: LocalDateTime? = this.lastUpdatedTimestamp, )</ID>
    <ID>LongParameterList:CrdLicence.kt$CrdLicence$( id: Long? = null, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointment: Appointment? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), updatedBy: Staff? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) var createdBy: CommunityOffenderManager? = null, @OneToOne( mappedBy = "licence", cascade = [CascadeType.ALL], fetch = FetchType.EAGER, optional = true, orphanRemoval = true, ) override var electronicMonitoringProvider: ElectronicMonitoringProvider? = null, override var versionOfId: Long? = null, @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "responsible_com_id", nullable = false) override var responsibleCom: CommunityOffenderManager, )</ID>
    <ID>LongParameterList:CrdLicence.kt$CrdLicence$( id: Long? = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointment: Appointment? = AppointmentMapper.copy(this.appointment), approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, electronicMonitoringProvider: ElectronicMonitoringProvider? = this.electronicMonitoringProvider, )</ID>
    <ID>LongParameterList:HardStopLicence.kt$HardStopLicence$( id: Long? = null, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointment: Appointment? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), updatedBy: Staff? = null, var reviewDate: LocalDateTime? = null, var substituteOfId: Long? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_ca_id", nullable = false) var createdBy: PrisonUser? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_ca_id", nullable = true) var submittedBy: PrisonUser? = null, @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "responsible_com_id", nullable = false) override var responsibleCom: CommunityOffenderManager, )</ID>
    <ID>LongParameterList:HardStopLicence.kt$HardStopLicence$( id: Long? = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointment: Appointment? = AppointmentMapper.copy(this.appointment), approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager = this.responsibleCom, submittedBy: PrisonUser? = this.submittedBy, createdBy: PrisonUser? = this.createdBy, substituteOfId: Long? = this.substituteOfId, reviewDate: LocalDateTime? = this.reviewDate, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, )</ID>
    <ID>LongParameterList:HdcLicence.kt$HdcLicence$( id: Long? = null, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, override var homeDetentionCurfewActualDate: LocalDate? = null, var homeDetentionCurfewEndDate: LocalDate? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointment: Appointment? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, val versionOfId: Long? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), updatedBy: Staff? = null, @OneToMany( mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true, targetEntity = HdcCurfewTimes::class, ) @OrderBy("curfewTimesSequence") override var curfewTimes: MutableList&lt;HdcCurfewTimes&gt; = mutableListOf(), @OneToOne(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) override val curfewAddress: HdcCurfewAddress? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) var createdBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "responsible_com_id", nullable = false) override var responsibleCom: CommunityOffenderManager, @OneToOne( mappedBy = "licence", cascade = [CascadeType.ALL], fetch = FetchType.EAGER, optional = true, orphanRemoval = true, ) override var electronicMonitoringProvider: ElectronicMonitoringProvider? = null, )</ID>
    <ID>LongParameterList:HdcLicence.kt$HdcLicence$( id: Long? = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, homeDetentionCurfewActualDate: LocalDate? = this.homeDetentionCurfewActualDate, homeDetentionCurfewEndDate: LocalDate? = this.homeDetentionCurfewEndDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointment: Appointment? = AppointmentMapper.copy(this.appointment), approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager = this.responsibleCom, curfewTimes: List&lt;HdcCurfewTimes&gt; = this.curfewTimes, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, curfewAddress: HdcCurfewAddress? = this.curfewAddress, electronicMonitoringProvider: ElectronicMonitoringProvider? = this.electronicMonitoringProvider, )</ID>
    <ID>LongParameterList:HdcVariationLicence.kt$HdcVariationLicence$( id: Long? = null, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.VARIATION_IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, override val homeDetentionCurfewActualDate: LocalDate? = null, val homeDetentionCurfewEndDate: LocalDate? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointment: Appointment? = null, override var spoDiscussion: String? = null, override var vloDiscussion: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), override var variationOfId: Long? = null, licenceVersion: String? = "1.0", updatedBy: Staff? = null, @OneToMany(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) @OrderBy("curfewTimesSequence") override var curfewTimes: MutableList&lt;HdcCurfewTimes&gt; = mutableListOf(), @OneToOne(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) override val curfewAddress: HdcCurfewAddress? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) override var createdBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "responsible_com_id", nullable = false) override var responsibleCom: CommunityOffenderManager, )</ID>
    <ID>LongParameterList:HdcVariationLicence.kt$HdcVariationLicence$( id: Long? = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, homeDetentionCurfewActualDate: LocalDate? = this.homeDetentionCurfewActualDate, homeDetentionCurfewEndDate: LocalDate? = this.homeDetentionCurfewEndDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointment: Appointment? = AppointmentMapper.copy(this.appointment), spoDiscussion: String? = this.spoDiscussion, vloDiscussion: String? = this.vloDiscussion, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, variationOfId: Long? = this.variationOfId, licenceVersion: String? = this.licenceVersion, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager = this.responsibleCom, curfewTimes: MutableList&lt;HdcCurfewTimes&gt; = this.curfewTimes.toMutableList(), submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, updatedBy: Staff? = this.updatedBy, curfewAddress: HdcCurfewAddress? = this.curfewAddress, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( id: Long? = null, @param:NotNull @Enumerated(EnumType.STRING) @Column(name = "kind", insertable = false, updatable = false) var kind: LicenceKind, @param:NotNull @Enumerated(EnumType.STRING) var typeCode: LicenceType = LicenceType.AP, var version: String? = null, @param:NotNull @Enumerated(EnumType.STRING) var statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, val nomsId: String? = null, val bookingNo: String? = null, val bookingId: Long? = null, val crn: String? = null, val pnc: String? = null, val cro: String? = null, var prisonCode: String? = null, var prisonDescription: String? = null, var prisonTelephone: String? = null, var forename: String? = null, var middleNames: String? = null, var surname: String? = null, var dateOfBirth: LocalDate? = null, override var conditionalReleaseDate: LocalDate? = null, override var actualReleaseDate: LocalDate? = null, var sentenceStartDate: LocalDate? = null, var sentenceEndDate: LocalDate? = null, override var licenceStartDate: LocalDate? = null, var licenceExpiryDate: LocalDate? = null, var licenceActivatedDate: LocalDateTime? = null, var topupSupervisionStartDate: LocalDate? = null, var topupSupervisionExpiryDate: LocalDate? = null, override var postRecallReleaseDate: LocalDate? = null, var probationAreaCode: String? = null, var probationAreaDescription: String? = null, var probationPduCode: String? = null, var probationPduDescription: String? = null, var probationLauCode: String? = null, var probationLauDescription: String? = null, var probationTeamCode: String? = null, var probationTeamDescription: String? = null, @OneToOne(cascade = [CascadeType.ALL], fetch = FetchType.LAZY, orphanRemoval = true) @JoinTable( name = "licence_appointment", joinColumns = [JoinColumn(name = "licence_id")], inverseJoinColumns = [JoinColumn(name = "appointment_id")], ) var appointment: Appointment? = null, var approvedDate: LocalDateTime? = null, var approvedByUsername: String? = null, var approvedByName: String? = null, var supersededDate: LocalDateTime? = null, var submittedDate: LocalDateTime? = null, var dateCreated: LocalDateTime? = null, var dateLastUpdated: LocalDateTime? = null, var updatedByUsername: String? = null, var licenceVersion: String? = "1.0", @OneToMany( mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true, targetEntity = StandardCondition::class, ) @Fetch(value = FetchMode.SUBSELECT) @OrderBy("conditionSequence") var standardConditions: MutableList&lt;StandardCondition&gt; = mutableListOf(), @OneToMany(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) @Fetch(value = FetchMode.SUBSELECT) @OrderBy("conditionSequence") var additionalConditions: MutableList&lt;AdditionalCondition&gt; = mutableListOf(), @OneToMany(mappedBy = "licence", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) @Fetch(value = FetchMode.SUBSELECT) @OrderBy("conditionSequence") var bespokeConditions: MutableList&lt;BespokeCondition&gt; = mutableListOf(), @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "updated_by_id", nullable = true) var updatedBy: Staff? = null, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( probationAreaCode: String?, probationAreaDescription: String?, probationPduCode: String?, probationPduDescription: String?, probationLauCode: String?, probationLauDescription: String?, probationTeamCode: String?, probationTeamDescription: String?, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( status: LicenceStatus? = null, conditionalReleaseDate: LocalDate?, actualReleaseDate: LocalDate?, sentenceStartDate: LocalDate?, sentenceEndDate: LocalDate?, licenceStartDate: LocalDate?, licenceExpiryDate: LocalDate?, topupSupervisionStartDate: LocalDate?, topupSupervisionExpiryDate: LocalDate?, postRecallReleaseDate: LocalDate?, homeDetentionCurfewActualDate: LocalDate?, homeDetentionCurfewEndDate: LocalDate?, staffMember: Staff?, )</ID>
    <ID>LongParameterList:Licence.kt$Licence$( statusCode: LicenceStatus, staffMember: Staff?, approvedByUsername: String?, approvedByName: String?, approvedDate: LocalDateTime?, supersededDate: LocalDateTime?, submittedDate: LocalDateTime?, licenceActivatedDate: LocalDateTime?, )</ID>
    <ID>LongParameterList:LicenceConditionService.kt$LicenceConditionService$( private val licenceRepository: LicenceRepository, private val additionalConditionRepository: AdditionalConditionRepository, private val bespokeConditionRepository: BespokeConditionRepository, private val conditionFormatter: ConditionFormatter, private val licencePolicyService: LicencePolicyService, private val auditService: AuditService, private val staffRepository: StaffRepository, private val electronicMonitoringProgrammeService: ElectronicMonitoringProgrammeService, private val exclusionZoneService: ExclusionZoneService, )</ID>
    <ID>LongParameterList:LicenceCreationService.kt$LicenceCreationService$( private val licenceRepository: LicenceRepository, private val crdLicenceRepository: CrdLicenceRepository, private val staffRepository: StaffRepository, private val standardConditionRepository: StandardConditionRepository, private val additionalConditionRepository: AdditionalConditionRepository, private val licenceEventRepository: LicenceEventRepository, private val licencePolicyService: LicencePolicyService, private val auditEventRepository: AuditEventRepository, private val hdcCurfewAddressRepository: HdcCurfewAddressRepository, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val prisonApiClient: PrisonApiClient, private val deliusApiClient: DeliusApiClient, private val releaseDateService: ReleaseDateService, private val hdcService: HdcService, )</ID>
    <ID>LongParameterList:LicenceFactory.kt$LicenceFactory$( licenceType: LicenceType, nomsId: String, version: String, nomisRecord: PrisonerSearchPrisoner, prisonInformation: Prison, currentResponsibleOfficerDetails: CommunityManager, deliusRecord: ProbationCase, creator: CommunityOffenderManager, responsibleCom: CommunityOffenderManager, licenceStartDate: LocalDate?, )</ID>
    <ID>LongParameterList:LicenceFactory.kt$LicenceFactory$( licenceType: LicenceType, nomsId: String, version: String, nomisRecord: PrisonerSearchPrisoner, prisonInformation: Prison, currentResponsibleOfficerDetails: CommunityManager, deliusRecord: ProbationCase, creator: PrisonUser, responsibleCom: CommunityOffenderManager, timedOutLicence: CrdLicence?, licenceStartDate: LocalDate?, )</ID>
    <ID>LongParameterList:LicenceKind.kt$LicenceKind$( val clazz: Class&lt;out Licence&gt;, val initialStatus: () -&gt; LicenceStatus, val creationEventType: () -&gt; LicenceEventType, val copyEventType: () -&gt; LicenceEventType, val submittedEventType: () -&gt; LicenceEventType, val activatedDomainEventType: () -&gt; LicenceDomainEventType, val inactivatedDomainEventType: () -&gt; LicenceDomainEventType, )</ID>
    <ID>LongParameterList:LicenceService.kt$LicenceService$( private val licenceRepository: LicenceRepository, private val crdLicenceRepository: CrdLicenceRepository, private val staffRepository: StaffRepository, private val licenceEventRepository: LicenceEventRepository, private val licencePolicyService: LicencePolicyService, private val additionalConditionUploadDetailRepository: AdditionalConditionUploadDetailRepository, private val auditEventRepository: AuditEventRepository, private val notifyService: NotifyService, private val omuService: OmuService, private val releaseDateService: ReleaseDateService, private val domainEventsService: DomainEventsService, private val prisonerSearchApiClient: PrisonerSearchApiClient, private val eligibilityService: EligibilityService, private val exclusionZoneService: ExclusionZoneService, private val deliusApiClient: DeliusApiClient, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( @param:Value("\${notify.enabled}") private val enabled: Boolean, @param:Value("\${self.link}") private val selfLink: String, @param:Value("\${notify.templates.variationForApproval}") private val variationForApprovalTemplateId: String, @param:Value("\${notify.templates.variationReApproval}") private val variationForReApprovalTemplateId: String, @param:Value("\${notify.templates.initialLicencePrompt}") private val initialLicencePromptTemplateId: String, @param:Value("\${notify.templates.urgentLicencePrompt}") private val urgentLicencePromptTemplateId: String, @param:Value("\${notify.templates.datesChanged}") private val datesChangedTemplateId: String, @param:Value("\${notify.templates.variationApproved}") private val variationApprovedTemplateId: String, @param:Value("\${notify.templates.variationReferred}") private val variationReferredTemplateId: String, @param:Value("\${notify.templates.unapprovedLicence}") private val unapprovedLicenceByCrdTemplateId: String, @param:Value("\${notify.templates.hardStopLicenceApproved}") private val hardStopLicenceApprovedTemplateId: String, @param:Value("\${notify.templates.editedLicenceTimedOut}") private val editedLicenceTimedOutTemplateId: String, @param:Value("\${notify.templates.hardStopLicenceReviewOverdue}") private val hardStopLicenceReviewOverdueTemplateId: String, @param:Value("\${internalEmailAddress}") private val internalEmailAddress: String, private val client: NotificationClient, private val releaseDateService: ReleaseDateService, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( creatorEmail: String, creatorName: String, comEmail: String, comName: String, popName: String, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( emailAddress: String?, comName: String, firstName: String, lastName: String, crn: String?, crd: LocalDate?, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( emailAddress: String?, comName: String, firstName: String, lastName: String, crn: String?, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( emailAddress: String?, firstName: String, lastName: String, crn: String?, lsd: LocalDate?, licenceId: String, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( emailAddress: String?, firstName: String, lastName: String, prisonerNumber: String?, lsd: LocalDate?, crd: LocalDate? = null, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( licenceId: String, emailAddress: String?, comFullName: String, offenderFullName: String, crn: String?, datesChangedDescription: List&lt;String&gt;, )</ID>
    <ID>LongParameterList:NotifyService.kt$NotifyService$( notifyRequest: NotifyRequest, licenceId: String, firstName: String, lastName: String, crn: String, comName: String, )</ID>
    <ID>LongParameterList:OffenderService.kt$OffenderService$( private val licenceRepository: LicenceRepository, private val auditEventRepository: AuditEventRepository, private val auditService: AuditService, private val notifyService: NotifyService, private val releaseDateService: ReleaseDateService, private val staffRepository: StaffRepository, @param:Value("\${notify.templates.urgentLicencePrompt}") private val urgentLicencePromptTemplateId: String, )</ID>
    <ID>LongParameterList:PrisonUser.kt$PrisonUser$( id: Long? = this.id, username: String = this.username, email: String? = this.email, firstName: String? = this.firstName, lastName: String? = this.lastName, lastUpdatedTimestamp: LocalDateTime? = this.lastUpdatedTimestamp, )</ID>
    <ID>LongParameterList:PrrdLicence.kt$PrrdLicence$( id: Long? = null, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointment: Appointment? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), updatedBy: Staff? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) var createdBy: CommunityOffenderManager? = null, @OneToOne( mappedBy = "licence", cascade = [CascadeType.ALL], fetch = FetchType.EAGER, optional = true, orphanRemoval = true, ) override var electronicMonitoringProvider: ElectronicMonitoringProvider? = null, override var versionOfId: Long? = null, @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "responsible_com_id", nullable = false) override var responsibleCom: CommunityOffenderManager, )</ID>
    <ID>LongParameterList:PrrdLicence.kt$PrrdLicence$( id: Long? = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate = this.postRecallReleaseDate!!, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointment: Appointment? = AppointmentMapper.copy(this.appointment), approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, versionOfId: Long? = this.versionOfId, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, electronicMonitoringProvider: ElectronicMonitoringProvider? = this.electronicMonitoringProvider, )</ID>
    <ID>LongParameterList:Staff.kt$Staff$( @Id @GeneratedValue(strategy = GenerationType.IDENTITY) @field:Positive open val id: Long? = null, @param:NotNull @Enumerated(EnumType.STRING) @Column(name = "kind", insertable = false, updatable = false) var kind: StaffKind, @Column(unique = true) override var username: String, var email: String?, override var firstName: String?, override var lastName: String?, var lastUpdatedTimestamp: LocalDateTime? = null, @OneToMany( cascade = [CascadeType.ALL], fetch = FetchType.LAZY, orphanRemoval = true, ) @JoinTable( name = "STAFF_SAVED_APPOINTMENT_ADDRESS", joinColumns = [JoinColumn(name = "staff_id")], inverseJoinColumns = [JoinColumn(name = "address_id")], uniqueConstraints = [UniqueConstraint(columnNames = ["staff_id", "address_id"])], ) var savedAppointmentAddresses: MutableSet&lt;Address&gt; = mutableSetOf(), )</ID>
    <ID>LongParameterList:TimeServedLicence.kt$TimeServedLicence$( id: Long? = null, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointment: Appointment? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, licenceVersion: String? = "1.0", standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), updatedBy: Staff? = null, var reviewDate: LocalDateTime? = null, var substituteOfId: Long? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_ca_id", nullable = false) var createdBy: PrisonUser? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_ca_id", nullable = true) var submittedBy: PrisonUser? = null, @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "responsible_com_id", nullable = true) var responsibleCom: CommunityOffenderManager? = null, )</ID>
    <ID>LongParameterList:TimeServedLicence.kt$TimeServedLicence$( id: Long? = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointment: Appointment? = AppointmentMapper.copy(this.appointment), approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager? = this.responsibleCom, submittedBy: PrisonUser? = this.submittedBy, createdBy: PrisonUser? = this.createdBy, substituteOfId: Long? = this.substituteOfId, reviewDate: LocalDateTime? = this.reviewDate, licenceVersion: String? = this.licenceVersion, updatedBy: Staff? = this.updatedBy, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( bookingId: Long?, releaseDate: LocalDate?, licenceType: LicenceType?, licenceStatus: LicenceStatus?, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, releaseDateLabel: String, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: CrdLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionPolicyData: Map&lt;String, ConditionPolicyData&gt;, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: HardStopLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionPolicyData: Map&lt;String, ConditionPolicyData&gt;, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: HdcLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionPolicyData: Map&lt;String, ConditionPolicyData&gt;, )</ID>
    <ID>LongParameterList:ToModelTransformers.kt$( licence: PrrdLicence, earliestReleaseDate: LocalDate?, isEligibleForEarlyRelease: Boolean, hardStopDate: LocalDate?, hardStopWarningDate: LocalDate?, isInHardStopPeriod: Boolean, isDueToBeReleasedInTheNextTwoWorkingDays: Boolean, conditionPolicyData: Map&lt;String, ConditionPolicyData&gt;, )</ID>
    <ID>LongParameterList:UpdateSentenceDateService.kt$UpdateSentenceDateService$( private val licenceRepository: LicenceRepository, private val auditEventRepository: AuditEventRepository, private val notifyService: NotifyService, private val prisonApiClient: PrisonApiClient, private val hdcService: HdcService, private val staffRepository: StaffRepository, private val releaseDateService: ReleaseDateService, private val licenceService: LicenceService, )</ID>
    <ID>LongParameterList:VariationLicence.kt$VariationLicence$( id: Long? = null, typeCode: LicenceType, version: String? = null, statusCode: LicenceStatus = LicenceStatus.VARIATION_IN_PROGRESS, nomsId: String? = null, bookingNo: String? = null, bookingId: Long? = null, crn: String? = null, pnc: String? = null, cro: String? = null, prisonCode: String? = null, prisonDescription: String? = null, prisonTelephone: String? = null, forename: String? = null, middleNames: String? = null, surname: String? = null, dateOfBirth: LocalDate? = null, conditionalReleaseDate: LocalDate? = null, actualReleaseDate: LocalDate? = null, sentenceStartDate: LocalDate? = null, sentenceEndDate: LocalDate? = null, licenceStartDate: LocalDate? = null, licenceExpiryDate: LocalDate? = null, licenceActivatedDate: LocalDateTime? = null, topupSupervisionStartDate: LocalDate? = null, topupSupervisionExpiryDate: LocalDate? = null, postRecallReleaseDate: LocalDate? = null, probationAreaCode: String? = null, probationAreaDescription: String? = null, probationPduCode: String? = null, probationPduDescription: String? = null, probationLauCode: String? = null, probationLauDescription: String? = null, probationTeamCode: String? = null, probationTeamDescription: String? = null, appointment: Appointment? = null, override var spoDiscussion: String? = null, override var vloDiscussion: String? = null, approvedDate: LocalDateTime? = null, approvedByUsername: String? = null, approvedByName: String? = null, supersededDate: LocalDateTime? = null, submittedDate: LocalDateTime? = null, dateCreated: LocalDateTime? = null, dateLastUpdated: LocalDateTime? = null, updatedByUsername: String? = null, standardConditions: List&lt;StandardCondition&gt; = emptyList(), additionalConditions: List&lt;AdditionalCondition&gt; = emptyList(), bespokeConditions: List&lt;BespokeCondition&gt; = emptyList(), override var variationOfId: Long? = null, licenceVersion: String? = "1.0", updatedBy: Staff? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "submitted_by_com_id", nullable = true) var submittedBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.LAZY) @JoinColumn(name = "created_by_com_id", nullable = false) override var createdBy: CommunityOffenderManager? = null, @ManyToOne(fetch = FetchType.EAGER) @JoinColumn(name = "responsible_com_id", nullable = false) override var responsibleCom: CommunityOffenderManager, )</ID>
    <ID>LongParameterList:VariationLicence.kt$VariationLicence$( id: Long? = this.id, typeCode: LicenceType = this.typeCode, version: String? = this.version, statusCode: LicenceStatus = this.statusCode, nomsId: String? = this.nomsId, bookingNo: String? = this.bookingNo, bookingId: Long? = this.bookingId, crn: String? = this.crn, pnc: String? = this.pnc, cro: String? = this.cro, prisonCode: String? = this.prisonCode, prisonDescription: String? = this.prisonDescription, prisonTelephone: String? = this.prisonTelephone, forename: String? = this.forename, middleNames: String? = this.middleNames, surname: String? = this.surname, dateOfBirth: LocalDate? = this.dateOfBirth, conditionalReleaseDate: LocalDate? = this.conditionalReleaseDate, actualReleaseDate: LocalDate? = this.actualReleaseDate, sentenceStartDate: LocalDate? = this.sentenceStartDate, sentenceEndDate: LocalDate? = this.sentenceEndDate, licenceStartDate: LocalDate? = this.licenceStartDate, licenceExpiryDate: LocalDate? = this.licenceExpiryDate, licenceActivatedDate: LocalDateTime? = this.licenceActivatedDate, topupSupervisionStartDate: LocalDate? = this.topupSupervisionStartDate, topupSupervisionExpiryDate: LocalDate? = this.topupSupervisionExpiryDate, postRecallReleaseDate: LocalDate? = this.postRecallReleaseDate, probationAreaCode: String? = this.probationAreaCode, probationAreaDescription: String? = this.probationAreaDescription, probationPduCode: String? = this.probationPduCode, probationPduDescription: String? = this.probationPduDescription, probationLauCode: String? = this.probationLauCode, probationLauDescription: String? = this.probationLauDescription, probationTeamCode: String? = this.probationTeamCode, probationTeamDescription: String? = this.probationTeamDescription, appointment: Appointment? = AppointmentMapper.copy(this.appointment), spoDiscussion: String? = this.spoDiscussion, vloDiscussion: String? = this.vloDiscussion, approvedDate: LocalDateTime? = this.approvedDate, approvedByUsername: String? = this.approvedByUsername, approvedByName: String? = this.approvedByName, supersededDate: LocalDateTime? = this.supersededDate, submittedDate: LocalDateTime? = this.submittedDate, dateCreated: LocalDateTime? = this.dateCreated, dateLastUpdated: LocalDateTime? = this.dateLastUpdated, updatedByUsername: String? = this.updatedByUsername, variationOfId: Long? = this.variationOfId, licenceVersion: String? = this.licenceVersion, standardConditions: List&lt;StandardCondition&gt; = this.standardConditions, additionalConditions: List&lt;AdditionalCondition&gt; = this.additionalConditions, bespokeConditions: List&lt;BespokeCondition&gt; = this.bespokeConditions, responsibleCom: CommunityOffenderManager = this.responsibleCom, submittedBy: CommunityOffenderManager? = this.submittedBy, createdBy: CommunityOffenderManager? = this.createdBy, updatedBy: Staff? = this.updatedBy, )</ID>
    <ID>LongParameterList:WebClientConfiguration.kt$WebClientConfiguration$( @param:Value("\${hmpps.auth.url}") private val oauthApiUrl: String, @param:Value("\${hmpps.prison.api.url}") private val prisonApiUrl: String, @param:Value("\${hmpps.prisonregister.api.url}") private val prisonRegisterApiUrl: String, @param:Value("\${hmpps.delius.api.url}") private val deliusApiUrl: String, @param:Value("\${hmpps.workload.api.url}") private val workLoadApiUrl: String, @param:Value("\${hmpps.prisonersearch.api.url}") private val prisonerSearchApiUrl: String, @param:Value("\${hmpps.document.api.url}") private val documentApiUrl: String, @param:Value("\${hmpps.govuk.api.url}") private val govUkApiUrl: String, @param:Value("\${hmpps.hdc.api.url}") private val hdcApiUrl: String, @param:Value("\${os.places.api.url}") private val osPlacesApiUrl: String, )</ID>
    <ID>MagicNumber:AddressSearchService.kt$AddressSearchService$3</ID>
    <ID>MagicNumber:CaCaseloadService.kt$CaCaseloadService$4</ID>
    <ID>MagicNumber:EligibilityService.kt$EligibilityService$4</ID>
    <ID>MagicNumber:HardStopLicenceRepository.kt$HardStopLicenceRepository$5</ID>
    <ID>MagicNumber:HdcLicenceRepository.kt$HdcLicenceRepository$9</ID>
    <ID>MagicNumber:LicenceRepository.kt$LicenceRepository$14</ID>
    <ID>MagicNumber:PromptComService.kt$PromptComService.Companion$4</ID>
    <ID>MagicNumber:SubjectAccessRequestController.kt$SubjectAccessRequestController$209</ID>
    <ID>MatchingDeclarationName:EventSpecifications.kt$EventQueryObject</ID>
    <ID>MatchingDeclarationName:LicenceSpecifications.kt$LicenceQueryObject</ID>
    <ID>ReturnCount:CaCaseloadService.kt$CaCaseloadService$fun findLatestLicenceSummary(licences: List&lt;LicenceSummary&gt;): LicenceSummary?</ID>
    <ID>ReturnCount:ComAllocatedHandler.kt$ComAllocatedHandler$fun isValidOffenderManager(offenderManager: OffenderManager?, crn: String): Boolean</ID>
    <ID>ReturnCount:EligibilityService.kt$EligibilityService$private fun isEligibleIfOnAnExtendedDeterminateSentence(prisoner: PrisonerSearchPrisoner): Boolean</ID>
    <ID>ReturnCount:EligibilityService.kt$EligibilityService$private fun isRecallCase(prisoner: PrisonerSearchPrisoner): Boolean</ID>
    <ID>ReturnCount:LsdRecalculationService.kt$LsdRecalculationService$@Transactional fun batchUpdateLicenceStartDate(numberOfLicences: Long, lastUpdatedLicenceId: Long = 0): Long</ID>
    <ID>ReturnCount:NotifyService.kt$NotifyService$private fun sendEmail( templateId: String, emailAddress: String, values: Map&lt;String, Any&gt;, ): Boolean</ID>
    <ID>SpreadOperator:CreateAndVaryALicenceApi.kt$(*args)</ID>
    <ID>TooGenericExceptionCaught:ComAllocatedHandler.kt$ComAllocatedHandler$e: Exception</ID>
    <ID>TooManyFunctions:AppointmentService.kt$AppointmentService</ID>
    <ID>TooManyFunctions:ApproverCaseloadService.kt$ApproverCaseloadService</ID>
    <ID>TooManyFunctions:AuditService.kt$AuditService</ID>
    <ID>TooManyFunctions:CaCaseloadService.kt$CaCaseloadService</ID>
    <ID>TooManyFunctions:CaseloadController.kt$CaseloadController</ID>
    <ID>TooManyFunctions:ComCreateCaseloadService.kt$ComCreateCaseloadService</ID>
    <ID>TooManyFunctions:ControllerAdvice.kt$ControllerAdvice</ID>
    <ID>TooManyFunctions:DeliusApiClient.kt$DeliusApiClient</ID>
    <ID>TooManyFunctions:EligibilityService.kt$EligibilityService</ID>
    <ID>TooManyFunctions:JPASpecificationDSL.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.kotlinjpaspecificationdsl.JPASpecificationDSL.kt</ID>
    <ID>TooManyFunctions:Licence.kt$Licence : AbstractIdEntitySentenceDateHolder</ID>
    <ID>TooManyFunctions:LicenceConditionService.kt$LicenceConditionService</ID>
    <ID>TooManyFunctions:LicenceController.kt$LicenceController</ID>
    <ID>TooManyFunctions:LicenceFactory.kt$LicenceFactory</ID>
    <ID>TooManyFunctions:LicencePolicyService.kt$LicencePolicyService</ID>
    <ID>TooManyFunctions:LicenceRepository.kt$LicenceRepository : JpaRepositoryJpaSpecificationExecutor</ID>
    <ID>TooManyFunctions:LicenceService.kt$LicenceService</ID>
    <ID>TooManyFunctions:NotifyService.kt$NotifyService</ID>
    <ID>TooManyFunctions:ReleaseDateService.kt$ReleaseDateService</ID>
    <ID>TooManyFunctions:ToEntityTransformers.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.service.ToEntityTransformers.kt</ID>
    <ID>TooManyFunctions:ToModelTransformers.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.service.ToModelTransformers.kt</ID>
    <ID>TooManyFunctions:ToModelTransformers.kt$uk.gov.justice.digital.hmpps.createandvaryalicenceapi.service.publicApi.ToModelTransformers.kt</ID>
    <ID>TooManyFunctions:WebClientConfiguration.kt$WebClientConfiguration</ID>
    <ID>UnusedParameter:ConditionController.kt$ConditionController$@PathVariable conditionType: String</ID>
    <ID>UtilityClassWithPublicConstructor:AppointmentMapper.kt$AppointmentMapper</ID>
  </CurrentIssues>
</SmellBaseline>
