generic-service:
  nameOverride: create-and-vary-a-licence-api
  # Used to access resources like SQS queues and SNS topics
  serviceAccountName: create-and-vary-a-licence-api

  replicaCount: 4

  image:
    repository: quay.io/hmpps/create-and-vary-a-licence-api
    tag: app_version # override at deployment time
    port: 8080

  ingress:
    enabled: true
    hosts: app-hostname.local # override per environment
    tlsSecretName: create-and-vary-a-licence-api-cert
    v1_2_enabled: true
    v0_47_enabled: false
    annotations:
      # Secure the endpoints related to k8s jobs from outside the Kubernetes ingress
      nginx.ingress.kubernetes.io/server-snippet: |
        server_tokens off;
        location /jobs/** {
          deny all;
          return 401;
        }
        location /queue-admin/retry-all-dlqs {
          deny all;
          return 401;
        }


  # Environment variables to load into the deployment
  env:
    JAVA_OPTS: "-Xmx768m"
    SERVER_PORT: "8080"
    SPRING_PROFILES_ACTIVE: "logstash"
    APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=$(APPINSIGHTS_INSTRUMENTATIONKEY);IngestionEndpoint=https://northeurope-0.in.applicationinsights.azure.com/;LiveEndpoint=https://northeurope.livediagnostics.monitor.azure.com/"
    APPLICATIONINSIGHTS_CONFIGURATION_FILE: applicationinsights.json
    DB_SSL_ENABLED: "true"
    HMPPS_GOVUK_API_URL: "https://www.gov.uk"
    HMPPS_SQS_USE_WEB_TOKEN: true
    HMPPS_DOCUMENT_API_READ_ENABLED: false
    HARDSTOP_ENABLED: false
    POLICYV3_ENABLED: true
    FEATURE_TOGGLE_ELECTRONICMONITORINGRESPONSEHANDLING: true
    RECALL_ENABLED: false

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    create-and-vary-a-licence-api:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      INTERNALEMAILADDRESS: "INTERNAL_EMAIL_ADDRESS"
      NOTIFY_API_KEY: "NOTIFY_API_KEY"
      SYSTEM_CLIENT_ID: "SYSTEM_CLIENT_ID"
      SYSTEM_CLIENT_SECRET: "SYSTEM_CLIENT_SECRET"
      OS_PLACES_API_KEY: "OS_PLACES_API_KEY"
    rds-instance-output:
      DB_SERVER: "rds_instance_address"
      DB_NAME: "database_name"
      DB_USER: "database_username"
      DB_PASS: "database_password"
    hmpps-domain-events-topic:
      HMPPS_SQS_TOPICS_DOMAINEVENTS_ARN: "topic_arn"

  allowlist:
    dxw-vpn: 54.76.254.148/32
    groups:
      - internal

generic-prometheus-alerts:
  targetApplication: create-and-vary-a-licence-api

dataExtractorEnabled: true

jobs:
  - name: prompt-licence-creation-job
    enabled: true
    path: /prompt-licence-creation
    cron: "0 9 * * 1" # 9am UTC, Monday
    allowRetry: false

  - name: deactivate-hdc-licences-job
    enabled: true
    path: /deactivate-hdc-licences
    cron: "0 3 * * *" # 3am UTC every day
    allowRetry: true

  - name: activate-licences-job
    enabled: true
    path: /activate-licences
    cron: "0 3,9,12,15,18 * * *" # 3am, 9am, 12pm, 3pm, and 6pm UTC every day
    allowRetry: true

  - name: deactivate-licences-past-release-date-job
    enabled: true
    path: /deactivate-licences-past-release-date
    cron: "0 2 * * 1-5" # 2am UTC Monday - Friday
    allowRetry: true

  - name: expire-licences-job
    enabled: true
    path: /expire-licences
    cron: "0 4 * * *" # 4am every day
    allowRetry: true

  - name: warn-hard-stop-review-overdue-job
    enabled: true
    path: /warn-hard-stop-review-overdue
    cron: "0 8 * * 1-5" # 8am UTC Monday - Friday
    allowRetry: false

  - name: time-out-licences-job
    enabled: true
    path: /time-out-licences
    cron: "30 1 * * 1-5" # 1:30am UTC Monday - Friday
    allowRetry: true

  - name: remove-expired-conditions-job
    enabled: true
    path: /remove-expired-conditions
    cron: "30 1 * * 1-5" # 1:30am UTC Monday - Friday
    allowRetry: true

  - name: notify-probation-of-unapproved-licences-job
    enabled: true
    path: /notify-probation-of-unapproved-licences
    cron: "0 2 * * *" # 2am every day
    allowRetry: false
